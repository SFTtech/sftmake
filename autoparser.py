# LR(1) parser, autogenerated on 2013-03-09 18:45:00
# generator: wisent 0.6.2, http://seehuhn.de/pages/wisent
# source: assignmentgrammar.wi

# All parts of this file which are not taken verbatim from the input grammar
# are covered by the following notice:
#
# Copyright (C) 2008, 2009  Jochen Voss <voss@seehuhn.de>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#   1. Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#
#   2. Redistributions in binary form must reproduce the above
#      copyright notice, this list of conditions and the following
#      disclaimer in the documentation and/or other materials provided
#      with the distribution.
#
#   3. The name of the author may not be used to endorse or promote
#      products derived from this software without specific prior
#      written permission.
#
# This software is provided by the author "as is" and any express or
# implied warranties, including, but not limited to, the implied
# warranties of merchantability and fitness for a particular purpose
# are disclaimed.  In no event shall the author be liable for any
# direct, indirect, incidental, special, exemplary, or consequential
# damages (including, but not limited to, procurement of substitute
# goods or services; loss of use, data, or profits; or business
# interruption) however caused and on any theory of liability, whether
# in contract, strict liability, or tort (including negligence or
# otherwise) arising in any way out of the use of this software, even
# if advised of the possibility of such damage.

from itertools import chain

class Unique(object):

    """Unique objects for use as markers.

    These objects are internally used to represent the start symbol
    and the end-of-input marker of the grammar.
    """

    def __init__(self, label):
        """Create a new unique object.

        `label` is a string which is used as a textual representation
        of the object.
        """
        self.label = label

    def __repr__(self):
        """Return the `label` given at object construction."""
        return self.label

    def __lt__(self, other):
        if isinstance(other, str):
            return self.label < other
        if isinstance(other, Unique):
            return self.label < other.label
        return NotImplemented()

    def __gt__(self, other):
        if isinstance(other, str):
            return self.label > other
        if isinstance(other, Unique):
            return self.label > other.label
        return NotImplemented()

class Parser(object):

    """LR(1) parser class.

    terminal symbols:
      '!', '"', '$', '&', "'", '(', ')', '+', ',', '-', ':', ';', '<', '=',
      '>', 'IDENTIFIER', 'LITERAL', 'VARQUANT', 'VARTYPE', 'WHITESPACE', '[',
      ']', '{', '|', '}', '~'

    nonterminal symbols:
      'assignment', 'assignmentop', 'assignmentvarwithop',
      'assignmentvarwithoutop', 'condition', 'conjunction', 'conjunctionop',
      'declaration', 'disjunction', 'disjunctionop', 'doublequoted',
      'doublequoted_escaped', 'funcall', 'identifier', 'literal', 'logicunop',
      'quantifier', 'singlequoted', 'singlequoted_escaped', 'statement',
      'test', 'testop', 'type', 'value', 'valuelist', 'varcall'

    production rules:
      'statement' -> '_20?' 'declaration'
      'statement' -> '_20?' 'assignment'
      'declaration' -> 'quantifier' 'WHITESPACE' 'type' 'WHITESPACE' 'identifier' '_20?' '_4*'
      '_4*' ->
      '_4*' -> '_4*' ',' '_20?' 'identifier' '_20?'
      'quantifier' -> 'VARQUANT'
      'type' -> 'VARTYPE'
      'assignment' -> '_8*' 'assignmentvarwithop' 'valuelist'
      '_8*' ->
      '_8*' -> '_8*' 'assignmentvarwithop' ','
      '_8*' -> '_8*' 'assignmentvarwithoutop' ','
      'assignmentvarwithop' -> 'identifier' '_20?' '_12?' 'assignmentop'
      'assignmentvarwithoutop' -> 'identifier' '_20?' '_12?'
      '_12?' ->
      '_12?' -> 'condition'
      'identifier' -> 'IDENTIFIER'
      'condition' -> '[' '_20?' 'disjunction' '_20?' ']' '_20?'
      'assignmentop' -> ':' '='
      'assignmentop' -> '+' '='
      'assignmentop' -> '='
      'assignmentop' -> '-' '=' '_20?'
      '_20?' ->
      '_20?' -> 'WHITESPACE'
      'disjunction' -> 'conjunction' '_20?' 'disjunctionop' '_20?' 'conjunction'
      'conjunction' -> 'test' '_20?' 'conjunctionop' '_20?' 'test'
      'test' -> 'identifier' '_20?' 'testop' '_20?' 'value'
      'test' -> '(' '_20?' 'disjunction' '_20?' ')'
      'test' -> 'logicunop' '_20?' 'disjunction'
      'logicunop' -> '!'
      'disjunctionop' -> ';'
      'disjunctionop' -> '|'
      'disjunctionop' -> '|' '|'
      'conjunctionop' -> ','
      'conjunctionop' -> '&'
      'conjunctionop' -> '&' '&'
      'testop' -> '='
      'testop' -> '=' '='
      'testop' -> '!' '='
      'testop' -> '<'
      'testop' -> '>'
      'testop' -> '<' '='
      'testop' -> '>' '='
      'testop' -> '~' '='
      'testop' -> '=' '~'
      'valuelist' -> 'value' '_61*' '_20?'
      'valuelist' ->
      'value' -> '_54+'
      '_(53)' -> 'literal'
      '_(53)' -> 'funcall'
      '_(53)' -> 'varcall'
      '_(53)' -> 'doublequoted'
      '_(53)' -> 'singlequoted'
      '_54+' -> '_(53)'
      '_54+' -> '_54+' '_(53)'
      'doublequoted' -> '"' '_56*' '"'
      '_(55)' -> 'literal'
      '_(55)' -> 'WHITESPACE'
      '_(55)' -> 'doublequoted_escaped'
      '_(55)' -> 'funcall'
      '_(55)' -> 'varcall'
      '_56*' ->
      '_56*' -> '_56*' '_(55)'
      'singlequoted' -> "'" '_58*' "'"
      '_(57)' -> 'literal'
      '_(57)' -> 'WHITESPACE'
      '_(57)' -> 'singlequoted_escaped'
      '_58*' ->
      '_58*' -> '_58*' '_(57)'
      'literal' -> 'IDENTIFIER'
      'literal' -> 'LITERAL'
      'literal' -> 'VARTYPE'
      'literal' -> 'VARQUANT'
      'funcall' -> '$' '(' '_20?' 'value' '_61*' '_20?' ')'
      '_61*' ->
      '_61*' -> '_61*' 'WHITESPACE' 'value'
      'varcall' -> '$' 'identifier'
      'varcall' -> '$' '{' 'value' '}'
      'doublequoted_escaped' -> '!'
      'doublequoted_escaped' -> '='
      'doublequoted_escaped' -> '<'
      'doublequoted_escaped' -> '>'
      'doublequoted_escaped' -> '['
      'doublequoted_escaped' -> ']'
      'doublequoted_escaped' -> '|'
      'doublequoted_escaped' -> '&'
      'doublequoted_escaped' -> ','
      'doublequoted_escaped' -> ';'
      'doublequoted_escaped' -> ':'
      'doublequoted_escaped' -> '~'
      'doublequoted_escaped' -> '+'
      'doublequoted_escaped' -> '-'
      'doublequoted_escaped' -> "'"
      'singlequoted_escaped' -> '!'
      'singlequoted_escaped' -> '='
      'singlequoted_escaped' -> '<'
      'singlequoted_escaped' -> '>'
      'singlequoted_escaped' -> '['
      'singlequoted_escaped' -> ']'
      'singlequoted_escaped' -> '|'
      'singlequoted_escaped' -> '&'
      'singlequoted_escaped' -> ','
      'singlequoted_escaped' -> ';'
      'singlequoted_escaped' -> ':'
      'singlequoted_escaped' -> '~'
      'singlequoted_escaped' -> '+'
      'singlequoted_escaped' -> '-'
      'singlequoted_escaped' -> '"'
      'singlequoted_escaped' -> '$'
      'singlequoted_escaped' -> '('
      'singlequoted_escaped' -> ')'
      'singlequoted_escaped' -> '{'
      'singlequoted_escaped' -> '}'
    """

    class ParseErrors(Exception):

        """Exception class to represent a collection of parse errors.

        Instances of this class have two attributes, `errors` and `tree`.
        `errors` is a list of tuples, each describing one error.
        Each tuple consists of the first input token which could not
        be processed and the list of grammar symbols which were allowed
        at this point.
        `tree` is a "repaired" parse tree which might be used for further
        error checking, or `None` if no repair was possible.
        """

        def __init__(self, errors, tree):
            msg = "%d parse errors"%len(errors)
            Exception.__init__(self, msg)
            self.errors = errors
            self.tree = tree

    terminals = [ '!', '"', '$', '&', "'", '(', ')', '+', ',', '-', ':', ';',
                  '<', '=', '>', 'IDENTIFIER', 'LITERAL', 'VARQUANT',
                  'VARTYPE', 'WHITESPACE', '[', ']', '{', '|', '}', '~' ]
    _transparent = [ '_(53)', '_(55)', '_(57)', '_12?', '_20?', '_4*', '_54+',
                     '_56*', '_58*', '_61*', '_8*' ]
    EOF = Unique('EOF')
    S = Unique('S')

    _halting_state = 165
    _reduce = {
        (0, 'IDENTIFIER'): ('_20?', 0), (0, 'VARQUANT'): ('_20?', 0),
        (2, 'IDENTIFIER'): ('_8*', 0), (3, EOF): ('statement', 2),
        (4, EOF): ('statement', 2), (9, ','): ('_20?', 0),
        (9, EOF): ('_20?', 0), (10, ','): ('_4*', 0), (10, EOF): ('_4*', 0),
        (11, EOF): ('declaration', 7), (12, 'IDENTIFIER'): ('_20?', 0),
        (14, ','): ('_20?', 0), (14, EOF): ('_20?', 0), (15, ','): ('_4*', 5),
        (15, EOF): ('_4*', 5), (16, 'WHITESPACE'): ('quantifier', 1),
        (17, 'WHITESPACE'): ('type', 1), (19, EOF): ('valuelist', 0),
        (20, EOF): ('assignment', 3), (21, 'IDENTIFIER'): ('_8*', 3),
        (23, 'IDENTIFIER'): ('_8*', 3), (24, '+'): ('_20?', 0),
        (24, ','): ('_20?', 0), (24, '-'): ('_20?', 0), (24, ':'): ('_20?', 0),
        (24, '='): ('_20?', 0), (24, '['): ('_20?', 0), (25, '+'): ('_12?', 0),
        (25, ','): ('_12?', 0), (25, '-'): ('_12?', 0), (25, ':'): ('_12?', 0),
        (25, '='): ('_12?', 0), (26, ','): ('assignmentvarwithoutop', 3),
        (27, '"'): ('assignmentvarwithop', 4),
        (27, '$'): ('assignmentvarwithop', 4),
        (27, "'"): ('assignmentvarwithop', 4),
        (27, ','): ('assignmentvarwithop', 4),
        (27, EOF): ('assignmentvarwithop', 4),
        (27, 'IDENTIFIER'): ('assignmentvarwithop', 4),
        (27, 'LITERAL'): ('assignmentvarwithop', 4),
        (27, 'VARQUANT'): ('assignmentvarwithop', 4),
        (27, 'VARTYPE'): ('assignmentvarwithop', 4), (28, '+'): ('_12?', 1),
        (28, ','): ('_12?', 1), (28, '-'): ('_12?', 1), (28, ':'): ('_12?', 1),
        (28, '='): ('_12?', 1), (29, '!'): ('identifier', 1),
        (29, '"'): ('identifier', 1), (29, '$'): ('identifier', 1),
        (29, '&'): ('identifier', 1), (29, "'"): ('identifier', 1),
        (29, ')'): ('identifier', 1), (29, '+'): ('identifier', 1),
        (29, ','): ('identifier', 1), (29, '-'): ('identifier', 1),
        (29, ':'): ('identifier', 1), (29, ';'): ('identifier', 1),
        (29, '<'): ('identifier', 1), (29, '='): ('identifier', 1),
        (29, '>'): ('identifier', 1), (29, EOF): ('identifier', 1),
        (29, 'IDENTIFIER'): ('identifier', 1),
        (29, 'LITERAL'): ('identifier', 1),
        (29, 'VARQUANT'): ('identifier', 1),
        (29, 'VARTYPE'): ('identifier', 1),
        (29, 'WHITESPACE'): ('identifier', 1), (29, '['): ('identifier', 1),
        (29, ']'): ('identifier', 1), (29, '|'): ('identifier', 1),
        (29, '}'): ('identifier', 1), (29, '~'): ('identifier', 1),
        (30, '!'): ('_20?', 0), (30, '('): ('_20?', 0),
        (30, 'IDENTIFIER'): ('_20?', 0), (32, ']'): ('_20?', 0),
        (34, '+'): ('_20?', 0), (34, ','): ('_20?', 0), (34, '-'): ('_20?', 0),
        (34, ':'): ('_20?', 0), (34, '='): ('_20?', 0),
        (35, '+'): ('condition', 6), (35, ','): ('condition', 6),
        (35, '-'): ('condition', 6), (35, ':'): ('condition', 6),
        (35, '='): ('condition', 6), (37, '"'): ('assignmentop', 2),
        (37, '$'): ('assignmentop', 2), (37, "'"): ('assignmentop', 2),
        (37, ','): ('assignmentop', 2), (37, EOF): ('assignmentop', 2),
        (37, 'IDENTIFIER'): ('assignmentop', 2),
        (37, 'LITERAL'): ('assignmentop', 2),
        (37, 'VARQUANT'): ('assignmentop', 2),
        (37, 'VARTYPE'): ('assignmentop', 2), (39, '"'): ('assignmentop', 2),
        (39, '$'): ('assignmentop', 2), (39, "'"): ('assignmentop', 2),
        (39, ','): ('assignmentop', 2), (39, EOF): ('assignmentop', 2),
        (39, 'IDENTIFIER'): ('assignmentop', 2),
        (39, 'LITERAL'): ('assignmentop', 2),
        (39, 'VARQUANT'): ('assignmentop', 2),
        (39, 'VARTYPE'): ('assignmentop', 2), (40, '"'): ('assignmentop', 1),
        (40, '$'): ('assignmentop', 1), (40, "'"): ('assignmentop', 1),
        (40, ','): ('assignmentop', 1), (40, EOF): ('assignmentop', 1),
        (40, 'IDENTIFIER'): ('assignmentop', 1),
        (40, 'LITERAL'): ('assignmentop', 1),
        (40, 'VARQUANT'): ('assignmentop', 1),
        (40, 'VARTYPE'): ('assignmentop', 1), (42, '"'): ('_20?', 0),
        (42, '$'): ('_20?', 0), (42, "'"): ('_20?', 0), (42, ','): ('_20?', 0),
        (42, EOF): ('_20?', 0), (42, 'IDENTIFIER'): ('_20?', 0),
        (42, 'LITERAL'): ('_20?', 0), (42, 'VARQUANT'): ('_20?', 0),
        (42, 'VARTYPE'): ('_20?', 0), (43, '"'): ('assignmentop', 3),
        (43, '$'): ('assignmentop', 3), (43, "'"): ('assignmentop', 3),
        (43, ','): ('assignmentop', 3), (43, EOF): ('assignmentop', 3),
        (43, 'IDENTIFIER'): ('assignmentop', 3),
        (43, 'LITERAL'): ('assignmentop', 3),
        (43, 'VARQUANT'): ('assignmentop', 3),
        (43, 'VARTYPE'): ('assignmentop', 3), (44, ')'): ('_20?', 1),
        (44, EOF): ('_20?', 1), (45, '!'): ('_20?', 1), (45, '"'): ('_20?', 1),
        (45, '$'): ('_20?', 1), (45, '&'): ('_20?', 1), (45, "'"): ('_20?', 1),
        (45, '('): ('_20?', 1), (45, ')'): ('_20?', 1), (45, '+'): ('_20?', 1),
        (45, ','): ('_20?', 1), (45, '-'): ('_20?', 1), (45, ':'): ('_20?', 1),
        (45, ';'): ('_20?', 1), (45, '<'): ('_20?', 1), (45, '='): ('_20?', 1),
        (45, '>'): ('_20?', 1), (45, EOF): ('_20?', 1),
        (45, 'IDENTIFIER'): ('_20?', 1), (45, 'LITERAL'): ('_20?', 1),
        (45, 'VARQUANT'): ('_20?', 1), (45, 'VARTYPE'): ('_20?', 1),
        (45, '['): ('_20?', 1), (45, ']'): ('_20?', 1), (45, '|'): ('_20?', 1),
        (45, '~'): ('_20?', 1), (46, ';'): ('_20?', 0), (46, '|'): ('_20?', 0),
        (48, '!'): ('_20?', 0), (48, '('): ('_20?', 0),
        (48, 'IDENTIFIER'): ('_20?', 0), (50, '&'): ('disjunction', 5),
        (50, ')'): ('disjunction', 5), (50, ','): ('disjunction', 5),
        (50, ';'): ('disjunction', 5), (50, 'WHITESPACE'): ('disjunction', 5),
        (50, ']'): ('disjunction', 5), (50, '|'): ('disjunction', 5),
        (51, '&'): ('_20?', 0), (51, ','): ('_20?', 0), (53, '!'): ('_20?', 0),
        (53, '('): ('_20?', 0), (53, 'IDENTIFIER'): ('_20?', 0),
        (55, '&'): ('conjunction', 5), (55, ')'): ('conjunction', 5),
        (55, ','): ('conjunction', 5), (55, ';'): ('conjunction', 5),
        (55, 'WHITESPACE'): ('conjunction', 5), (55, ']'): ('conjunction', 5),
        (55, '|'): ('conjunction', 5), (56, '!'): ('_20?', 0),
        (56, '<'): ('_20?', 0), (56, '='): ('_20?', 0), (56, '>'): ('_20?', 0),
        (56, '~'): ('_20?', 0), (58, '"'): ('_20?', 0), (58, '$'): ('_20?', 0),
        (58, "'"): ('_20?', 0), (58, 'IDENTIFIER'): ('_20?', 0),
        (58, 'LITERAL'): ('_20?', 0), (58, 'VARQUANT'): ('_20?', 0),
        (58, 'VARTYPE'): ('_20?', 0), (60, '&'): ('test', 5),
        (60, ')'): ('test', 5), (60, ','): ('test', 5), (60, ';'): ('test', 5),
        (60, 'WHITESPACE'): ('test', 5), (60, ']'): ('test', 5),
        (60, '|'): ('test', 5), (61, '!'): ('_20?', 0), (61, '('): ('_20?', 0),
        (61, 'IDENTIFIER'): ('_20?', 0), (63, ')'): ('_20?', 0),
        (65, '&'): ('test', 5), (65, ')'): ('test', 5), (65, ','): ('test', 5),
        (65, ';'): ('test', 5), (65, 'WHITESPACE'): ('test', 5),
        (65, ']'): ('test', 5), (65, '|'): ('test', 5), (66, '!'): ('_20?', 0),
        (66, '('): ('_20?', 0), (66, 'IDENTIFIER'): ('_20?', 0),
        (68, '&'): ('test', 3), (68, ')'): ('test', 3), (68, ','): ('test', 3),
        (68, ';'): ('test', 3), (68, 'WHITESPACE'): ('test', 3),
        (68, ']'): ('test', 3), (68, '|'): ('test', 3),
        (69, '!'): ('logicunop', 1), (69, '('): ('logicunop', 1),
        (69, 'IDENTIFIER'): ('logicunop', 1),
        (69, 'WHITESPACE'): ('logicunop', 1), (70, '!'): ('disjunctionop', 1),
        (70, '('): ('disjunctionop', 1),
        (70, 'IDENTIFIER'): ('disjunctionop', 1),
        (70, 'WHITESPACE'): ('disjunctionop', 1),
        (71, '!'): ('disjunctionop', 1), (71, '('): ('disjunctionop', 1),
        (71, 'IDENTIFIER'): ('disjunctionop', 1),
        (71, 'WHITESPACE'): ('disjunctionop', 1),
        (72, '!'): ('disjunctionop', 2), (72, '('): ('disjunctionop', 2),
        (72, 'IDENTIFIER'): ('disjunctionop', 2),
        (72, 'WHITESPACE'): ('disjunctionop', 2),
        (73, '!'): ('conjunctionop', 1), (73, '('): ('conjunctionop', 1),
        (73, 'IDENTIFIER'): ('conjunctionop', 1),
        (73, 'WHITESPACE'): ('conjunctionop', 1),
        (74, '!'): ('conjunctionop', 1), (74, '('): ('conjunctionop', 1),
        (74, 'IDENTIFIER'): ('conjunctionop', 1),
        (74, 'WHITESPACE'): ('conjunctionop', 1),
        (75, '!'): ('conjunctionop', 2), (75, '('): ('conjunctionop', 2),
        (75, 'IDENTIFIER'): ('conjunctionop', 2),
        (75, 'WHITESPACE'): ('conjunctionop', 2), (76, '"'): ('testop', 1),
        (76, '$'): ('testop', 1), (76, "'"): ('testop', 1),
        (76, 'IDENTIFIER'): ('testop', 1), (76, 'LITERAL'): ('testop', 1),
        (76, 'VARQUANT'): ('testop', 1), (76, 'VARTYPE'): ('testop', 1),
        (76, 'WHITESPACE'): ('testop', 1), (77, '"'): ('testop', 2),
        (77, '$'): ('testop', 2), (77, "'"): ('testop', 2),
        (77, 'IDENTIFIER'): ('testop', 2), (77, 'LITERAL'): ('testop', 2),
        (77, 'VARQUANT'): ('testop', 2), (77, 'VARTYPE'): ('testop', 2),
        (77, 'WHITESPACE'): ('testop', 2), (79, '"'): ('testop', 2),
        (79, '$'): ('testop', 2), (79, "'"): ('testop', 2),
        (79, 'IDENTIFIER'): ('testop', 2), (79, 'LITERAL'): ('testop', 2),
        (79, 'VARQUANT'): ('testop', 2), (79, 'VARTYPE'): ('testop', 2),
        (79, 'WHITESPACE'): ('testop', 2), (80, '"'): ('testop', 1),
        (80, '$'): ('testop', 1), (80, "'"): ('testop', 1),
        (80, 'IDENTIFIER'): ('testop', 1), (80, 'LITERAL'): ('testop', 1),
        (80, 'VARQUANT'): ('testop', 1), (80, 'VARTYPE'): ('testop', 1),
        (80, 'WHITESPACE'): ('testop', 1), (81, '"'): ('testop', 1),
        (81, '$'): ('testop', 1), (81, "'"): ('testop', 1),
        (81, 'IDENTIFIER'): ('testop', 1), (81, 'LITERAL'): ('testop', 1),
        (81, 'VARQUANT'): ('testop', 1), (81, 'VARTYPE'): ('testop', 1),
        (81, 'WHITESPACE'): ('testop', 1), (82, '"'): ('testop', 2),
        (82, '$'): ('testop', 2), (82, "'"): ('testop', 2),
        (82, 'IDENTIFIER'): ('testop', 2), (82, 'LITERAL'): ('testop', 2),
        (82, 'VARQUANT'): ('testop', 2), (82, 'VARTYPE'): ('testop', 2),
        (82, 'WHITESPACE'): ('testop', 2), (83, '"'): ('testop', 2),
        (83, '$'): ('testop', 2), (83, "'"): ('testop', 2),
        (83, 'IDENTIFIER'): ('testop', 2), (83, 'LITERAL'): ('testop', 2),
        (83, 'VARQUANT'): ('testop', 2), (83, 'VARTYPE'): ('testop', 2),
        (83, 'WHITESPACE'): ('testop', 2), (85, '"'): ('testop', 2),
        (85, '$'): ('testop', 2), (85, "'"): ('testop', 2),
        (85, 'IDENTIFIER'): ('testop', 2), (85, 'LITERAL'): ('testop', 2),
        (85, 'VARQUANT'): ('testop', 2), (85, 'VARTYPE'): ('testop', 2),
        (85, 'WHITESPACE'): ('testop', 2), (86, '"'): ('testop', 2),
        (86, '$'): ('testop', 2), (86, "'"): ('testop', 2),
        (86, 'IDENTIFIER'): ('testop', 2), (86, 'LITERAL'): ('testop', 2),
        (86, 'VARQUANT'): ('testop', 2), (86, 'VARTYPE'): ('testop', 2),
        (86, 'WHITESPACE'): ('testop', 2), (87, EOF): ('_61*', 0),
        (87, 'WHITESPACE'): ('_61*', 0), (88, EOF): ('_20?', 0),
        (89, EOF): ('valuelist', 3), (90, '&'): ('value', 1),
        (90, ')'): ('value', 1), (90, ','): ('value', 1),
        (90, ';'): ('value', 1), (90, EOF): ('value', 1),
        (90, 'WHITESPACE'): ('value', 1), (90, ']'): ('value', 1),
        (90, '|'): ('value', 1), (90, '}'): ('value', 1),
        (91, '"'): ('_(53)', 1), (91, '$'): ('_(53)', 1),
        (91, '&'): ('_(53)', 1), (91, "'"): ('_(53)', 1),
        (91, ')'): ('_(53)', 1), (91, ','): ('_(53)', 1),
        (91, ';'): ('_(53)', 1), (91, EOF): ('_(53)', 1),
        (91, 'IDENTIFIER'): ('_(53)', 1), (91, 'LITERAL'): ('_(53)', 1),
        (91, 'VARQUANT'): ('_(53)', 1), (91, 'VARTYPE'): ('_(53)', 1),
        (91, 'WHITESPACE'): ('_(53)', 1), (91, ']'): ('_(53)', 1),
        (91, '|'): ('_(53)', 1), (91, '}'): ('_(53)', 1),
        (92, '"'): ('_(53)', 1), (92, '$'): ('_(53)', 1),
        (92, '&'): ('_(53)', 1), (92, "'"): ('_(53)', 1),
        (92, ')'): ('_(53)', 1), (92, ','): ('_(53)', 1),
        (92, ';'): ('_(53)', 1), (92, EOF): ('_(53)', 1),
        (92, 'IDENTIFIER'): ('_(53)', 1), (92, 'LITERAL'): ('_(53)', 1),
        (92, 'VARQUANT'): ('_(53)', 1), (92, 'VARTYPE'): ('_(53)', 1),
        (92, 'WHITESPACE'): ('_(53)', 1), (92, ']'): ('_(53)', 1),
        (92, '|'): ('_(53)', 1), (92, '}'): ('_(53)', 1),
        (93, '"'): ('_(53)', 1), (93, '$'): ('_(53)', 1),
        (93, '&'): ('_(53)', 1), (93, "'"): ('_(53)', 1),
        (93, ')'): ('_(53)', 1), (93, ','): ('_(53)', 1),
        (93, ';'): ('_(53)', 1), (93, EOF): ('_(53)', 1),
        (93, 'IDENTIFIER'): ('_(53)', 1), (93, 'LITERAL'): ('_(53)', 1),
        (93, 'VARQUANT'): ('_(53)', 1), (93, 'VARTYPE'): ('_(53)', 1),
        (93, 'WHITESPACE'): ('_(53)', 1), (93, ']'): ('_(53)', 1),
        (93, '|'): ('_(53)', 1), (93, '}'): ('_(53)', 1),
        (94, '"'): ('_(53)', 1), (94, '$'): ('_(53)', 1),
        (94, '&'): ('_(53)', 1), (94, "'"): ('_(53)', 1),
        (94, ')'): ('_(53)', 1), (94, ','): ('_(53)', 1),
        (94, ';'): ('_(53)', 1), (94, EOF): ('_(53)', 1),
        (94, 'IDENTIFIER'): ('_(53)', 1), (94, 'LITERAL'): ('_(53)', 1),
        (94, 'VARQUANT'): ('_(53)', 1), (94, 'VARTYPE'): ('_(53)', 1),
        (94, 'WHITESPACE'): ('_(53)', 1), (94, ']'): ('_(53)', 1),
        (94, '|'): ('_(53)', 1), (94, '}'): ('_(53)', 1),
        (95, '"'): ('_(53)', 1), (95, '$'): ('_(53)', 1),
        (95, '&'): ('_(53)', 1), (95, "'"): ('_(53)', 1),
        (95, ')'): ('_(53)', 1), (95, ','): ('_(53)', 1),
        (95, ';'): ('_(53)', 1), (95, EOF): ('_(53)', 1),
        (95, 'IDENTIFIER'): ('_(53)', 1), (95, 'LITERAL'): ('_(53)', 1),
        (95, 'VARQUANT'): ('_(53)', 1), (95, 'VARTYPE'): ('_(53)', 1),
        (95, 'WHITESPACE'): ('_(53)', 1), (95, ']'): ('_(53)', 1),
        (95, '|'): ('_(53)', 1), (95, '}'): ('_(53)', 1),
        (96, '"'): ('_54+', 1), (96, '$'): ('_54+', 1), (96, '&'): ('_54+', 1),
        (96, "'"): ('_54+', 1), (96, ')'): ('_54+', 1), (96, ','): ('_54+', 1),
        (96, ';'): ('_54+', 1), (96, EOF): ('_54+', 1),
        (96, 'IDENTIFIER'): ('_54+', 1), (96, 'LITERAL'): ('_54+', 1),
        (96, 'VARQUANT'): ('_54+', 1), (96, 'VARTYPE'): ('_54+', 1),
        (96, 'WHITESPACE'): ('_54+', 1), (96, ']'): ('_54+', 1),
        (96, '|'): ('_54+', 1), (96, '}'): ('_54+', 1), (97, '"'): ('_54+', 2),
        (97, '$'): ('_54+', 2), (97, '&'): ('_54+', 2), (97, "'"): ('_54+', 2),
        (97, ')'): ('_54+', 2), (97, ','): ('_54+', 2), (97, ';'): ('_54+', 2),
        (97, EOF): ('_54+', 2), (97, 'IDENTIFIER'): ('_54+', 2),
        (97, 'LITERAL'): ('_54+', 2), (97, 'VARQUANT'): ('_54+', 2),
        (97, 'VARTYPE'): ('_54+', 2), (97, 'WHITESPACE'): ('_54+', 2),
        (97, ']'): ('_54+', 2), (97, '|'): ('_54+', 2), (97, '}'): ('_54+', 2),
        (98, '!'): ('_56*', 0), (98, '"'): ('_56*', 0), (98, '$'): ('_56*', 0),
        (98, '&'): ('_56*', 0), (98, "'"): ('_56*', 0), (98, '+'): ('_56*', 0),
        (98, ','): ('_56*', 0), (98, '-'): ('_56*', 0), (98, ':'): ('_56*', 0),
        (98, ';'): ('_56*', 0), (98, '<'): ('_56*', 0), (98, '='): ('_56*', 0),
        (98, '>'): ('_56*', 0), (98, 'IDENTIFIER'): ('_56*', 0),
        (98, 'LITERAL'): ('_56*', 0), (98, 'VARQUANT'): ('_56*', 0),
        (98, 'VARTYPE'): ('_56*', 0), (98, 'WHITESPACE'): ('_56*', 0),
        (98, '['): ('_56*', 0), (98, ']'): ('_56*', 0), (98, '|'): ('_56*', 0),
        (98, '~'): ('_56*', 0), (100, '"'): ('doublequoted', 3),
        (100, '$'): ('doublequoted', 3), (100, '&'): ('doublequoted', 3),
        (100, "'"): ('doublequoted', 3), (100, ')'): ('doublequoted', 3),
        (100, ','): ('doublequoted', 3), (100, ';'): ('doublequoted', 3),
        (100, EOF): ('doublequoted', 3),
        (100, 'IDENTIFIER'): ('doublequoted', 3),
        (100, 'LITERAL'): ('doublequoted', 3),
        (100, 'VARQUANT'): ('doublequoted', 3),
        (100, 'VARTYPE'): ('doublequoted', 3),
        (100, 'WHITESPACE'): ('doublequoted', 3),
        (100, ']'): ('doublequoted', 3), (100, '|'): ('doublequoted', 3),
        (100, '}'): ('doublequoted', 3), (101, '!'): ('_(55)', 1),
        (101, '"'): ('_(55)', 1), (101, '$'): ('_(55)', 1),
        (101, '&'): ('_(55)', 1), (101, "'"): ('_(55)', 1),
        (101, '+'): ('_(55)', 1), (101, ','): ('_(55)', 1),
        (101, '-'): ('_(55)', 1), (101, ':'): ('_(55)', 1),
        (101, ';'): ('_(55)', 1), (101, '<'): ('_(55)', 1),
        (101, '='): ('_(55)', 1), (101, '>'): ('_(55)', 1),
        (101, 'IDENTIFIER'): ('_(55)', 1), (101, 'LITERAL'): ('_(55)', 1),
        (101, 'VARQUANT'): ('_(55)', 1), (101, 'VARTYPE'): ('_(55)', 1),
        (101, 'WHITESPACE'): ('_(55)', 1), (101, '['): ('_(55)', 1),
        (101, ']'): ('_(55)', 1), (101, '|'): ('_(55)', 1),
        (101, '~'): ('_(55)', 1), (102, '!'): ('_(55)', 1),
        (102, '"'): ('_(55)', 1), (102, '$'): ('_(55)', 1),
        (102, '&'): ('_(55)', 1), (102, "'"): ('_(55)', 1),
        (102, '+'): ('_(55)', 1), (102, ','): ('_(55)', 1),
        (102, '-'): ('_(55)', 1), (102, ':'): ('_(55)', 1),
        (102, ';'): ('_(55)', 1), (102, '<'): ('_(55)', 1),
        (102, '='): ('_(55)', 1), (102, '>'): ('_(55)', 1),
        (102, 'IDENTIFIER'): ('_(55)', 1), (102, 'LITERAL'): ('_(55)', 1),
        (102, 'VARQUANT'): ('_(55)', 1), (102, 'VARTYPE'): ('_(55)', 1),
        (102, 'WHITESPACE'): ('_(55)', 1), (102, '['): ('_(55)', 1),
        (102, ']'): ('_(55)', 1), (102, '|'): ('_(55)', 1),
        (102, '~'): ('_(55)', 1), (103, '!'): ('_(55)', 1),
        (103, '"'): ('_(55)', 1), (103, '$'): ('_(55)', 1),
        (103, '&'): ('_(55)', 1), (103, "'"): ('_(55)', 1),
        (103, '+'): ('_(55)', 1), (103, ','): ('_(55)', 1),
        (103, '-'): ('_(55)', 1), (103, ':'): ('_(55)', 1),
        (103, ';'): ('_(55)', 1), (103, '<'): ('_(55)', 1),
        (103, '='): ('_(55)', 1), (103, '>'): ('_(55)', 1),
        (103, 'IDENTIFIER'): ('_(55)', 1), (103, 'LITERAL'): ('_(55)', 1),
        (103, 'VARQUANT'): ('_(55)', 1), (103, 'VARTYPE'): ('_(55)', 1),
        (103, 'WHITESPACE'): ('_(55)', 1), (103, '['): ('_(55)', 1),
        (103, ']'): ('_(55)', 1), (103, '|'): ('_(55)', 1),
        (103, '~'): ('_(55)', 1), (104, '!'): ('_(55)', 1),
        (104, '"'): ('_(55)', 1), (104, '$'): ('_(55)', 1),
        (104, '&'): ('_(55)', 1), (104, "'"): ('_(55)', 1),
        (104, '+'): ('_(55)', 1), (104, ','): ('_(55)', 1),
        (104, '-'): ('_(55)', 1), (104, ':'): ('_(55)', 1),
        (104, ';'): ('_(55)', 1), (104, '<'): ('_(55)', 1),
        (104, '='): ('_(55)', 1), (104, '>'): ('_(55)', 1),
        (104, 'IDENTIFIER'): ('_(55)', 1), (104, 'LITERAL'): ('_(55)', 1),
        (104, 'VARQUANT'): ('_(55)', 1), (104, 'VARTYPE'): ('_(55)', 1),
        (104, 'WHITESPACE'): ('_(55)', 1), (104, '['): ('_(55)', 1),
        (104, ']'): ('_(55)', 1), (104, '|'): ('_(55)', 1),
        (104, '~'): ('_(55)', 1), (105, '!'): ('_(55)', 1),
        (105, '"'): ('_(55)', 1), (105, '$'): ('_(55)', 1),
        (105, '&'): ('_(55)', 1), (105, "'"): ('_(55)', 1),
        (105, '+'): ('_(55)', 1), (105, ','): ('_(55)', 1),
        (105, '-'): ('_(55)', 1), (105, ':'): ('_(55)', 1),
        (105, ';'): ('_(55)', 1), (105, '<'): ('_(55)', 1),
        (105, '='): ('_(55)', 1), (105, '>'): ('_(55)', 1),
        (105, 'IDENTIFIER'): ('_(55)', 1), (105, 'LITERAL'): ('_(55)', 1),
        (105, 'VARQUANT'): ('_(55)', 1), (105, 'VARTYPE'): ('_(55)', 1),
        (105, 'WHITESPACE'): ('_(55)', 1), (105, '['): ('_(55)', 1),
        (105, ']'): ('_(55)', 1), (105, '|'): ('_(55)', 1),
        (105, '~'): ('_(55)', 1), (106, '!'): ('_56*', 2),
        (106, '"'): ('_56*', 2), (106, '$'): ('_56*', 2),
        (106, '&'): ('_56*', 2), (106, "'"): ('_56*', 2),
        (106, '+'): ('_56*', 2), (106, ','): ('_56*', 2),
        (106, '-'): ('_56*', 2), (106, ':'): ('_56*', 2),
        (106, ';'): ('_56*', 2), (106, '<'): ('_56*', 2),
        (106, '='): ('_56*', 2), (106, '>'): ('_56*', 2),
        (106, 'IDENTIFIER'): ('_56*', 2), (106, 'LITERAL'): ('_56*', 2),
        (106, 'VARQUANT'): ('_56*', 2), (106, 'VARTYPE'): ('_56*', 2),
        (106, 'WHITESPACE'): ('_56*', 2), (106, '['): ('_56*', 2),
        (106, ']'): ('_56*', 2), (106, '|'): ('_56*', 2),
        (106, '~'): ('_56*', 2), (107, '!'): ('_58*', 0),
        (107, '"'): ('_58*', 0), (107, '$'): ('_58*', 0),
        (107, '&'): ('_58*', 0), (107, "'"): ('_58*', 0),
        (107, '('): ('_58*', 0), (107, ')'): ('_58*', 0),
        (107, '+'): ('_58*', 0), (107, ','): ('_58*', 0),
        (107, '-'): ('_58*', 0), (107, ':'): ('_58*', 0),
        (107, ';'): ('_58*', 0), (107, '<'): ('_58*', 0),
        (107, '='): ('_58*', 0), (107, '>'): ('_58*', 0),
        (107, 'IDENTIFIER'): ('_58*', 0), (107, 'LITERAL'): ('_58*', 0),
        (107, 'VARQUANT'): ('_58*', 0), (107, 'VARTYPE'): ('_58*', 0),
        (107, 'WHITESPACE'): ('_58*', 0), (107, '['): ('_58*', 0),
        (107, ']'): ('_58*', 0), (107, '{'): ('_58*', 0),
        (107, '|'): ('_58*', 0), (107, '}'): ('_58*', 0),
        (107, '~'): ('_58*', 0), (109, '"'): ('singlequoted', 3),
        (109, '$'): ('singlequoted', 3), (109, '&'): ('singlequoted', 3),
        (109, "'"): ('singlequoted', 3), (109, ')'): ('singlequoted', 3),
        (109, ','): ('singlequoted', 3), (109, ';'): ('singlequoted', 3),
        (109, EOF): ('singlequoted', 3),
        (109, 'IDENTIFIER'): ('singlequoted', 3),
        (109, 'LITERAL'): ('singlequoted', 3),
        (109, 'VARQUANT'): ('singlequoted', 3),
        (109, 'VARTYPE'): ('singlequoted', 3),
        (109, 'WHITESPACE'): ('singlequoted', 3),
        (109, ']'): ('singlequoted', 3), (109, '|'): ('singlequoted', 3),
        (109, '}'): ('singlequoted', 3), (110, '!'): ('_(57)', 1),
        (110, '"'): ('_(57)', 1), (110, '$'): ('_(57)', 1),
        (110, '&'): ('_(57)', 1), (110, "'"): ('_(57)', 1),
        (110, '('): ('_(57)', 1), (110, ')'): ('_(57)', 1),
        (110, '+'): ('_(57)', 1), (110, ','): ('_(57)', 1),
        (110, '-'): ('_(57)', 1), (110, ':'): ('_(57)', 1),
        (110, ';'): ('_(57)', 1), (110, '<'): ('_(57)', 1),
        (110, '='): ('_(57)', 1), (110, '>'): ('_(57)', 1),
        (110, 'IDENTIFIER'): ('_(57)', 1), (110, 'LITERAL'): ('_(57)', 1),
        (110, 'VARQUANT'): ('_(57)', 1), (110, 'VARTYPE'): ('_(57)', 1),
        (110, 'WHITESPACE'): ('_(57)', 1), (110, '['): ('_(57)', 1),
        (110, ']'): ('_(57)', 1), (110, '{'): ('_(57)', 1),
        (110, '|'): ('_(57)', 1), (110, '}'): ('_(57)', 1),
        (110, '~'): ('_(57)', 1), (111, '!'): ('_(57)', 1),
        (111, '"'): ('_(57)', 1), (111, '$'): ('_(57)', 1),
        (111, '&'): ('_(57)', 1), (111, "'"): ('_(57)', 1),
        (111, '('): ('_(57)', 1), (111, ')'): ('_(57)', 1),
        (111, '+'): ('_(57)', 1), (111, ','): ('_(57)', 1),
        (111, '-'): ('_(57)', 1), (111, ':'): ('_(57)', 1),
        (111, ';'): ('_(57)', 1), (111, '<'): ('_(57)', 1),
        (111, '='): ('_(57)', 1), (111, '>'): ('_(57)', 1),
        (111, 'IDENTIFIER'): ('_(57)', 1), (111, 'LITERAL'): ('_(57)', 1),
        (111, 'VARQUANT'): ('_(57)', 1), (111, 'VARTYPE'): ('_(57)', 1),
        (111, 'WHITESPACE'): ('_(57)', 1), (111, '['): ('_(57)', 1),
        (111, ']'): ('_(57)', 1), (111, '{'): ('_(57)', 1),
        (111, '|'): ('_(57)', 1), (111, '}'): ('_(57)', 1),
        (111, '~'): ('_(57)', 1), (112, '!'): ('_(57)', 1),
        (112, '"'): ('_(57)', 1), (112, '$'): ('_(57)', 1),
        (112, '&'): ('_(57)', 1), (112, "'"): ('_(57)', 1),
        (112, '('): ('_(57)', 1), (112, ')'): ('_(57)', 1),
        (112, '+'): ('_(57)', 1), (112, ','): ('_(57)', 1),
        (112, '-'): ('_(57)', 1), (112, ':'): ('_(57)', 1),
        (112, ';'): ('_(57)', 1), (112, '<'): ('_(57)', 1),
        (112, '='): ('_(57)', 1), (112, '>'): ('_(57)', 1),
        (112, 'IDENTIFIER'): ('_(57)', 1), (112, 'LITERAL'): ('_(57)', 1),
        (112, 'VARQUANT'): ('_(57)', 1), (112, 'VARTYPE'): ('_(57)', 1),
        (112, 'WHITESPACE'): ('_(57)', 1), (112, '['): ('_(57)', 1),
        (112, ']'): ('_(57)', 1), (112, '{'): ('_(57)', 1),
        (112, '|'): ('_(57)', 1), (112, '}'): ('_(57)', 1),
        (112, '~'): ('_(57)', 1), (113, '!'): ('_58*', 2),
        (113, '"'): ('_58*', 2), (113, '$'): ('_58*', 2),
        (113, '&'): ('_58*', 2), (113, "'"): ('_58*', 2),
        (113, '('): ('_58*', 2), (113, ')'): ('_58*', 2),
        (113, '+'): ('_58*', 2), (113, ','): ('_58*', 2),
        (113, '-'): ('_58*', 2), (113, ':'): ('_58*', 2),
        (113, ';'): ('_58*', 2), (113, '<'): ('_58*', 2),
        (113, '='): ('_58*', 2), (113, '>'): ('_58*', 2),
        (113, 'IDENTIFIER'): ('_58*', 2), (113, 'LITERAL'): ('_58*', 2),
        (113, 'VARQUANT'): ('_58*', 2), (113, 'VARTYPE'): ('_58*', 2),
        (113, 'WHITESPACE'): ('_58*', 2), (113, '['): ('_58*', 2),
        (113, ']'): ('_58*', 2), (113, '{'): ('_58*', 2),
        (113, '|'): ('_58*', 2), (113, '}'): ('_58*', 2),
        (113, '~'): ('_58*', 2), (114, '!'): ('literal', 1),
        (114, '"'): ('literal', 1), (114, '$'): ('literal', 1),
        (114, '&'): ('literal', 1), (114, "'"): ('literal', 1),
        (114, '('): ('literal', 1), (114, ')'): ('literal', 1),
        (114, '+'): ('literal', 1), (114, ','): ('literal', 1),
        (114, '-'): ('literal', 1), (114, ':'): ('literal', 1),
        (114, ';'): ('literal', 1), (114, '<'): ('literal', 1),
        (114, '='): ('literal', 1), (114, '>'): ('literal', 1),
        (114, EOF): ('literal', 1), (114, 'IDENTIFIER'): ('literal', 1),
        (114, 'LITERAL'): ('literal', 1), (114, 'VARQUANT'): ('literal', 1),
        (114, 'VARTYPE'): ('literal', 1), (114, 'WHITESPACE'): ('literal', 1),
        (114, '['): ('literal', 1), (114, ']'): ('literal', 1),
        (114, '{'): ('literal', 1), (114, '|'): ('literal', 1),
        (114, '}'): ('literal', 1), (114, '~'): ('literal', 1),
        (115, '!'): ('literal', 1), (115, '"'): ('literal', 1),
        (115, '$'): ('literal', 1), (115, '&'): ('literal', 1),
        (115, "'"): ('literal', 1), (115, '('): ('literal', 1),
        (115, ')'): ('literal', 1), (115, '+'): ('literal', 1),
        (115, ','): ('literal', 1), (115, '-'): ('literal', 1),
        (115, ':'): ('literal', 1), (115, ';'): ('literal', 1),
        (115, '<'): ('literal', 1), (115, '='): ('literal', 1),
        (115, '>'): ('literal', 1), (115, EOF): ('literal', 1),
        (115, 'IDENTIFIER'): ('literal', 1), (115, 'LITERAL'): ('literal', 1),
        (115, 'VARQUANT'): ('literal', 1), (115, 'VARTYPE'): ('literal', 1),
        (115, 'WHITESPACE'): ('literal', 1), (115, '['): ('literal', 1),
        (115, ']'): ('literal', 1), (115, '{'): ('literal', 1),
        (115, '|'): ('literal', 1), (115, '}'): ('literal', 1),
        (115, '~'): ('literal', 1), (116, '!'): ('literal', 1),
        (116, '"'): ('literal', 1), (116, '$'): ('literal', 1),
        (116, '&'): ('literal', 1), (116, "'"): ('literal', 1),
        (116, '('): ('literal', 1), (116, ')'): ('literal', 1),
        (116, '+'): ('literal', 1), (116, ','): ('literal', 1),
        (116, '-'): ('literal', 1), (116, ':'): ('literal', 1),
        (116, ';'): ('literal', 1), (116, '<'): ('literal', 1),
        (116, '='): ('literal', 1), (116, '>'): ('literal', 1),
        (116, EOF): ('literal', 1), (116, 'IDENTIFIER'): ('literal', 1),
        (116, 'LITERAL'): ('literal', 1), (116, 'VARQUANT'): ('literal', 1),
        (116, 'VARTYPE'): ('literal', 1), (116, 'WHITESPACE'): ('literal', 1),
        (116, '['): ('literal', 1), (116, ']'): ('literal', 1),
        (116, '{'): ('literal', 1), (116, '|'): ('literal', 1),
        (116, '}'): ('literal', 1), (116, '~'): ('literal', 1),
        (117, '!'): ('literal', 1), (117, '"'): ('literal', 1),
        (117, '$'): ('literal', 1), (117, '&'): ('literal', 1),
        (117, "'"): ('literal', 1), (117, '('): ('literal', 1),
        (117, ')'): ('literal', 1), (117, '+'): ('literal', 1),
        (117, ','): ('literal', 1), (117, '-'): ('literal', 1),
        (117, ':'): ('literal', 1), (117, ';'): ('literal', 1),
        (117, '<'): ('literal', 1), (117, '='): ('literal', 1),
        (117, '>'): ('literal', 1), (117, EOF): ('literal', 1),
        (117, 'IDENTIFIER'): ('literal', 1), (117, 'LITERAL'): ('literal', 1),
        (117, 'VARQUANT'): ('literal', 1), (117, 'VARTYPE'): ('literal', 1),
        (117, 'WHITESPACE'): ('literal', 1), (117, '['): ('literal', 1),
        (117, ']'): ('literal', 1), (117, '{'): ('literal', 1),
        (117, '|'): ('literal', 1), (117, '}'): ('literal', 1),
        (117, '~'): ('literal', 1), (119, '"'): ('_20?', 0),
        (119, '$'): ('_20?', 0), (119, "'"): ('_20?', 0),
        (119, 'IDENTIFIER'): ('_20?', 0), (119, 'LITERAL'): ('_20?', 0),
        (119, 'VARQUANT'): ('_20?', 0), (119, 'VARTYPE'): ('_20?', 0),
        (121, ')'): ('_61*', 0), (121, 'WHITESPACE'): ('_61*', 0),
        (122, ')'): ('_20?', 0), (124, '!'): ('funcall', 7),
        (124, '"'): ('funcall', 7), (124, '$'): ('funcall', 7),
        (124, '&'): ('funcall', 7), (124, "'"): ('funcall', 7),
        (124, ')'): ('funcall', 7), (124, '+'): ('funcall', 7),
        (124, ','): ('funcall', 7), (124, '-'): ('funcall', 7),
        (124, ':'): ('funcall', 7), (124, ';'): ('funcall', 7),
        (124, '<'): ('funcall', 7), (124, '='): ('funcall', 7),
        (124, '>'): ('funcall', 7), (124, EOF): ('funcall', 7),
        (124, 'IDENTIFIER'): ('funcall', 7), (124, 'LITERAL'): ('funcall', 7),
        (124, 'VARQUANT'): ('funcall', 7), (124, 'VARTYPE'): ('funcall', 7),
        (124, 'WHITESPACE'): ('funcall', 7), (124, '['): ('funcall', 7),
        (124, ']'): ('funcall', 7), (124, '|'): ('funcall', 7),
        (124, '}'): ('funcall', 7), (124, '~'): ('funcall', 7),
        (125, ')'): ('_61*', 3), (125, EOF): ('_61*', 3),
        (125, 'WHITESPACE'): ('_61*', 3), (126, '!'): ('varcall', 2),
        (126, '"'): ('varcall', 2), (126, '$'): ('varcall', 2),
        (126, '&'): ('varcall', 2), (126, "'"): ('varcall', 2),
        (126, ')'): ('varcall', 2), (126, '+'): ('varcall', 2),
        (126, ','): ('varcall', 2), (126, '-'): ('varcall', 2),
        (126, ':'): ('varcall', 2), (126, ';'): ('varcall', 2),
        (126, '<'): ('varcall', 2), (126, '='): ('varcall', 2),
        (126, '>'): ('varcall', 2), (126, EOF): ('varcall', 2),
        (126, 'IDENTIFIER'): ('varcall', 2), (126, 'LITERAL'): ('varcall', 2),
        (126, 'VARQUANT'): ('varcall', 2), (126, 'VARTYPE'): ('varcall', 2),
        (126, 'WHITESPACE'): ('varcall', 2), (126, '['): ('varcall', 2),
        (126, ']'): ('varcall', 2), (126, '|'): ('varcall', 2),
        (126, '}'): ('varcall', 2), (126, '~'): ('varcall', 2),
        (129, '!'): ('varcall', 4), (129, '"'): ('varcall', 4),
        (129, '$'): ('varcall', 4), (129, '&'): ('varcall', 4),
        (129, "'"): ('varcall', 4), (129, ')'): ('varcall', 4),
        (129, '+'): ('varcall', 4), (129, ','): ('varcall', 4),
        (129, '-'): ('varcall', 4), (129, ':'): ('varcall', 4),
        (129, ';'): ('varcall', 4), (129, '<'): ('varcall', 4),
        (129, '='): ('varcall', 4), (129, '>'): ('varcall', 4),
        (129, EOF): ('varcall', 4), (129, 'IDENTIFIER'): ('varcall', 4),
        (129, 'LITERAL'): ('varcall', 4), (129, 'VARQUANT'): ('varcall', 4),
        (129, 'VARTYPE'): ('varcall', 4), (129, 'WHITESPACE'): ('varcall', 4),
        (129, '['): ('varcall', 4), (129, ']'): ('varcall', 4),
        (129, '|'): ('varcall', 4), (129, '}'): ('varcall', 4),
        (129, '~'): ('varcall', 4), (130, '!'): ('doublequoted_escaped', 1),
        (130, '"'): ('doublequoted_escaped', 1),
        (130, '$'): ('doublequoted_escaped', 1),
        (130, '&'): ('doublequoted_escaped', 1),
        (130, "'"): ('doublequoted_escaped', 1),
        (130, '+'): ('doublequoted_escaped', 1),
        (130, ','): ('doublequoted_escaped', 1),
        (130, '-'): ('doublequoted_escaped', 1),
        (130, ':'): ('doublequoted_escaped', 1),
        (130, ';'): ('doublequoted_escaped', 1),
        (130, '<'): ('doublequoted_escaped', 1),
        (130, '='): ('doublequoted_escaped', 1),
        (130, '>'): ('doublequoted_escaped', 1),
        (130, 'IDENTIFIER'): ('doublequoted_escaped', 1),
        (130, 'LITERAL'): ('doublequoted_escaped', 1),
        (130, 'VARQUANT'): ('doublequoted_escaped', 1),
        (130, 'VARTYPE'): ('doublequoted_escaped', 1),
        (130, 'WHITESPACE'): ('doublequoted_escaped', 1),
        (130, '['): ('doublequoted_escaped', 1),
        (130, ']'): ('doublequoted_escaped', 1),
        (130, '|'): ('doublequoted_escaped', 1),
        (130, '~'): ('doublequoted_escaped', 1),
        (131, '!'): ('doublequoted_escaped', 1),
        (131, '"'): ('doublequoted_escaped', 1),
        (131, '$'): ('doublequoted_escaped', 1),
        (131, '&'): ('doublequoted_escaped', 1),
        (131, "'"): ('doublequoted_escaped', 1),
        (131, '+'): ('doublequoted_escaped', 1),
        (131, ','): ('doublequoted_escaped', 1),
        (131, '-'): ('doublequoted_escaped', 1),
        (131, ':'): ('doublequoted_escaped', 1),
        (131, ';'): ('doublequoted_escaped', 1),
        (131, '<'): ('doublequoted_escaped', 1),
        (131, '='): ('doublequoted_escaped', 1),
        (131, '>'): ('doublequoted_escaped', 1),
        (131, 'IDENTIFIER'): ('doublequoted_escaped', 1),
        (131, 'LITERAL'): ('doublequoted_escaped', 1),
        (131, 'VARQUANT'): ('doublequoted_escaped', 1),
        (131, 'VARTYPE'): ('doublequoted_escaped', 1),
        (131, 'WHITESPACE'): ('doublequoted_escaped', 1),
        (131, '['): ('doublequoted_escaped', 1),
        (131, ']'): ('doublequoted_escaped', 1),
        (131, '|'): ('doublequoted_escaped', 1),
        (131, '~'): ('doublequoted_escaped', 1),
        (132, '!'): ('doublequoted_escaped', 1),
        (132, '"'): ('doublequoted_escaped', 1),
        (132, '$'): ('doublequoted_escaped', 1),
        (132, '&'): ('doublequoted_escaped', 1),
        (132, "'"): ('doublequoted_escaped', 1),
        (132, '+'): ('doublequoted_escaped', 1),
        (132, ','): ('doublequoted_escaped', 1),
        (132, '-'): ('doublequoted_escaped', 1),
        (132, ':'): ('doublequoted_escaped', 1),
        (132, ';'): ('doublequoted_escaped', 1),
        (132, '<'): ('doublequoted_escaped', 1),
        (132, '='): ('doublequoted_escaped', 1),
        (132, '>'): ('doublequoted_escaped', 1),
        (132, 'IDENTIFIER'): ('doublequoted_escaped', 1),
        (132, 'LITERAL'): ('doublequoted_escaped', 1),
        (132, 'VARQUANT'): ('doublequoted_escaped', 1),
        (132, 'VARTYPE'): ('doublequoted_escaped', 1),
        (132, 'WHITESPACE'): ('doublequoted_escaped', 1),
        (132, '['): ('doublequoted_escaped', 1),
        (132, ']'): ('doublequoted_escaped', 1),
        (132, '|'): ('doublequoted_escaped', 1),
        (132, '~'): ('doublequoted_escaped', 1),
        (133, '!'): ('doublequoted_escaped', 1),
        (133, '"'): ('doublequoted_escaped', 1),
        (133, '$'): ('doublequoted_escaped', 1),
        (133, '&'): ('doublequoted_escaped', 1),
        (133, "'"): ('doublequoted_escaped', 1),
        (133, '+'): ('doublequoted_escaped', 1),
        (133, ','): ('doublequoted_escaped', 1),
        (133, '-'): ('doublequoted_escaped', 1),
        (133, ':'): ('doublequoted_escaped', 1),
        (133, ';'): ('doublequoted_escaped', 1),
        (133, '<'): ('doublequoted_escaped', 1),
        (133, '='): ('doublequoted_escaped', 1),
        (133, '>'): ('doublequoted_escaped', 1),
        (133, 'IDENTIFIER'): ('doublequoted_escaped', 1),
        (133, 'LITERAL'): ('doublequoted_escaped', 1),
        (133, 'VARQUANT'): ('doublequoted_escaped', 1),
        (133, 'VARTYPE'): ('doublequoted_escaped', 1),
        (133, 'WHITESPACE'): ('doublequoted_escaped', 1),
        (133, '['): ('doublequoted_escaped', 1),
        (133, ']'): ('doublequoted_escaped', 1),
        (133, '|'): ('doublequoted_escaped', 1),
        (133, '~'): ('doublequoted_escaped', 1),
        (134, '!'): ('doublequoted_escaped', 1),
        (134, '"'): ('doublequoted_escaped', 1),
        (134, '$'): ('doublequoted_escaped', 1),
        (134, '&'): ('doublequoted_escaped', 1),
        (134, "'"): ('doublequoted_escaped', 1),
        (134, '+'): ('doublequoted_escaped', 1),
        (134, ','): ('doublequoted_escaped', 1),
        (134, '-'): ('doublequoted_escaped', 1),
        (134, ':'): ('doublequoted_escaped', 1),
        (134, ';'): ('doublequoted_escaped', 1),
        (134, '<'): ('doublequoted_escaped', 1),
        (134, '='): ('doublequoted_escaped', 1),
        (134, '>'): ('doublequoted_escaped', 1),
        (134, 'IDENTIFIER'): ('doublequoted_escaped', 1),
        (134, 'LITERAL'): ('doublequoted_escaped', 1),
        (134, 'VARQUANT'): ('doublequoted_escaped', 1),
        (134, 'VARTYPE'): ('doublequoted_escaped', 1),
        (134, 'WHITESPACE'): ('doublequoted_escaped', 1),
        (134, '['): ('doublequoted_escaped', 1),
        (134, ']'): ('doublequoted_escaped', 1),
        (134, '|'): ('doublequoted_escaped', 1),
        (134, '~'): ('doublequoted_escaped', 1),
        (135, '!'): ('doublequoted_escaped', 1),
        (135, '"'): ('doublequoted_escaped', 1),
        (135, '$'): ('doublequoted_escaped', 1),
        (135, '&'): ('doublequoted_escaped', 1),
        (135, "'"): ('doublequoted_escaped', 1),
        (135, '+'): ('doublequoted_escaped', 1),
        (135, ','): ('doublequoted_escaped', 1),
        (135, '-'): ('doublequoted_escaped', 1),
        (135, ':'): ('doublequoted_escaped', 1),
        (135, ';'): ('doublequoted_escaped', 1),
        (135, '<'): ('doublequoted_escaped', 1),
        (135, '='): ('doublequoted_escaped', 1),
        (135, '>'): ('doublequoted_escaped', 1),
        (135, 'IDENTIFIER'): ('doublequoted_escaped', 1),
        (135, 'LITERAL'): ('doublequoted_escaped', 1),
        (135, 'VARQUANT'): ('doublequoted_escaped', 1),
        (135, 'VARTYPE'): ('doublequoted_escaped', 1),
        (135, 'WHITESPACE'): ('doublequoted_escaped', 1),
        (135, '['): ('doublequoted_escaped', 1),
        (135, ']'): ('doublequoted_escaped', 1),
        (135, '|'): ('doublequoted_escaped', 1),
        (135, '~'): ('doublequoted_escaped', 1),
        (136, '!'): ('doublequoted_escaped', 1),
        (136, '"'): ('doublequoted_escaped', 1),
        (136, '$'): ('doublequoted_escaped', 1),
        (136, '&'): ('doublequoted_escaped', 1),
        (136, "'"): ('doublequoted_escaped', 1),
        (136, '+'): ('doublequoted_escaped', 1),
        (136, ','): ('doublequoted_escaped', 1),
        (136, '-'): ('doublequoted_escaped', 1),
        (136, ':'): ('doublequoted_escaped', 1),
        (136, ';'): ('doublequoted_escaped', 1),
        (136, '<'): ('doublequoted_escaped', 1),
        (136, '='): ('doublequoted_escaped', 1),
        (136, '>'): ('doublequoted_escaped', 1),
        (136, 'IDENTIFIER'): ('doublequoted_escaped', 1),
        (136, 'LITERAL'): ('doublequoted_escaped', 1),
        (136, 'VARQUANT'): ('doublequoted_escaped', 1),
        (136, 'VARTYPE'): ('doublequoted_escaped', 1),
        (136, 'WHITESPACE'): ('doublequoted_escaped', 1),
        (136, '['): ('doublequoted_escaped', 1),
        (136, ']'): ('doublequoted_escaped', 1),
        (136, '|'): ('doublequoted_escaped', 1),
        (136, '~'): ('doublequoted_escaped', 1),
        (137, '!'): ('doublequoted_escaped', 1),
        (137, '"'): ('doublequoted_escaped', 1),
        (137, '$'): ('doublequoted_escaped', 1),
        (137, '&'): ('doublequoted_escaped', 1),
        (137, "'"): ('doublequoted_escaped', 1),
        (137, '+'): ('doublequoted_escaped', 1),
        (137, ','): ('doublequoted_escaped', 1),
        (137, '-'): ('doublequoted_escaped', 1),
        (137, ':'): ('doublequoted_escaped', 1),
        (137, ';'): ('doublequoted_escaped', 1),
        (137, '<'): ('doublequoted_escaped', 1),
        (137, '='): ('doublequoted_escaped', 1),
        (137, '>'): ('doublequoted_escaped', 1),
        (137, 'IDENTIFIER'): ('doublequoted_escaped', 1),
        (137, 'LITERAL'): ('doublequoted_escaped', 1),
        (137, 'VARQUANT'): ('doublequoted_escaped', 1),
        (137, 'VARTYPE'): ('doublequoted_escaped', 1),
        (137, 'WHITESPACE'): ('doublequoted_escaped', 1),
        (137, '['): ('doublequoted_escaped', 1),
        (137, ']'): ('doublequoted_escaped', 1),
        (137, '|'): ('doublequoted_escaped', 1),
        (137, '~'): ('doublequoted_escaped', 1),
        (138, '!'): ('doublequoted_escaped', 1),
        (138, '"'): ('doublequoted_escaped', 1),
        (138, '$'): ('doublequoted_escaped', 1),
        (138, '&'): ('doublequoted_escaped', 1),
        (138, "'"): ('doublequoted_escaped', 1),
        (138, '+'): ('doublequoted_escaped', 1),
        (138, ','): ('doublequoted_escaped', 1),
        (138, '-'): ('doublequoted_escaped', 1),
        (138, ':'): ('doublequoted_escaped', 1),
        (138, ';'): ('doublequoted_escaped', 1),
        (138, '<'): ('doublequoted_escaped', 1),
        (138, '='): ('doublequoted_escaped', 1),
        (138, '>'): ('doublequoted_escaped', 1),
        (138, 'IDENTIFIER'): ('doublequoted_escaped', 1),
        (138, 'LITERAL'): ('doublequoted_escaped', 1),
        (138, 'VARQUANT'): ('doublequoted_escaped', 1),
        (138, 'VARTYPE'): ('doublequoted_escaped', 1),
        (138, 'WHITESPACE'): ('doublequoted_escaped', 1),
        (138, '['): ('doublequoted_escaped', 1),
        (138, ']'): ('doublequoted_escaped', 1),
        (138, '|'): ('doublequoted_escaped', 1),
        (138, '~'): ('doublequoted_escaped', 1),
        (139, '!'): ('doublequoted_escaped', 1),
        (139, '"'): ('doublequoted_escaped', 1),
        (139, '$'): ('doublequoted_escaped', 1),
        (139, '&'): ('doublequoted_escaped', 1),
        (139, "'"): ('doublequoted_escaped', 1),
        (139, '+'): ('doublequoted_escaped', 1),
        (139, ','): ('doublequoted_escaped', 1),
        (139, '-'): ('doublequoted_escaped', 1),
        (139, ':'): ('doublequoted_escaped', 1),
        (139, ';'): ('doublequoted_escaped', 1),
        (139, '<'): ('doublequoted_escaped', 1),
        (139, '='): ('doublequoted_escaped', 1),
        (139, '>'): ('doublequoted_escaped', 1),
        (139, 'IDENTIFIER'): ('doublequoted_escaped', 1),
        (139, 'LITERAL'): ('doublequoted_escaped', 1),
        (139, 'VARQUANT'): ('doublequoted_escaped', 1),
        (139, 'VARTYPE'): ('doublequoted_escaped', 1),
        (139, 'WHITESPACE'): ('doublequoted_escaped', 1),
        (139, '['): ('doublequoted_escaped', 1),
        (139, ']'): ('doublequoted_escaped', 1),
        (139, '|'): ('doublequoted_escaped', 1),
        (139, '~'): ('doublequoted_escaped', 1),
        (140, '!'): ('doublequoted_escaped', 1),
        (140, '"'): ('doublequoted_escaped', 1),
        (140, '$'): ('doublequoted_escaped', 1),
        (140, '&'): ('doublequoted_escaped', 1),
        (140, "'"): ('doublequoted_escaped', 1),
        (140, '+'): ('doublequoted_escaped', 1),
        (140, ','): ('doublequoted_escaped', 1),
        (140, '-'): ('doublequoted_escaped', 1),
        (140, ':'): ('doublequoted_escaped', 1),
        (140, ';'): ('doublequoted_escaped', 1),
        (140, '<'): ('doublequoted_escaped', 1),
        (140, '='): ('doublequoted_escaped', 1),
        (140, '>'): ('doublequoted_escaped', 1),
        (140, 'IDENTIFIER'): ('doublequoted_escaped', 1),
        (140, 'LITERAL'): ('doublequoted_escaped', 1),
        (140, 'VARQUANT'): ('doublequoted_escaped', 1),
        (140, 'VARTYPE'): ('doublequoted_escaped', 1),
        (140, 'WHITESPACE'): ('doublequoted_escaped', 1),
        (140, '['): ('doublequoted_escaped', 1),
        (140, ']'): ('doublequoted_escaped', 1),
        (140, '|'): ('doublequoted_escaped', 1),
        (140, '~'): ('doublequoted_escaped', 1),
        (141, '!'): ('doublequoted_escaped', 1),
        (141, '"'): ('doublequoted_escaped', 1),
        (141, '$'): ('doublequoted_escaped', 1),
        (141, '&'): ('doublequoted_escaped', 1),
        (141, "'"): ('doublequoted_escaped', 1),
        (141, '+'): ('doublequoted_escaped', 1),
        (141, ','): ('doublequoted_escaped', 1),
        (141, '-'): ('doublequoted_escaped', 1),
        (141, ':'): ('doublequoted_escaped', 1),
        (141, ';'): ('doublequoted_escaped', 1),
        (141, '<'): ('doublequoted_escaped', 1),
        (141, '='): ('doublequoted_escaped', 1),
        (141, '>'): ('doublequoted_escaped', 1),
        (141, 'IDENTIFIER'): ('doublequoted_escaped', 1),
        (141, 'LITERAL'): ('doublequoted_escaped', 1),
        (141, 'VARQUANT'): ('doublequoted_escaped', 1),
        (141, 'VARTYPE'): ('doublequoted_escaped', 1),
        (141, 'WHITESPACE'): ('doublequoted_escaped', 1),
        (141, '['): ('doublequoted_escaped', 1),
        (141, ']'): ('doublequoted_escaped', 1),
        (141, '|'): ('doublequoted_escaped', 1),
        (141, '~'): ('doublequoted_escaped', 1),
        (142, '!'): ('doublequoted_escaped', 1),
        (142, '"'): ('doublequoted_escaped', 1),
        (142, '$'): ('doublequoted_escaped', 1),
        (142, '&'): ('doublequoted_escaped', 1),
        (142, "'"): ('doublequoted_escaped', 1),
        (142, '+'): ('doublequoted_escaped', 1),
        (142, ','): ('doublequoted_escaped', 1),
        (142, '-'): ('doublequoted_escaped', 1),
        (142, ':'): ('doublequoted_escaped', 1),
        (142, ';'): ('doublequoted_escaped', 1),
        (142, '<'): ('doublequoted_escaped', 1),
        (142, '='): ('doublequoted_escaped', 1),
        (142, '>'): ('doublequoted_escaped', 1),
        (142, 'IDENTIFIER'): ('doublequoted_escaped', 1),
        (142, 'LITERAL'): ('doublequoted_escaped', 1),
        (142, 'VARQUANT'): ('doublequoted_escaped', 1),
        (142, 'VARTYPE'): ('doublequoted_escaped', 1),
        (142, 'WHITESPACE'): ('doublequoted_escaped', 1),
        (142, '['): ('doublequoted_escaped', 1),
        (142, ']'): ('doublequoted_escaped', 1),
        (142, '|'): ('doublequoted_escaped', 1),
        (142, '~'): ('doublequoted_escaped', 1),
        (143, '!'): ('doublequoted_escaped', 1),
        (143, '"'): ('doublequoted_escaped', 1),
        (143, '$'): ('doublequoted_escaped', 1),
        (143, '&'): ('doublequoted_escaped', 1),
        (143, "'"): ('doublequoted_escaped', 1),
        (143, '+'): ('doublequoted_escaped', 1),
        (143, ','): ('doublequoted_escaped', 1),
        (143, '-'): ('doublequoted_escaped', 1),
        (143, ':'): ('doublequoted_escaped', 1),
        (143, ';'): ('doublequoted_escaped', 1),
        (143, '<'): ('doublequoted_escaped', 1),
        (143, '='): ('doublequoted_escaped', 1),
        (143, '>'): ('doublequoted_escaped', 1),
        (143, 'IDENTIFIER'): ('doublequoted_escaped', 1),
        (143, 'LITERAL'): ('doublequoted_escaped', 1),
        (143, 'VARQUANT'): ('doublequoted_escaped', 1),
        (143, 'VARTYPE'): ('doublequoted_escaped', 1),
        (143, 'WHITESPACE'): ('doublequoted_escaped', 1),
        (143, '['): ('doublequoted_escaped', 1),
        (143, ']'): ('doublequoted_escaped', 1),
        (143, '|'): ('doublequoted_escaped', 1),
        (143, '~'): ('doublequoted_escaped', 1),
        (144, '!'): ('doublequoted_escaped', 1),
        (144, '"'): ('doublequoted_escaped', 1),
        (144, '$'): ('doublequoted_escaped', 1),
        (144, '&'): ('doublequoted_escaped', 1),
        (144, "'"): ('doublequoted_escaped', 1),
        (144, '+'): ('doublequoted_escaped', 1),
        (144, ','): ('doublequoted_escaped', 1),
        (144, '-'): ('doublequoted_escaped', 1),
        (144, ':'): ('doublequoted_escaped', 1),
        (144, ';'): ('doublequoted_escaped', 1),
        (144, '<'): ('doublequoted_escaped', 1),
        (144, '='): ('doublequoted_escaped', 1),
        (144, '>'): ('doublequoted_escaped', 1),
        (144, 'IDENTIFIER'): ('doublequoted_escaped', 1),
        (144, 'LITERAL'): ('doublequoted_escaped', 1),
        (144, 'VARQUANT'): ('doublequoted_escaped', 1),
        (144, 'VARTYPE'): ('doublequoted_escaped', 1),
        (144, 'WHITESPACE'): ('doublequoted_escaped', 1),
        (144, '['): ('doublequoted_escaped', 1),
        (144, ']'): ('doublequoted_escaped', 1),
        (144, '|'): ('doublequoted_escaped', 1),
        (144, '~'): ('doublequoted_escaped', 1),
        (145, '!'): ('singlequoted_escaped', 1),
        (145, '"'): ('singlequoted_escaped', 1),
        (145, '$'): ('singlequoted_escaped', 1),
        (145, '&'): ('singlequoted_escaped', 1),
        (145, "'"): ('singlequoted_escaped', 1),
        (145, '('): ('singlequoted_escaped', 1),
        (145, ')'): ('singlequoted_escaped', 1),
        (145, '+'): ('singlequoted_escaped', 1),
        (145, ','): ('singlequoted_escaped', 1),
        (145, '-'): ('singlequoted_escaped', 1),
        (145, ':'): ('singlequoted_escaped', 1),
        (145, ';'): ('singlequoted_escaped', 1),
        (145, '<'): ('singlequoted_escaped', 1),
        (145, '='): ('singlequoted_escaped', 1),
        (145, '>'): ('singlequoted_escaped', 1),
        (145, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (145, 'LITERAL'): ('singlequoted_escaped', 1),
        (145, 'VARQUANT'): ('singlequoted_escaped', 1),
        (145, 'VARTYPE'): ('singlequoted_escaped', 1),
        (145, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (145, '['): ('singlequoted_escaped', 1),
        (145, ']'): ('singlequoted_escaped', 1),
        (145, '{'): ('singlequoted_escaped', 1),
        (145, '|'): ('singlequoted_escaped', 1),
        (145, '}'): ('singlequoted_escaped', 1),
        (145, '~'): ('singlequoted_escaped', 1),
        (146, '!'): ('singlequoted_escaped', 1),
        (146, '"'): ('singlequoted_escaped', 1),
        (146, '$'): ('singlequoted_escaped', 1),
        (146, '&'): ('singlequoted_escaped', 1),
        (146, "'"): ('singlequoted_escaped', 1),
        (146, '('): ('singlequoted_escaped', 1),
        (146, ')'): ('singlequoted_escaped', 1),
        (146, '+'): ('singlequoted_escaped', 1),
        (146, ','): ('singlequoted_escaped', 1),
        (146, '-'): ('singlequoted_escaped', 1),
        (146, ':'): ('singlequoted_escaped', 1),
        (146, ';'): ('singlequoted_escaped', 1),
        (146, '<'): ('singlequoted_escaped', 1),
        (146, '='): ('singlequoted_escaped', 1),
        (146, '>'): ('singlequoted_escaped', 1),
        (146, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (146, 'LITERAL'): ('singlequoted_escaped', 1),
        (146, 'VARQUANT'): ('singlequoted_escaped', 1),
        (146, 'VARTYPE'): ('singlequoted_escaped', 1),
        (146, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (146, '['): ('singlequoted_escaped', 1),
        (146, ']'): ('singlequoted_escaped', 1),
        (146, '{'): ('singlequoted_escaped', 1),
        (146, '|'): ('singlequoted_escaped', 1),
        (146, '}'): ('singlequoted_escaped', 1),
        (146, '~'): ('singlequoted_escaped', 1),
        (147, '!'): ('singlequoted_escaped', 1),
        (147, '"'): ('singlequoted_escaped', 1),
        (147, '$'): ('singlequoted_escaped', 1),
        (147, '&'): ('singlequoted_escaped', 1),
        (147, "'"): ('singlequoted_escaped', 1),
        (147, '('): ('singlequoted_escaped', 1),
        (147, ')'): ('singlequoted_escaped', 1),
        (147, '+'): ('singlequoted_escaped', 1),
        (147, ','): ('singlequoted_escaped', 1),
        (147, '-'): ('singlequoted_escaped', 1),
        (147, ':'): ('singlequoted_escaped', 1),
        (147, ';'): ('singlequoted_escaped', 1),
        (147, '<'): ('singlequoted_escaped', 1),
        (147, '='): ('singlequoted_escaped', 1),
        (147, '>'): ('singlequoted_escaped', 1),
        (147, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (147, 'LITERAL'): ('singlequoted_escaped', 1),
        (147, 'VARQUANT'): ('singlequoted_escaped', 1),
        (147, 'VARTYPE'): ('singlequoted_escaped', 1),
        (147, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (147, '['): ('singlequoted_escaped', 1),
        (147, ']'): ('singlequoted_escaped', 1),
        (147, '{'): ('singlequoted_escaped', 1),
        (147, '|'): ('singlequoted_escaped', 1),
        (147, '}'): ('singlequoted_escaped', 1),
        (147, '~'): ('singlequoted_escaped', 1),
        (148, '!'): ('singlequoted_escaped', 1),
        (148, '"'): ('singlequoted_escaped', 1),
        (148, '$'): ('singlequoted_escaped', 1),
        (148, '&'): ('singlequoted_escaped', 1),
        (148, "'"): ('singlequoted_escaped', 1),
        (148, '('): ('singlequoted_escaped', 1),
        (148, ')'): ('singlequoted_escaped', 1),
        (148, '+'): ('singlequoted_escaped', 1),
        (148, ','): ('singlequoted_escaped', 1),
        (148, '-'): ('singlequoted_escaped', 1),
        (148, ':'): ('singlequoted_escaped', 1),
        (148, ';'): ('singlequoted_escaped', 1),
        (148, '<'): ('singlequoted_escaped', 1),
        (148, '='): ('singlequoted_escaped', 1),
        (148, '>'): ('singlequoted_escaped', 1),
        (148, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (148, 'LITERAL'): ('singlequoted_escaped', 1),
        (148, 'VARQUANT'): ('singlequoted_escaped', 1),
        (148, 'VARTYPE'): ('singlequoted_escaped', 1),
        (148, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (148, '['): ('singlequoted_escaped', 1),
        (148, ']'): ('singlequoted_escaped', 1),
        (148, '{'): ('singlequoted_escaped', 1),
        (148, '|'): ('singlequoted_escaped', 1),
        (148, '}'): ('singlequoted_escaped', 1),
        (148, '~'): ('singlequoted_escaped', 1),
        (149, '!'): ('singlequoted_escaped', 1),
        (149, '"'): ('singlequoted_escaped', 1),
        (149, '$'): ('singlequoted_escaped', 1),
        (149, '&'): ('singlequoted_escaped', 1),
        (149, "'"): ('singlequoted_escaped', 1),
        (149, '('): ('singlequoted_escaped', 1),
        (149, ')'): ('singlequoted_escaped', 1),
        (149, '+'): ('singlequoted_escaped', 1),
        (149, ','): ('singlequoted_escaped', 1),
        (149, '-'): ('singlequoted_escaped', 1),
        (149, ':'): ('singlequoted_escaped', 1),
        (149, ';'): ('singlequoted_escaped', 1),
        (149, '<'): ('singlequoted_escaped', 1),
        (149, '='): ('singlequoted_escaped', 1),
        (149, '>'): ('singlequoted_escaped', 1),
        (149, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (149, 'LITERAL'): ('singlequoted_escaped', 1),
        (149, 'VARQUANT'): ('singlequoted_escaped', 1),
        (149, 'VARTYPE'): ('singlequoted_escaped', 1),
        (149, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (149, '['): ('singlequoted_escaped', 1),
        (149, ']'): ('singlequoted_escaped', 1),
        (149, '{'): ('singlequoted_escaped', 1),
        (149, '|'): ('singlequoted_escaped', 1),
        (149, '}'): ('singlequoted_escaped', 1),
        (149, '~'): ('singlequoted_escaped', 1),
        (150, '!'): ('singlequoted_escaped', 1),
        (150, '"'): ('singlequoted_escaped', 1),
        (150, '$'): ('singlequoted_escaped', 1),
        (150, '&'): ('singlequoted_escaped', 1),
        (150, "'"): ('singlequoted_escaped', 1),
        (150, '('): ('singlequoted_escaped', 1),
        (150, ')'): ('singlequoted_escaped', 1),
        (150, '+'): ('singlequoted_escaped', 1),
        (150, ','): ('singlequoted_escaped', 1),
        (150, '-'): ('singlequoted_escaped', 1),
        (150, ':'): ('singlequoted_escaped', 1),
        (150, ';'): ('singlequoted_escaped', 1),
        (150, '<'): ('singlequoted_escaped', 1),
        (150, '='): ('singlequoted_escaped', 1),
        (150, '>'): ('singlequoted_escaped', 1),
        (150, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (150, 'LITERAL'): ('singlequoted_escaped', 1),
        (150, 'VARQUANT'): ('singlequoted_escaped', 1),
        (150, 'VARTYPE'): ('singlequoted_escaped', 1),
        (150, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (150, '['): ('singlequoted_escaped', 1),
        (150, ']'): ('singlequoted_escaped', 1),
        (150, '{'): ('singlequoted_escaped', 1),
        (150, '|'): ('singlequoted_escaped', 1),
        (150, '}'): ('singlequoted_escaped', 1),
        (150, '~'): ('singlequoted_escaped', 1),
        (151, '!'): ('singlequoted_escaped', 1),
        (151, '"'): ('singlequoted_escaped', 1),
        (151, '$'): ('singlequoted_escaped', 1),
        (151, '&'): ('singlequoted_escaped', 1),
        (151, "'"): ('singlequoted_escaped', 1),
        (151, '('): ('singlequoted_escaped', 1),
        (151, ')'): ('singlequoted_escaped', 1),
        (151, '+'): ('singlequoted_escaped', 1),
        (151, ','): ('singlequoted_escaped', 1),
        (151, '-'): ('singlequoted_escaped', 1),
        (151, ':'): ('singlequoted_escaped', 1),
        (151, ';'): ('singlequoted_escaped', 1),
        (151, '<'): ('singlequoted_escaped', 1),
        (151, '='): ('singlequoted_escaped', 1),
        (151, '>'): ('singlequoted_escaped', 1),
        (151, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (151, 'LITERAL'): ('singlequoted_escaped', 1),
        (151, 'VARQUANT'): ('singlequoted_escaped', 1),
        (151, 'VARTYPE'): ('singlequoted_escaped', 1),
        (151, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (151, '['): ('singlequoted_escaped', 1),
        (151, ']'): ('singlequoted_escaped', 1),
        (151, '{'): ('singlequoted_escaped', 1),
        (151, '|'): ('singlequoted_escaped', 1),
        (151, '}'): ('singlequoted_escaped', 1),
        (151, '~'): ('singlequoted_escaped', 1),
        (152, '!'): ('singlequoted_escaped', 1),
        (152, '"'): ('singlequoted_escaped', 1),
        (152, '$'): ('singlequoted_escaped', 1),
        (152, '&'): ('singlequoted_escaped', 1),
        (152, "'"): ('singlequoted_escaped', 1),
        (152, '('): ('singlequoted_escaped', 1),
        (152, ')'): ('singlequoted_escaped', 1),
        (152, '+'): ('singlequoted_escaped', 1),
        (152, ','): ('singlequoted_escaped', 1),
        (152, '-'): ('singlequoted_escaped', 1),
        (152, ':'): ('singlequoted_escaped', 1),
        (152, ';'): ('singlequoted_escaped', 1),
        (152, '<'): ('singlequoted_escaped', 1),
        (152, '='): ('singlequoted_escaped', 1),
        (152, '>'): ('singlequoted_escaped', 1),
        (152, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (152, 'LITERAL'): ('singlequoted_escaped', 1),
        (152, 'VARQUANT'): ('singlequoted_escaped', 1),
        (152, 'VARTYPE'): ('singlequoted_escaped', 1),
        (152, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (152, '['): ('singlequoted_escaped', 1),
        (152, ']'): ('singlequoted_escaped', 1),
        (152, '{'): ('singlequoted_escaped', 1),
        (152, '|'): ('singlequoted_escaped', 1),
        (152, '}'): ('singlequoted_escaped', 1),
        (152, '~'): ('singlequoted_escaped', 1),
        (153, '!'): ('singlequoted_escaped', 1),
        (153, '"'): ('singlequoted_escaped', 1),
        (153, '$'): ('singlequoted_escaped', 1),
        (153, '&'): ('singlequoted_escaped', 1),
        (153, "'"): ('singlequoted_escaped', 1),
        (153, '('): ('singlequoted_escaped', 1),
        (153, ')'): ('singlequoted_escaped', 1),
        (153, '+'): ('singlequoted_escaped', 1),
        (153, ','): ('singlequoted_escaped', 1),
        (153, '-'): ('singlequoted_escaped', 1),
        (153, ':'): ('singlequoted_escaped', 1),
        (153, ';'): ('singlequoted_escaped', 1),
        (153, '<'): ('singlequoted_escaped', 1),
        (153, '='): ('singlequoted_escaped', 1),
        (153, '>'): ('singlequoted_escaped', 1),
        (153, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (153, 'LITERAL'): ('singlequoted_escaped', 1),
        (153, 'VARQUANT'): ('singlequoted_escaped', 1),
        (153, 'VARTYPE'): ('singlequoted_escaped', 1),
        (153, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (153, '['): ('singlequoted_escaped', 1),
        (153, ']'): ('singlequoted_escaped', 1),
        (153, '{'): ('singlequoted_escaped', 1),
        (153, '|'): ('singlequoted_escaped', 1),
        (153, '}'): ('singlequoted_escaped', 1),
        (153, '~'): ('singlequoted_escaped', 1),
        (154, '!'): ('singlequoted_escaped', 1),
        (154, '"'): ('singlequoted_escaped', 1),
        (154, '$'): ('singlequoted_escaped', 1),
        (154, '&'): ('singlequoted_escaped', 1),
        (154, "'"): ('singlequoted_escaped', 1),
        (154, '('): ('singlequoted_escaped', 1),
        (154, ')'): ('singlequoted_escaped', 1),
        (154, '+'): ('singlequoted_escaped', 1),
        (154, ','): ('singlequoted_escaped', 1),
        (154, '-'): ('singlequoted_escaped', 1),
        (154, ':'): ('singlequoted_escaped', 1),
        (154, ';'): ('singlequoted_escaped', 1),
        (154, '<'): ('singlequoted_escaped', 1),
        (154, '='): ('singlequoted_escaped', 1),
        (154, '>'): ('singlequoted_escaped', 1),
        (154, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (154, 'LITERAL'): ('singlequoted_escaped', 1),
        (154, 'VARQUANT'): ('singlequoted_escaped', 1),
        (154, 'VARTYPE'): ('singlequoted_escaped', 1),
        (154, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (154, '['): ('singlequoted_escaped', 1),
        (154, ']'): ('singlequoted_escaped', 1),
        (154, '{'): ('singlequoted_escaped', 1),
        (154, '|'): ('singlequoted_escaped', 1),
        (154, '}'): ('singlequoted_escaped', 1),
        (154, '~'): ('singlequoted_escaped', 1),
        (155, '!'): ('singlequoted_escaped', 1),
        (155, '"'): ('singlequoted_escaped', 1),
        (155, '$'): ('singlequoted_escaped', 1),
        (155, '&'): ('singlequoted_escaped', 1),
        (155, "'"): ('singlequoted_escaped', 1),
        (155, '('): ('singlequoted_escaped', 1),
        (155, ')'): ('singlequoted_escaped', 1),
        (155, '+'): ('singlequoted_escaped', 1),
        (155, ','): ('singlequoted_escaped', 1),
        (155, '-'): ('singlequoted_escaped', 1),
        (155, ':'): ('singlequoted_escaped', 1),
        (155, ';'): ('singlequoted_escaped', 1),
        (155, '<'): ('singlequoted_escaped', 1),
        (155, '='): ('singlequoted_escaped', 1),
        (155, '>'): ('singlequoted_escaped', 1),
        (155, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (155, 'LITERAL'): ('singlequoted_escaped', 1),
        (155, 'VARQUANT'): ('singlequoted_escaped', 1),
        (155, 'VARTYPE'): ('singlequoted_escaped', 1),
        (155, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (155, '['): ('singlequoted_escaped', 1),
        (155, ']'): ('singlequoted_escaped', 1),
        (155, '{'): ('singlequoted_escaped', 1),
        (155, '|'): ('singlequoted_escaped', 1),
        (155, '}'): ('singlequoted_escaped', 1),
        (155, '~'): ('singlequoted_escaped', 1),
        (156, '!'): ('singlequoted_escaped', 1),
        (156, '"'): ('singlequoted_escaped', 1),
        (156, '$'): ('singlequoted_escaped', 1),
        (156, '&'): ('singlequoted_escaped', 1),
        (156, "'"): ('singlequoted_escaped', 1),
        (156, '('): ('singlequoted_escaped', 1),
        (156, ')'): ('singlequoted_escaped', 1),
        (156, '+'): ('singlequoted_escaped', 1),
        (156, ','): ('singlequoted_escaped', 1),
        (156, '-'): ('singlequoted_escaped', 1),
        (156, ':'): ('singlequoted_escaped', 1),
        (156, ';'): ('singlequoted_escaped', 1),
        (156, '<'): ('singlequoted_escaped', 1),
        (156, '='): ('singlequoted_escaped', 1),
        (156, '>'): ('singlequoted_escaped', 1),
        (156, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (156, 'LITERAL'): ('singlequoted_escaped', 1),
        (156, 'VARQUANT'): ('singlequoted_escaped', 1),
        (156, 'VARTYPE'): ('singlequoted_escaped', 1),
        (156, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (156, '['): ('singlequoted_escaped', 1),
        (156, ']'): ('singlequoted_escaped', 1),
        (156, '{'): ('singlequoted_escaped', 1),
        (156, '|'): ('singlequoted_escaped', 1),
        (156, '}'): ('singlequoted_escaped', 1),
        (156, '~'): ('singlequoted_escaped', 1),
        (157, '!'): ('singlequoted_escaped', 1),
        (157, '"'): ('singlequoted_escaped', 1),
        (157, '$'): ('singlequoted_escaped', 1),
        (157, '&'): ('singlequoted_escaped', 1),
        (157, "'"): ('singlequoted_escaped', 1),
        (157, '('): ('singlequoted_escaped', 1),
        (157, ')'): ('singlequoted_escaped', 1),
        (157, '+'): ('singlequoted_escaped', 1),
        (157, ','): ('singlequoted_escaped', 1),
        (157, '-'): ('singlequoted_escaped', 1),
        (157, ':'): ('singlequoted_escaped', 1),
        (157, ';'): ('singlequoted_escaped', 1),
        (157, '<'): ('singlequoted_escaped', 1),
        (157, '='): ('singlequoted_escaped', 1),
        (157, '>'): ('singlequoted_escaped', 1),
        (157, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (157, 'LITERAL'): ('singlequoted_escaped', 1),
        (157, 'VARQUANT'): ('singlequoted_escaped', 1),
        (157, 'VARTYPE'): ('singlequoted_escaped', 1),
        (157, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (157, '['): ('singlequoted_escaped', 1),
        (157, ']'): ('singlequoted_escaped', 1),
        (157, '{'): ('singlequoted_escaped', 1),
        (157, '|'): ('singlequoted_escaped', 1),
        (157, '}'): ('singlequoted_escaped', 1),
        (157, '~'): ('singlequoted_escaped', 1),
        (158, '!'): ('singlequoted_escaped', 1),
        (158, '"'): ('singlequoted_escaped', 1),
        (158, '$'): ('singlequoted_escaped', 1),
        (158, '&'): ('singlequoted_escaped', 1),
        (158, "'"): ('singlequoted_escaped', 1),
        (158, '('): ('singlequoted_escaped', 1),
        (158, ')'): ('singlequoted_escaped', 1),
        (158, '+'): ('singlequoted_escaped', 1),
        (158, ','): ('singlequoted_escaped', 1),
        (158, '-'): ('singlequoted_escaped', 1),
        (158, ':'): ('singlequoted_escaped', 1),
        (158, ';'): ('singlequoted_escaped', 1),
        (158, '<'): ('singlequoted_escaped', 1),
        (158, '='): ('singlequoted_escaped', 1),
        (158, '>'): ('singlequoted_escaped', 1),
        (158, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (158, 'LITERAL'): ('singlequoted_escaped', 1),
        (158, 'VARQUANT'): ('singlequoted_escaped', 1),
        (158, 'VARTYPE'): ('singlequoted_escaped', 1),
        (158, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (158, '['): ('singlequoted_escaped', 1),
        (158, ']'): ('singlequoted_escaped', 1),
        (158, '{'): ('singlequoted_escaped', 1),
        (158, '|'): ('singlequoted_escaped', 1),
        (158, '}'): ('singlequoted_escaped', 1),
        (158, '~'): ('singlequoted_escaped', 1),
        (159, '!'): ('singlequoted_escaped', 1),
        (159, '"'): ('singlequoted_escaped', 1),
        (159, '$'): ('singlequoted_escaped', 1),
        (159, '&'): ('singlequoted_escaped', 1),
        (159, "'"): ('singlequoted_escaped', 1),
        (159, '('): ('singlequoted_escaped', 1),
        (159, ')'): ('singlequoted_escaped', 1),
        (159, '+'): ('singlequoted_escaped', 1),
        (159, ','): ('singlequoted_escaped', 1),
        (159, '-'): ('singlequoted_escaped', 1),
        (159, ':'): ('singlequoted_escaped', 1),
        (159, ';'): ('singlequoted_escaped', 1),
        (159, '<'): ('singlequoted_escaped', 1),
        (159, '='): ('singlequoted_escaped', 1),
        (159, '>'): ('singlequoted_escaped', 1),
        (159, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (159, 'LITERAL'): ('singlequoted_escaped', 1),
        (159, 'VARQUANT'): ('singlequoted_escaped', 1),
        (159, 'VARTYPE'): ('singlequoted_escaped', 1),
        (159, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (159, '['): ('singlequoted_escaped', 1),
        (159, ']'): ('singlequoted_escaped', 1),
        (159, '{'): ('singlequoted_escaped', 1),
        (159, '|'): ('singlequoted_escaped', 1),
        (159, '}'): ('singlequoted_escaped', 1),
        (159, '~'): ('singlequoted_escaped', 1),
        (160, '!'): ('singlequoted_escaped', 1),
        (160, '"'): ('singlequoted_escaped', 1),
        (160, '$'): ('singlequoted_escaped', 1),
        (160, '&'): ('singlequoted_escaped', 1),
        (160, "'"): ('singlequoted_escaped', 1),
        (160, '('): ('singlequoted_escaped', 1),
        (160, ')'): ('singlequoted_escaped', 1),
        (160, '+'): ('singlequoted_escaped', 1),
        (160, ','): ('singlequoted_escaped', 1),
        (160, '-'): ('singlequoted_escaped', 1),
        (160, ':'): ('singlequoted_escaped', 1),
        (160, ';'): ('singlequoted_escaped', 1),
        (160, '<'): ('singlequoted_escaped', 1),
        (160, '='): ('singlequoted_escaped', 1),
        (160, '>'): ('singlequoted_escaped', 1),
        (160, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (160, 'LITERAL'): ('singlequoted_escaped', 1),
        (160, 'VARQUANT'): ('singlequoted_escaped', 1),
        (160, 'VARTYPE'): ('singlequoted_escaped', 1),
        (160, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (160, '['): ('singlequoted_escaped', 1),
        (160, ']'): ('singlequoted_escaped', 1),
        (160, '{'): ('singlequoted_escaped', 1),
        (160, '|'): ('singlequoted_escaped', 1),
        (160, '}'): ('singlequoted_escaped', 1),
        (160, '~'): ('singlequoted_escaped', 1),
        (161, '!'): ('singlequoted_escaped', 1),
        (161, '"'): ('singlequoted_escaped', 1),
        (161, '$'): ('singlequoted_escaped', 1),
        (161, '&'): ('singlequoted_escaped', 1),
        (161, "'"): ('singlequoted_escaped', 1),
        (161, '('): ('singlequoted_escaped', 1),
        (161, ')'): ('singlequoted_escaped', 1),
        (161, '+'): ('singlequoted_escaped', 1),
        (161, ','): ('singlequoted_escaped', 1),
        (161, '-'): ('singlequoted_escaped', 1),
        (161, ':'): ('singlequoted_escaped', 1),
        (161, ';'): ('singlequoted_escaped', 1),
        (161, '<'): ('singlequoted_escaped', 1),
        (161, '='): ('singlequoted_escaped', 1),
        (161, '>'): ('singlequoted_escaped', 1),
        (161, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (161, 'LITERAL'): ('singlequoted_escaped', 1),
        (161, 'VARQUANT'): ('singlequoted_escaped', 1),
        (161, 'VARTYPE'): ('singlequoted_escaped', 1),
        (161, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (161, '['): ('singlequoted_escaped', 1),
        (161, ']'): ('singlequoted_escaped', 1),
        (161, '{'): ('singlequoted_escaped', 1),
        (161, '|'): ('singlequoted_escaped', 1),
        (161, '}'): ('singlequoted_escaped', 1),
        (161, '~'): ('singlequoted_escaped', 1),
        (162, '!'): ('singlequoted_escaped', 1),
        (162, '"'): ('singlequoted_escaped', 1),
        (162, '$'): ('singlequoted_escaped', 1),
        (162, '&'): ('singlequoted_escaped', 1),
        (162, "'"): ('singlequoted_escaped', 1),
        (162, '('): ('singlequoted_escaped', 1),
        (162, ')'): ('singlequoted_escaped', 1),
        (162, '+'): ('singlequoted_escaped', 1),
        (162, ','): ('singlequoted_escaped', 1),
        (162, '-'): ('singlequoted_escaped', 1),
        (162, ':'): ('singlequoted_escaped', 1),
        (162, ';'): ('singlequoted_escaped', 1),
        (162, '<'): ('singlequoted_escaped', 1),
        (162, '='): ('singlequoted_escaped', 1),
        (162, '>'): ('singlequoted_escaped', 1),
        (162, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (162, 'LITERAL'): ('singlequoted_escaped', 1),
        (162, 'VARQUANT'): ('singlequoted_escaped', 1),
        (162, 'VARTYPE'): ('singlequoted_escaped', 1),
        (162, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (162, '['): ('singlequoted_escaped', 1),
        (162, ']'): ('singlequoted_escaped', 1),
        (162, '{'): ('singlequoted_escaped', 1),
        (162, '|'): ('singlequoted_escaped', 1),
        (162, '}'): ('singlequoted_escaped', 1),
        (162, '~'): ('singlequoted_escaped', 1),
        (163, '!'): ('singlequoted_escaped', 1),
        (163, '"'): ('singlequoted_escaped', 1),
        (163, '$'): ('singlequoted_escaped', 1),
        (163, '&'): ('singlequoted_escaped', 1),
        (163, "'"): ('singlequoted_escaped', 1),
        (163, '('): ('singlequoted_escaped', 1),
        (163, ')'): ('singlequoted_escaped', 1),
        (163, '+'): ('singlequoted_escaped', 1),
        (163, ','): ('singlequoted_escaped', 1),
        (163, '-'): ('singlequoted_escaped', 1),
        (163, ':'): ('singlequoted_escaped', 1),
        (163, ';'): ('singlequoted_escaped', 1),
        (163, '<'): ('singlequoted_escaped', 1),
        (163, '='): ('singlequoted_escaped', 1),
        (163, '>'): ('singlequoted_escaped', 1),
        (163, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (163, 'LITERAL'): ('singlequoted_escaped', 1),
        (163, 'VARQUANT'): ('singlequoted_escaped', 1),
        (163, 'VARTYPE'): ('singlequoted_escaped', 1),
        (163, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (163, '['): ('singlequoted_escaped', 1),
        (163, ']'): ('singlequoted_escaped', 1),
        (163, '{'): ('singlequoted_escaped', 1),
        (163, '|'): ('singlequoted_escaped', 1),
        (163, '}'): ('singlequoted_escaped', 1),
        (163, '~'): ('singlequoted_escaped', 1),
        (164, '!'): ('singlequoted_escaped', 1),
        (164, '"'): ('singlequoted_escaped', 1),
        (164, '$'): ('singlequoted_escaped', 1),
        (164, '&'): ('singlequoted_escaped', 1),
        (164, "'"): ('singlequoted_escaped', 1),
        (164, '('): ('singlequoted_escaped', 1),
        (164, ')'): ('singlequoted_escaped', 1),
        (164, '+'): ('singlequoted_escaped', 1),
        (164, ','): ('singlequoted_escaped', 1),
        (164, '-'): ('singlequoted_escaped', 1),
        (164, ':'): ('singlequoted_escaped', 1),
        (164, ';'): ('singlequoted_escaped', 1),
        (164, '<'): ('singlequoted_escaped', 1),
        (164, '='): ('singlequoted_escaped', 1),
        (164, '>'): ('singlequoted_escaped', 1),
        (164, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (164, 'LITERAL'): ('singlequoted_escaped', 1),
        (164, 'VARQUANT'): ('singlequoted_escaped', 1),
        (164, 'VARTYPE'): ('singlequoted_escaped', 1),
        (164, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (164, '['): ('singlequoted_escaped', 1),
        (164, ']'): ('singlequoted_escaped', 1),
        (164, '{'): ('singlequoted_escaped', 1),
        (164, '|'): ('singlequoted_escaped', 1),
        (164, '}'): ('singlequoted_escaped', 1),
        (164, '~'): ('singlequoted_escaped', 1)
    }
    _goto = {
        (0, '_20?'): 2, (0, 'statement'): 1, (2, '_8*'): 18,
        (2, 'assignment'): 4, (2, 'declaration'): 3, (2, 'quantifier'): 5,
        (6, 'type'): 7, (8, 'identifier'): 9, (9, '_20?'): 10, (10, '_4*'): 11,
        (12, '_20?'): 13, (13, 'identifier'): 14, (14, '_20?'): 15,
        (18, 'assignmentvarwithop'): 19, (18, 'assignmentvarwithoutop'): 22,
        (18, 'identifier'): 24, (19, '_(53)'): 96, (19, '_54+'): 90,
        (19, 'doublequoted'): 94, (19, 'funcall'): 92, (19, 'literal'): 91,
        (19, 'singlequoted'): 95, (19, 'value'): 87, (19, 'valuelist'): 20,
        (19, 'varcall'): 93, (24, '_20?'): 25, (25, '_12?'): 26,
        (25, 'condition'): 28, (26, 'assignmentop'): 27, (30, '_20?'): 31,
        (31, 'conjunction'): 46, (31, 'disjunction'): 32,
        (31, 'identifier'): 56, (31, 'logicunop'): 66, (31, 'test'): 51,
        (32, '_20?'): 33, (34, '_20?'): 35, (42, '_20?'): 43,
        (44, '_(53)'): 96, (44, '_54+'): 90, (44, 'doublequoted'): 94,
        (44, 'funcall'): 92, (44, 'literal'): 91, (44, 'singlequoted'): 95,
        (44, 'value'): 125, (44, 'varcall'): 93, (46, '_20?'): 47,
        (47, 'disjunctionop'): 48, (48, '_20?'): 49, (49, 'conjunction'): 50,
        (49, 'identifier'): 56, (49, 'logicunop'): 66, (49, 'test'): 51,
        (51, '_20?'): 52, (52, 'conjunctionop'): 53, (53, '_20?'): 54,
        (54, 'identifier'): 56, (54, 'logicunop'): 66, (54, 'test'): 55,
        (56, '_20?'): 57, (57, 'testop'): 58, (58, '_20?'): 59,
        (59, '_(53)'): 96, (59, '_54+'): 90, (59, 'doublequoted'): 94,
        (59, 'funcall'): 92, (59, 'literal'): 91, (59, 'singlequoted'): 95,
        (59, 'value'): 60, (59, 'varcall'): 93, (61, '_20?'): 62,
        (62, 'conjunction'): 46, (62, 'disjunction'): 63,
        (62, 'identifier'): 56, (62, 'logicunop'): 66, (62, 'test'): 51,
        (63, '_20?'): 64, (66, '_20?'): 67, (67, 'conjunction'): 46,
        (67, 'disjunction'): 68, (67, 'identifier'): 56, (67, 'logicunop'): 66,
        (67, 'test'): 51, (87, '_61*'): 88, (88, '_20?'): 89,
        (90, '_(53)'): 97, (90, 'doublequoted'): 94, (90, 'funcall'): 92,
        (90, 'literal'): 91, (90, 'singlequoted'): 95, (90, 'varcall'): 93,
        (98, '_56*'): 99, (99, '_(55)'): 106,
        (99, 'doublequoted_escaped'): 103, (99, 'funcall'): 104,
        (99, 'literal'): 101, (99, 'varcall'): 105, (107, '_58*'): 108,
        (108, '_(57)'): 113, (108, 'literal'): 110,
        (108, 'singlequoted_escaped'): 112, (118, 'identifier'): 126,
        (119, '_20?'): 120, (120, '_(53)'): 96, (120, '_54+'): 90,
        (120, 'doublequoted'): 94, (120, 'funcall'): 92, (120, 'literal'): 91,
        (120, 'singlequoted'): 95, (120, 'value'): 121, (120, 'varcall'): 93,
        (121, '_61*'): 122, (122, '_20?'): 123, (127, '_(53)'): 96,
        (127, '_54+'): 90, (127, 'doublequoted'): 94, (127, 'funcall'): 92,
        (127, 'literal'): 91, (127, 'singlequoted'): 95, (127, 'value'): 128,
        (127, 'varcall'): 93
    }
    _shift = {
        (0, 'WHITESPACE'): 45, (1, EOF): 165, (2, 'VARQUANT'): 16,
        (5, 'WHITESPACE'): 6, (6, 'VARTYPE'): 17, (7, 'WHITESPACE'): 8,
        (8, 'IDENTIFIER'): 29, (9, 'WHITESPACE'): 45, (11, ','): 12,
        (12, 'WHITESPACE'): 45, (13, 'IDENTIFIER'): 29, (14, 'WHITESPACE'): 45,
        (18, 'IDENTIFIER'): 29, (19, '"'): 98, (19, '$'): 118, (19, "'"): 107,
        (19, ','): 21, (19, 'IDENTIFIER'): 114, (19, 'LITERAL'): 115,
        (19, 'VARQUANT'): 117, (19, 'VARTYPE'): 116, (22, ','): 23,
        (24, 'WHITESPACE'): 45, (25, '['): 30, (26, '+'): 38, (26, '-'): 41,
        (26, ':'): 36, (26, '='): 40, (30, 'WHITESPACE'): 45, (31, '!'): 69,
        (31, '('): 61, (31, 'IDENTIFIER'): 29, (32, 'WHITESPACE'): 45,
        (33, ']'): 34, (34, 'WHITESPACE'): 45, (36, '='): 37, (38, '='): 39,
        (41, '='): 42, (42, 'WHITESPACE'): 45, (44, '"'): 98, (44, '$'): 118,
        (44, "'"): 107, (44, 'IDENTIFIER'): 114, (44, 'LITERAL'): 115,
        (44, 'VARQUANT'): 117, (44, 'VARTYPE'): 116, (46, 'WHITESPACE'): 45,
        (47, ';'): 70, (47, '|'): 71, (48, 'WHITESPACE'): 45, (49, '!'): 69,
        (49, '('): 61, (49, 'IDENTIFIER'): 29, (51, 'WHITESPACE'): 45,
        (52, '&'): 74, (52, ','): 73, (53, 'WHITESPACE'): 45, (54, '!'): 69,
        (54, '('): 61, (54, 'IDENTIFIER'): 29, (56, 'WHITESPACE'): 45,
        (57, '!'): 78, (57, '<'): 80, (57, '='): 76, (57, '>'): 81,
        (57, '~'): 84, (58, 'WHITESPACE'): 45, (59, '"'): 98, (59, '$'): 118,
        (59, "'"): 107, (59, 'IDENTIFIER'): 114, (59, 'LITERAL'): 115,
        (59, 'VARQUANT'): 117, (59, 'VARTYPE'): 116, (61, 'WHITESPACE'): 45,
        (62, '!'): 69, (62, '('): 61, (62, 'IDENTIFIER'): 29,
        (63, 'WHITESPACE'): 45, (64, ')'): 65, (66, 'WHITESPACE'): 45,
        (67, '!'): 69, (67, '('): 61, (67, 'IDENTIFIER'): 29, (71, '|'): 72,
        (74, '&'): 75, (76, '='): 77, (76, '~'): 86, (78, '='): 79,
        (80, '='): 82, (81, '='): 83, (84, '='): 85, (88, 'WHITESPACE'): 44,
        (90, '"'): 98, (90, '$'): 118, (90, "'"): 107, (90, 'IDENTIFIER'): 114,
        (90, 'LITERAL'): 115, (90, 'VARQUANT'): 117, (90, 'VARTYPE'): 116,
        (99, '!'): 130, (99, '"'): 100, (99, '$'): 118, (99, '&'): 137,
        (99, "'"): 144, (99, '+'): 142, (99, ','): 138, (99, '-'): 143,
        (99, ':'): 140, (99, ';'): 139, (99, '<'): 132, (99, '='): 131,
        (99, '>'): 133, (99, 'IDENTIFIER'): 114, (99, 'LITERAL'): 115,
        (99, 'VARQUANT'): 117, (99, 'VARTYPE'): 116, (99, 'WHITESPACE'): 102,
        (99, '['): 134, (99, ']'): 135, (99, '|'): 136, (99, '~'): 141,
        (108, '!'): 145, (108, '"'): 159, (108, '$'): 160, (108, '&'): 152,
        (108, "'"): 109, (108, '('): 161, (108, ')'): 162, (108, '+'): 157,
        (108, ','): 153, (108, '-'): 158, (108, ':'): 155, (108, ';'): 154,
        (108, '<'): 147, (108, '='): 146, (108, '>'): 148,
        (108, 'IDENTIFIER'): 114, (108, 'LITERAL'): 115,
        (108, 'VARQUANT'): 117, (108, 'VARTYPE'): 116,
        (108, 'WHITESPACE'): 111, (108, '['): 149, (108, ']'): 150,
        (108, '{'): 163, (108, '|'): 151, (108, '}'): 164, (108, '~'): 156,
        (118, '('): 119, (118, 'IDENTIFIER'): 29, (118, '{'): 127,
        (119, 'WHITESPACE'): 45, (120, '"'): 98, (120, '$'): 118,
        (120, "'"): 107, (120, 'IDENTIFIER'): 114, (120, 'LITERAL'): 115,
        (120, 'VARQUANT'): 117, (120, 'VARTYPE'): 116, (122, 'WHITESPACE'): 44,
        (123, ')'): 124, (127, '"'): 98, (127, '$'): 118, (127, "'"): 107,
        (127, 'IDENTIFIER'): 114, (127, 'LITERAL'): 115,
        (127, 'VARQUANT'): 117, (127, 'VARTYPE'): 116, (128, '}'): 129
    }

    def __init__(self, max_err=None, errcorr_pre=4, errcorr_post=4):
        """Create a new parser instance.

        The constructor arguments are all optional, they control the
        handling of parse errors: `max_err` can be given to bound the
        number of errors reported during one run of the parser.
        `errcorr_pre` controls how many tokens before an invalid token
        the parser considers when trying to repair the input.
        `errcorr_post` controls how far beyond an invalid token the
        parser reads when evaluating the quality of an attempted
        repair.
        """
        self.max_err = max_err
        self.m = errcorr_pre
        self.n = errcorr_post

    @staticmethod
    def leaves(tree):
        """Iterate over the leaves of a parse tree.

        This function can be used to reconstruct the input from a
        parse tree.
        """
        if tree[0] in Parser.terminals:
            yield tree
        else:
            for x in tree[1:]:
                for t in Parser.leaves(x):
                    yield t

    def _parse(self, input, stack, state):
        """Internal function to construct a parse tree.

        'Input' is the input token stream, 'stack' is the inital stack
        and 'state' is the inital state of the automaton.

        Returns a 4-tuple (done, count, state, error).  'done' is a
        boolean indicationg whether parsing is completed, 'count' is
        number of successfully shifted tokens, and 'error' is None on
        success or else the first token which could not be parsed.
        """
        read_next = True
        count = 0
        while state != self._halting_state:
            if read_next:
                try:
                    lookahead = next(input)
                except StopIteration:
                    return (False,count,state,None)
                read_next = False
            token = lookahead[0]

            if (state,token) in self._shift:
                stack.append((state,lookahead))
                state = self._shift[(state,token)]
                read_next = True
                count += 1
            elif (state,token) in self._reduce:
                X,n = self._reduce[(state,token)]
                if n > 0:
                    state = stack[-n][0]
                    tree = [ X ]
                    for s in stack[-n:]:
                        if s[1][0] in self._transparent:
                            tree.extend(s[1][1:])
                        else:
                            tree.append(s[1])
                    tree = tuple(tree)
                    del stack[-n:]
                else:
                    tree = (X,)
                stack.append((state,tree))
                state = self._goto[(state,X)]
            else:
                return (False,count,state,lookahead)
        return (True,count,state,None)

    def _try_parse(self, input, stack, state):
        count = 0
        while state != self._halting_state and count < len(input):
            token = input[count][0]

            if (state,token) in self._shift:
                stack.append(state)
                state = self._shift[(state,token)]
                count += 1
            elif (state,token) in self._reduce:
                X,n = self._reduce[(state,token)]
                if n > 0:
                    state = stack[-n]
                    del stack[-n:]
                stack.append(state)
                state = self._goto[(state,X)]
            else:
                break
        return count

    def parse(self, input):
        """Parse the tokens from `input` and construct a parse tree.

        `input` must be an interable over tuples.  The first element
        of each tuple must be a terminal symbol of the grammar which
        is used for parsing.  All other element of the tuple are just
        copied into the constructed parse tree.

        If `input` is invalid, a ParseErrors exception is raised.
        Otherwise the function returns the parse tree.
        """
        errors = []
        input = chain(input, [(self.EOF,)])
        stack = []
        state = 0
        while True:
            done,_,state,lookahead = self._parse(input, stack, state)
            if done:
                break

            expect = [ t for s,t in list(self._reduce.keys())+list(self._shift.keys())
                       if s == state ]
            errors.append((lookahead, expect))
            if self.max_err is not None and len(errors) >= self.max_err:
                raise self.ParseErrors(errors, None)

            queue = []
            def split_input(m, stack, lookahead, input, queue):
                for s in stack:
                    for t in self.leaves(s[1]):
                        queue.append(t)
                        if len(queue) > m:
                            yield queue.pop(0)
                queue.append(lookahead)
            in2 = split_input(self.m, stack, lookahead, input, queue)
            stack = []
            done,_,state,lookahead = self._parse(in2, stack, 0)
            m = len(queue)
            for i in range(0, self.n):
                try:
                    queue.append(next(input))
                except StopIteration:
                    break

            def vary_queue(queue, m):
                for i in range(m-1, -1, -1):
                    for t in self.terminals:
                        yield queue[:i]+[(t,)]+queue[i:]
                    if queue[i][0] == self.EOF:
                        continue
                    for t in self.terminals:
                        if t == queue[i]:
                            continue
                        yield queue[:i]+[(t,)]+queue[i+1:]
                    yield queue[:i]+queue[i+1:]
            best_val = len(queue)-m+1
            best_queue = queue
            for q2 in vary_queue(queue, m):
                pos = self._try_parse(q2, [ s[0] for s in stack ], state)
                val = len(q2) - pos
                if val < best_val:
                    best_val = val
                    best_queue = q2
                    if val == len(q2):
                        break
            if best_val >= len(queue)-m+1:
                raise self.ParseErrors(errors, None)
            input = chain(best_queue, input)

        tree = stack[0][1]
        if errors:
            raise self.ParseErrors(errors, tree)
        return tree
