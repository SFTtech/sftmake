# LR(1) parser, autogenerated on 2013-05-06 23:31:18
# generator: wisent 0.6.2, http://seehuhn.de/pages/wisent
# source: assignmentgrammar.wi

# All parts of this file which are not taken verbatim from the input grammar
# are covered by the following notice:
#
# Copyright (C) 2008, 2009  Jochen Voss <voss@seehuhn.de>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#   1. Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#
#   2. Redistributions in binary form must reproduce the above
#      copyright notice, this list of conditions and the following
#      disclaimer in the documentation and/or other materials provided
#      with the distribution.
#
#   3. The name of the author may not be used to endorse or promote
#      products derived from this software without specific prior
#      written permission.
#
# This software is provided by the author "as is" and any express or
# implied warranties, including, but not limited to, the implied
# warranties of merchantability and fitness for a particular purpose
# are disclaimed.  In no event shall the author be liable for any
# direct, indirect, incidental, special, exemplary, or consequential
# damages (including, but not limited to, procurement of substitute
# goods or services; loss of use, data, or profits; or business
# interruption) however caused and on any theory of liability, whether
# in contract, strict liability, or tort (including negligence or
# otherwise) arising in any way out of the use of this software, even
# if advised of the possibility of such damage.

from itertools import chain

class Unique(object):

    """Unique objects for use as markers.

    These objects are internally used to represent the start symbol
    and the end-of-input marker of the grammar.
    """

    def __init__(self, label):
        """Create a new unique object.

        `label` is a string which is used as a textual representation
        of the object.
        """
        self.label = label

    def __repr__(self):
        """Return the `label` given at object construction."""
        return self.label

    def __lt__(self, other):
        if isinstance(other, str):
            return self.label < other
        if isinstance(other, Unique):
            return self.label < other.label
        return NotImplemented()

    def __gt__(self, other):
        if isinstance(other, str):
            return self.label > other
        if isinstance(other, Unique):
            return self.label > other.label
        return NotImplemented()

class Parser(object):

    """LR(1) parser class.

    terminal symbols:
      '!', '"', '$', '&', "'", '(', ')', '+', ',', '-', ':', ';', '<', '=',
      '>', 'IDENTIFIER', 'LITERAL', 'VARQUANT', 'VARSCOPE', 'VARTYPE',
      'WHITESPACE', '[', ']', '{', '|', '}', '~'

    nonterminal symbols:
      'assignment', 'assignmentop', 'assignmentvarwithop',
      'assignmentvarwithoutop', 'condition', 'conjunction', 'conjunctionop',
      'declaration', 'disjunction', 'disjunctionop', 'doublequoted',
      'doublequoted_escaped', 'funcall', 'identifier', 'literal', 'logicunop',
      'quantifier', 'scope', 'singlequoted', 'singlequoted_escaped',
      'statement', 'test', 'testop', 'type', 'value', 'valuelist', 'varcall'

    production rules:
      'statement' -> '_33?' 'declaration'
      'statement' -> '_33?' 'assignment'
      'declaration' -> '_3?' 'quantifier' 'WHITESPACE' 'type' 'WHITESPACE' 'identifier' '_33?' '_6*'
      '_3?' ->
      '_3?' -> 'scope' 'WHITESPACE'
      '_6*' ->
      '_6*' -> '_6*' ',' '_33?' 'identifier' '_33?'
      'scope' -> 'VARSCOPE'
      'quantifier' -> 'VARQUANT'
      'type' -> 'VARTYPE'
      'assignment' -> '_10*' 'assignmentvarwithop' 'valuelist'
      '_10*' ->
      '_10*' -> '_10*' 'assignmentvarwithop' ','
      '_10*' -> '_10*' 'assignmentvarwithoutop' ','
      'assignmentvarwithop' -> 'identifier' '_33?' '_14?' 'assignmentop'
      'assignmentvarwithoutop' -> 'identifier' '_33?' '_14?'
      '_14?' ->
      '_14?' -> 'condition'
      'identifier' -> 'IDENTIFIER'
      'condition' -> '[' '_33?' 'disjunction' '_33?' ']' '_33?'
      'assignmentop' -> ':' '='
      'assignmentop' -> '+' '='
      'assignmentop' -> '='
      'assignmentop' -> '-' '=' '_33?'
      'disjunction' -> 'conjunction' '_33?' 'disjunctionop' '_33?' 'conjunction'
      'conjunction' -> 'test' '_33?' 'conjunctionop' '_33?' 'test'
      'test' -> 'identifier' '_33?' 'testop' '_33?' 'value'
      'test' -> '(' '_33?' 'disjunction' '_33?' ')'
      '_33?' ->
      '_33?' -> 'WHITESPACE'
      'test' -> 'logicunop' '_33?' 'disjunction'
      'logicunop' -> '!'
      'disjunctionop' -> ';'
      'disjunctionop' -> '|'
      'disjunctionop' -> '|' '|'
      'conjunctionop' -> ','
      'conjunctionop' -> '&'
      'conjunctionop' -> '&' '&'
      'testop' -> '='
      'testop' -> '=' '='
      'testop' -> '!' '='
      'testop' -> '<'
      'testop' -> '>'
      'testop' -> '<' '='
      'testop' -> '>' '='
      'testop' -> '~' '='
      'testop' -> '=' '~'
      'valuelist' -> 'value' '_53*' '_33?'
      '_53*' ->
      '_53*' -> '_53*' 'WHITESPACE' 'value'
      'valuelist' ->
      'value' -> '_56+'
      '_(55)' -> 'literal'
      '_(55)' -> 'funcall'
      '_(55)' -> 'varcall'
      '_(55)' -> 'doublequoted'
      '_(55)' -> 'singlequoted'
      '_56+' -> '_(55)'
      '_56+' -> '_56+' '_(55)'
      'doublequoted' -> '"' '_58*' '"'
      '_(57)' -> 'literal'
      '_(57)' -> 'WHITESPACE'
      '_(57)' -> 'doublequoted_escaped'
      '_(57)' -> 'funcall'
      '_(57)' -> 'varcall'
      '_58*' ->
      '_58*' -> '_58*' '_(57)'
      'singlequoted' -> "'" '_60*' "'"
      '_(59)' -> 'literal'
      '_(59)' -> 'WHITESPACE'
      '_(59)' -> 'singlequoted_escaped'
      '_60*' ->
      '_60*' -> '_60*' '_(59)'
      'literal' -> 'IDENTIFIER'
      'literal' -> 'LITERAL'
      'literal' -> 'VARTYPE'
      'literal' -> 'VARQUANT'
      'funcall' -> '$' '(' '_33?' 'value' '_53*' '_33?' ')'
      'varcall' -> '$' 'identifier'
      'varcall' -> '$' '{' 'value' '}'
      'doublequoted_escaped' -> '!'
      'doublequoted_escaped' -> '='
      'doublequoted_escaped' -> '<'
      'doublequoted_escaped' -> '>'
      'doublequoted_escaped' -> '['
      'doublequoted_escaped' -> ']'
      'doublequoted_escaped' -> '|'
      'doublequoted_escaped' -> '&'
      'doublequoted_escaped' -> ','
      'doublequoted_escaped' -> ';'
      'doublequoted_escaped' -> ':'
      'doublequoted_escaped' -> '~'
      'doublequoted_escaped' -> '+'
      'doublequoted_escaped' -> '-'
      'doublequoted_escaped' -> "'"
      'singlequoted_escaped' -> '!'
      'singlequoted_escaped' -> '='
      'singlequoted_escaped' -> '<'
      'singlequoted_escaped' -> '>'
      'singlequoted_escaped' -> '['
      'singlequoted_escaped' -> ']'
      'singlequoted_escaped' -> '|'
      'singlequoted_escaped' -> '&'
      'singlequoted_escaped' -> ','
      'singlequoted_escaped' -> ';'
      'singlequoted_escaped' -> ':'
      'singlequoted_escaped' -> '~'
      'singlequoted_escaped' -> '+'
      'singlequoted_escaped' -> '-'
      'singlequoted_escaped' -> '"'
      'singlequoted_escaped' -> '$'
      'singlequoted_escaped' -> '('
      'singlequoted_escaped' -> ')'
      'singlequoted_escaped' -> '{'
      'singlequoted_escaped' -> '}'
    """

    class ParseErrors(Exception):

        """Exception class to represent a collection of parse errors.

        Instances of this class have two attributes, `errors` and `tree`.
        `errors` is a list of tuples, each describing one error.
        Each tuple consists of the first input token which could not
        be processed and the list of grammar symbols which were allowed
        at this point.
        `tree` is a "repaired" parse tree which might be used for further
        error checking, or `None` if no repair was possible.
        """

        def __init__(self, errors, tree):
            msg = "%d parse errors"%len(errors)
            Exception.__init__(self, msg)
            self.errors = errors
            self.tree = tree

    terminals = [ '!', '"', '$', '&', "'", '(', ')', '+', ',', '-', ':', ';',
                  '<', '=', '>', 'IDENTIFIER', 'LITERAL', 'VARQUANT',
                  'VARSCOPE', 'VARTYPE', 'WHITESPACE', '[', ']', '{', '|', '}',
                  '~' ]
    _transparent = [ '_(55)', '_(57)', '_(59)', '_10*', '_14?', '_33?', '_3?',
                     '_53*', '_56+', '_58*', '_6*', '_60*' ]
    EOF = Unique('EOF')
    S = Unique('S')

    _halting_state = 169
    _reduce = {
        (0, 'IDENTIFIER'): ('_33?', 0), (0, 'VARQUANT'): ('_33?', 0),
        (0, 'VARSCOPE'): ('_33?', 0), (2, 'IDENTIFIER'): ('_10*', 0),
        (2, 'VARQUANT'): ('_3?', 0), (3, EOF): ('statement', 2),
        (4, EOF): ('statement', 2), (10, ','): ('_33?', 0),
        (10, EOF): ('_33?', 0), (11, ','): ('_6*', 0), (11, EOF): ('_6*', 0),
        (12, EOF): ('declaration', 8), (14, 'VARQUANT'): ('_3?', 2),
        (15, 'IDENTIFIER'): ('_33?', 0), (17, ','): ('_33?', 0),
        (17, EOF): ('_33?', 0), (18, ','): ('_6*', 5), (18, EOF): ('_6*', 5),
        (19, 'WHITESPACE'): ('scope', 1),
        (20, 'WHITESPACE'): ('quantifier', 1), (21, 'WHITESPACE'): ('type', 1),
        (23, EOF): ('valuelist', 0), (24, EOF): ('assignment', 3),
        (25, 'IDENTIFIER'): ('_10*', 3), (27, 'IDENTIFIER'): ('_10*', 3),
        (28, '+'): ('_33?', 0), (28, ','): ('_33?', 0), (28, '-'): ('_33?', 0),
        (28, ':'): ('_33?', 0), (28, '='): ('_33?', 0), (28, '['): ('_33?', 0),
        (29, '+'): ('_14?', 0), (29, ','): ('_14?', 0), (29, '-'): ('_14?', 0),
        (29, ':'): ('_14?', 0), (29, '='): ('_14?', 0),
        (30, ','): ('assignmentvarwithoutop', 3),
        (31, '"'): ('assignmentvarwithop', 4),
        (31, '$'): ('assignmentvarwithop', 4),
        (31, "'"): ('assignmentvarwithop', 4),
        (31, ','): ('assignmentvarwithop', 4),
        (31, EOF): ('assignmentvarwithop', 4),
        (31, 'IDENTIFIER'): ('assignmentvarwithop', 4),
        (31, 'LITERAL'): ('assignmentvarwithop', 4),
        (31, 'VARQUANT'): ('assignmentvarwithop', 4),
        (31, 'VARTYPE'): ('assignmentvarwithop', 4), (32, '+'): ('_14?', 1),
        (32, ','): ('_14?', 1), (32, '-'): ('_14?', 1), (32, ':'): ('_14?', 1),
        (32, '='): ('_14?', 1), (33, '!'): ('identifier', 1),
        (33, '"'): ('identifier', 1), (33, '$'): ('identifier', 1),
        (33, '&'): ('identifier', 1), (33, "'"): ('identifier', 1),
        (33, ')'): ('identifier', 1), (33, '+'): ('identifier', 1),
        (33, ','): ('identifier', 1), (33, '-'): ('identifier', 1),
        (33, ':'): ('identifier', 1), (33, ';'): ('identifier', 1),
        (33, '<'): ('identifier', 1), (33, '='): ('identifier', 1),
        (33, '>'): ('identifier', 1), (33, EOF): ('identifier', 1),
        (33, 'IDENTIFIER'): ('identifier', 1),
        (33, 'LITERAL'): ('identifier', 1),
        (33, 'VARQUANT'): ('identifier', 1),
        (33, 'VARTYPE'): ('identifier', 1),
        (33, 'WHITESPACE'): ('identifier', 1), (33, '['): ('identifier', 1),
        (33, ']'): ('identifier', 1), (33, '|'): ('identifier', 1),
        (33, '}'): ('identifier', 1), (33, '~'): ('identifier', 1),
        (34, '!'): ('_33?', 0), (34, '('): ('_33?', 0),
        (34, 'IDENTIFIER'): ('_33?', 0), (36, ']'): ('_33?', 0),
        (38, '+'): ('_33?', 0), (38, ','): ('_33?', 0), (38, '-'): ('_33?', 0),
        (38, ':'): ('_33?', 0), (38, '='): ('_33?', 0),
        (39, '+'): ('condition', 6), (39, ','): ('condition', 6),
        (39, '-'): ('condition', 6), (39, ':'): ('condition', 6),
        (39, '='): ('condition', 6), (41, '"'): ('assignmentop', 2),
        (41, '$'): ('assignmentop', 2), (41, "'"): ('assignmentop', 2),
        (41, ','): ('assignmentop', 2), (41, EOF): ('assignmentop', 2),
        (41, 'IDENTIFIER'): ('assignmentop', 2),
        (41, 'LITERAL'): ('assignmentop', 2),
        (41, 'VARQUANT'): ('assignmentop', 2),
        (41, 'VARTYPE'): ('assignmentop', 2), (43, '"'): ('assignmentop', 2),
        (43, '$'): ('assignmentop', 2), (43, "'"): ('assignmentop', 2),
        (43, ','): ('assignmentop', 2), (43, EOF): ('assignmentop', 2),
        (43, 'IDENTIFIER'): ('assignmentop', 2),
        (43, 'LITERAL'): ('assignmentop', 2),
        (43, 'VARQUANT'): ('assignmentop', 2),
        (43, 'VARTYPE'): ('assignmentop', 2), (44, '"'): ('assignmentop', 1),
        (44, '$'): ('assignmentop', 1), (44, "'"): ('assignmentop', 1),
        (44, ','): ('assignmentop', 1), (44, EOF): ('assignmentop', 1),
        (44, 'IDENTIFIER'): ('assignmentop', 1),
        (44, 'LITERAL'): ('assignmentop', 1),
        (44, 'VARQUANT'): ('assignmentop', 1),
        (44, 'VARTYPE'): ('assignmentop', 1), (46, '"'): ('_33?', 0),
        (46, '$'): ('_33?', 0), (46, "'"): ('_33?', 0), (46, ','): ('_33?', 0),
        (46, EOF): ('_33?', 0), (46, 'IDENTIFIER'): ('_33?', 0),
        (46, 'LITERAL'): ('_33?', 0), (46, 'VARQUANT'): ('_33?', 0),
        (46, 'VARTYPE'): ('_33?', 0), (47, '"'): ('assignmentop', 3),
        (47, '$'): ('assignmentop', 3), (47, "'"): ('assignmentop', 3),
        (47, ','): ('assignmentop', 3), (47, EOF): ('assignmentop', 3),
        (47, 'IDENTIFIER'): ('assignmentop', 3),
        (47, 'LITERAL'): ('assignmentop', 3),
        (47, 'VARQUANT'): ('assignmentop', 3),
        (47, 'VARTYPE'): ('assignmentop', 3), (48, ';'): ('_33?', 0),
        (48, '|'): ('_33?', 0), (50, '!'): ('_33?', 0), (50, '('): ('_33?', 0),
        (50, 'IDENTIFIER'): ('_33?', 0), (52, '&'): ('disjunction', 5),
        (52, ')'): ('disjunction', 5), (52, ','): ('disjunction', 5),
        (52, ';'): ('disjunction', 5), (52, 'WHITESPACE'): ('disjunction', 5),
        (52, ']'): ('disjunction', 5), (52, '|'): ('disjunction', 5),
        (53, '&'): ('_33?', 0), (53, ','): ('_33?', 0), (55, '!'): ('_33?', 0),
        (55, '('): ('_33?', 0), (55, 'IDENTIFIER'): ('_33?', 0),
        (57, '&'): ('conjunction', 5), (57, ')'): ('conjunction', 5),
        (57, ','): ('conjunction', 5), (57, ';'): ('conjunction', 5),
        (57, 'WHITESPACE'): ('conjunction', 5), (57, ']'): ('conjunction', 5),
        (57, '|'): ('conjunction', 5), (58, '!'): ('_33?', 0),
        (58, '<'): ('_33?', 0), (58, '='): ('_33?', 0), (58, '>'): ('_33?', 0),
        (58, '~'): ('_33?', 0), (60, '"'): ('_33?', 0), (60, '$'): ('_33?', 0),
        (60, "'"): ('_33?', 0), (60, 'IDENTIFIER'): ('_33?', 0),
        (60, 'LITERAL'): ('_33?', 0), (60, 'VARQUANT'): ('_33?', 0),
        (60, 'VARTYPE'): ('_33?', 0), (62, '&'): ('test', 5),
        (62, ')'): ('test', 5), (62, ','): ('test', 5), (62, ';'): ('test', 5),
        (62, 'WHITESPACE'): ('test', 5), (62, ']'): ('test', 5),
        (62, '|'): ('test', 5), (63, '!'): ('_33?', 0), (63, '('): ('_33?', 0),
        (63, 'IDENTIFIER'): ('_33?', 0), (65, ')'): ('_33?', 0),
        (67, '&'): ('test', 5), (67, ')'): ('test', 5), (67, ','): ('test', 5),
        (67, ';'): ('test', 5), (67, 'WHITESPACE'): ('test', 5),
        (67, ']'): ('test', 5), (67, '|'): ('test', 5), (68, '!'): ('_33?', 1),
        (68, '"'): ('_33?', 1), (68, '$'): ('_33?', 1), (68, '&'): ('_33?', 1),
        (68, "'"): ('_33?', 1), (68, '('): ('_33?', 1), (68, ')'): ('_33?', 1),
        (68, '+'): ('_33?', 1), (68, ','): ('_33?', 1), (68, '-'): ('_33?', 1),
        (68, ':'): ('_33?', 1), (68, ';'): ('_33?', 1), (68, '<'): ('_33?', 1),
        (68, '='): ('_33?', 1), (68, '>'): ('_33?', 1), (68, EOF): ('_33?', 1),
        (68, 'IDENTIFIER'): ('_33?', 1), (68, 'LITERAL'): ('_33?', 1),
        (68, 'VARQUANT'): ('_33?', 1), (68, 'VARSCOPE'): ('_33?', 1),
        (68, 'VARTYPE'): ('_33?', 1), (68, '['): ('_33?', 1),
        (68, ']'): ('_33?', 1), (68, '|'): ('_33?', 1), (68, '~'): ('_33?', 1),
        (69, ')'): ('_33?', 1), (69, EOF): ('_33?', 1), (70, '!'): ('_33?', 0),
        (70, '('): ('_33?', 0), (70, 'IDENTIFIER'): ('_33?', 0),
        (72, '&'): ('test', 3), (72, ')'): ('test', 3), (72, ','): ('test', 3),
        (72, ';'): ('test', 3), (72, 'WHITESPACE'): ('test', 3),
        (72, ']'): ('test', 3), (72, '|'): ('test', 3),
        (73, '!'): ('logicunop', 1), (73, '('): ('logicunop', 1),
        (73, 'IDENTIFIER'): ('logicunop', 1),
        (73, 'WHITESPACE'): ('logicunop', 1), (74, '!'): ('disjunctionop', 1),
        (74, '('): ('disjunctionop', 1),
        (74, 'IDENTIFIER'): ('disjunctionop', 1),
        (74, 'WHITESPACE'): ('disjunctionop', 1),
        (75, '!'): ('disjunctionop', 1), (75, '('): ('disjunctionop', 1),
        (75, 'IDENTIFIER'): ('disjunctionop', 1),
        (75, 'WHITESPACE'): ('disjunctionop', 1),
        (76, '!'): ('disjunctionop', 2), (76, '('): ('disjunctionop', 2),
        (76, 'IDENTIFIER'): ('disjunctionop', 2),
        (76, 'WHITESPACE'): ('disjunctionop', 2),
        (77, '!'): ('conjunctionop', 1), (77, '('): ('conjunctionop', 1),
        (77, 'IDENTIFIER'): ('conjunctionop', 1),
        (77, 'WHITESPACE'): ('conjunctionop', 1),
        (78, '!'): ('conjunctionop', 1), (78, '('): ('conjunctionop', 1),
        (78, 'IDENTIFIER'): ('conjunctionop', 1),
        (78, 'WHITESPACE'): ('conjunctionop', 1),
        (79, '!'): ('conjunctionop', 2), (79, '('): ('conjunctionop', 2),
        (79, 'IDENTIFIER'): ('conjunctionop', 2),
        (79, 'WHITESPACE'): ('conjunctionop', 2), (80, '"'): ('testop', 1),
        (80, '$'): ('testop', 1), (80, "'"): ('testop', 1),
        (80, 'IDENTIFIER'): ('testop', 1), (80, 'LITERAL'): ('testop', 1),
        (80, 'VARQUANT'): ('testop', 1), (80, 'VARTYPE'): ('testop', 1),
        (80, 'WHITESPACE'): ('testop', 1), (81, '"'): ('testop', 2),
        (81, '$'): ('testop', 2), (81, "'"): ('testop', 2),
        (81, 'IDENTIFIER'): ('testop', 2), (81, 'LITERAL'): ('testop', 2),
        (81, 'VARQUANT'): ('testop', 2), (81, 'VARTYPE'): ('testop', 2),
        (81, 'WHITESPACE'): ('testop', 2), (83, '"'): ('testop', 2),
        (83, '$'): ('testop', 2), (83, "'"): ('testop', 2),
        (83, 'IDENTIFIER'): ('testop', 2), (83, 'LITERAL'): ('testop', 2),
        (83, 'VARQUANT'): ('testop', 2), (83, 'VARTYPE'): ('testop', 2),
        (83, 'WHITESPACE'): ('testop', 2), (84, '"'): ('testop', 1),
        (84, '$'): ('testop', 1), (84, "'"): ('testop', 1),
        (84, 'IDENTIFIER'): ('testop', 1), (84, 'LITERAL'): ('testop', 1),
        (84, 'VARQUANT'): ('testop', 1), (84, 'VARTYPE'): ('testop', 1),
        (84, 'WHITESPACE'): ('testop', 1), (85, '"'): ('testop', 1),
        (85, '$'): ('testop', 1), (85, "'"): ('testop', 1),
        (85, 'IDENTIFIER'): ('testop', 1), (85, 'LITERAL'): ('testop', 1),
        (85, 'VARQUANT'): ('testop', 1), (85, 'VARTYPE'): ('testop', 1),
        (85, 'WHITESPACE'): ('testop', 1), (86, '"'): ('testop', 2),
        (86, '$'): ('testop', 2), (86, "'"): ('testop', 2),
        (86, 'IDENTIFIER'): ('testop', 2), (86, 'LITERAL'): ('testop', 2),
        (86, 'VARQUANT'): ('testop', 2), (86, 'VARTYPE'): ('testop', 2),
        (86, 'WHITESPACE'): ('testop', 2), (87, '"'): ('testop', 2),
        (87, '$'): ('testop', 2), (87, "'"): ('testop', 2),
        (87, 'IDENTIFIER'): ('testop', 2), (87, 'LITERAL'): ('testop', 2),
        (87, 'VARQUANT'): ('testop', 2), (87, 'VARTYPE'): ('testop', 2),
        (87, 'WHITESPACE'): ('testop', 2), (89, '"'): ('testop', 2),
        (89, '$'): ('testop', 2), (89, "'"): ('testop', 2),
        (89, 'IDENTIFIER'): ('testop', 2), (89, 'LITERAL'): ('testop', 2),
        (89, 'VARQUANT'): ('testop', 2), (89, 'VARTYPE'): ('testop', 2),
        (89, 'WHITESPACE'): ('testop', 2), (90, '"'): ('testop', 2),
        (90, '$'): ('testop', 2), (90, "'"): ('testop', 2),
        (90, 'IDENTIFIER'): ('testop', 2), (90, 'LITERAL'): ('testop', 2),
        (90, 'VARQUANT'): ('testop', 2), (90, 'VARTYPE'): ('testop', 2),
        (90, 'WHITESPACE'): ('testop', 2), (91, EOF): ('_53*', 0),
        (91, 'WHITESPACE'): ('_53*', 0), (92, EOF): ('_33?', 0),
        (93, EOF): ('valuelist', 3), (94, ')'): ('_33?', 0),
        (95, ')'): ('_53*', 3), (95, EOF): ('_53*', 3),
        (95, 'WHITESPACE'): ('_53*', 3), (96, '&'): ('value', 1),
        (96, ')'): ('value', 1), (96, ','): ('value', 1),
        (96, ';'): ('value', 1), (96, EOF): ('value', 1),
        (96, 'WHITESPACE'): ('value', 1), (96, ']'): ('value', 1),
        (96, '|'): ('value', 1), (96, '}'): ('value', 1),
        (97, '"'): ('_(55)', 1), (97, '$'): ('_(55)', 1),
        (97, '&'): ('_(55)', 1), (97, "'"): ('_(55)', 1),
        (97, ')'): ('_(55)', 1), (97, ','): ('_(55)', 1),
        (97, ';'): ('_(55)', 1), (97, EOF): ('_(55)', 1),
        (97, 'IDENTIFIER'): ('_(55)', 1), (97, 'LITERAL'): ('_(55)', 1),
        (97, 'VARQUANT'): ('_(55)', 1), (97, 'VARTYPE'): ('_(55)', 1),
        (97, 'WHITESPACE'): ('_(55)', 1), (97, ']'): ('_(55)', 1),
        (97, '|'): ('_(55)', 1), (97, '}'): ('_(55)', 1),
        (98, '"'): ('_(55)', 1), (98, '$'): ('_(55)', 1),
        (98, '&'): ('_(55)', 1), (98, "'"): ('_(55)', 1),
        (98, ')'): ('_(55)', 1), (98, ','): ('_(55)', 1),
        (98, ';'): ('_(55)', 1), (98, EOF): ('_(55)', 1),
        (98, 'IDENTIFIER'): ('_(55)', 1), (98, 'LITERAL'): ('_(55)', 1),
        (98, 'VARQUANT'): ('_(55)', 1), (98, 'VARTYPE'): ('_(55)', 1),
        (98, 'WHITESPACE'): ('_(55)', 1), (98, ']'): ('_(55)', 1),
        (98, '|'): ('_(55)', 1), (98, '}'): ('_(55)', 1),
        (99, '"'): ('_(55)', 1), (99, '$'): ('_(55)', 1),
        (99, '&'): ('_(55)', 1), (99, "'"): ('_(55)', 1),
        (99, ')'): ('_(55)', 1), (99, ','): ('_(55)', 1),
        (99, ';'): ('_(55)', 1), (99, EOF): ('_(55)', 1),
        (99, 'IDENTIFIER'): ('_(55)', 1), (99, 'LITERAL'): ('_(55)', 1),
        (99, 'VARQUANT'): ('_(55)', 1), (99, 'VARTYPE'): ('_(55)', 1),
        (99, 'WHITESPACE'): ('_(55)', 1), (99, ']'): ('_(55)', 1),
        (99, '|'): ('_(55)', 1), (99, '}'): ('_(55)', 1),
        (100, '"'): ('_(55)', 1), (100, '$'): ('_(55)', 1),
        (100, '&'): ('_(55)', 1), (100, "'"): ('_(55)', 1),
        (100, ')'): ('_(55)', 1), (100, ','): ('_(55)', 1),
        (100, ';'): ('_(55)', 1), (100, EOF): ('_(55)', 1),
        (100, 'IDENTIFIER'): ('_(55)', 1), (100, 'LITERAL'): ('_(55)', 1),
        (100, 'VARQUANT'): ('_(55)', 1), (100, 'VARTYPE'): ('_(55)', 1),
        (100, 'WHITESPACE'): ('_(55)', 1), (100, ']'): ('_(55)', 1),
        (100, '|'): ('_(55)', 1), (100, '}'): ('_(55)', 1),
        (101, '"'): ('_(55)', 1), (101, '$'): ('_(55)', 1),
        (101, '&'): ('_(55)', 1), (101, "'"): ('_(55)', 1),
        (101, ')'): ('_(55)', 1), (101, ','): ('_(55)', 1),
        (101, ';'): ('_(55)', 1), (101, EOF): ('_(55)', 1),
        (101, 'IDENTIFIER'): ('_(55)', 1), (101, 'LITERAL'): ('_(55)', 1),
        (101, 'VARQUANT'): ('_(55)', 1), (101, 'VARTYPE'): ('_(55)', 1),
        (101, 'WHITESPACE'): ('_(55)', 1), (101, ']'): ('_(55)', 1),
        (101, '|'): ('_(55)', 1), (101, '}'): ('_(55)', 1),
        (102, '"'): ('_56+', 1), (102, '$'): ('_56+', 1),
        (102, '&'): ('_56+', 1), (102, "'"): ('_56+', 1),
        (102, ')'): ('_56+', 1), (102, ','): ('_56+', 1),
        (102, ';'): ('_56+', 1), (102, EOF): ('_56+', 1),
        (102, 'IDENTIFIER'): ('_56+', 1), (102, 'LITERAL'): ('_56+', 1),
        (102, 'VARQUANT'): ('_56+', 1), (102, 'VARTYPE'): ('_56+', 1),
        (102, 'WHITESPACE'): ('_56+', 1), (102, ']'): ('_56+', 1),
        (102, '|'): ('_56+', 1), (102, '}'): ('_56+', 1),
        (103, '"'): ('_56+', 2), (103, '$'): ('_56+', 2),
        (103, '&'): ('_56+', 2), (103, "'"): ('_56+', 2),
        (103, ')'): ('_56+', 2), (103, ','): ('_56+', 2),
        (103, ';'): ('_56+', 2), (103, EOF): ('_56+', 2),
        (103, 'IDENTIFIER'): ('_56+', 2), (103, 'LITERAL'): ('_56+', 2),
        (103, 'VARQUANT'): ('_56+', 2), (103, 'VARTYPE'): ('_56+', 2),
        (103, 'WHITESPACE'): ('_56+', 2), (103, ']'): ('_56+', 2),
        (103, '|'): ('_56+', 2), (103, '}'): ('_56+', 2),
        (104, '!'): ('_58*', 0), (104, '"'): ('_58*', 0),
        (104, '$'): ('_58*', 0), (104, '&'): ('_58*', 0),
        (104, "'"): ('_58*', 0), (104, '+'): ('_58*', 0),
        (104, ','): ('_58*', 0), (104, '-'): ('_58*', 0),
        (104, ':'): ('_58*', 0), (104, ';'): ('_58*', 0),
        (104, '<'): ('_58*', 0), (104, '='): ('_58*', 0),
        (104, '>'): ('_58*', 0), (104, 'IDENTIFIER'): ('_58*', 0),
        (104, 'LITERAL'): ('_58*', 0), (104, 'VARQUANT'): ('_58*', 0),
        (104, 'VARTYPE'): ('_58*', 0), (104, 'WHITESPACE'): ('_58*', 0),
        (104, '['): ('_58*', 0), (104, ']'): ('_58*', 0),
        (104, '|'): ('_58*', 0), (104, '~'): ('_58*', 0),
        (106, '"'): ('doublequoted', 3), (106, '$'): ('doublequoted', 3),
        (106, '&'): ('doublequoted', 3), (106, "'"): ('doublequoted', 3),
        (106, ')'): ('doublequoted', 3), (106, ','): ('doublequoted', 3),
        (106, ';'): ('doublequoted', 3), (106, EOF): ('doublequoted', 3),
        (106, 'IDENTIFIER'): ('doublequoted', 3),
        (106, 'LITERAL'): ('doublequoted', 3),
        (106, 'VARQUANT'): ('doublequoted', 3),
        (106, 'VARTYPE'): ('doublequoted', 3),
        (106, 'WHITESPACE'): ('doublequoted', 3),
        (106, ']'): ('doublequoted', 3), (106, '|'): ('doublequoted', 3),
        (106, '}'): ('doublequoted', 3), (107, '!'): ('_(57)', 1),
        (107, '"'): ('_(57)', 1), (107, '$'): ('_(57)', 1),
        (107, '&'): ('_(57)', 1), (107, "'"): ('_(57)', 1),
        (107, '+'): ('_(57)', 1), (107, ','): ('_(57)', 1),
        (107, '-'): ('_(57)', 1), (107, ':'): ('_(57)', 1),
        (107, ';'): ('_(57)', 1), (107, '<'): ('_(57)', 1),
        (107, '='): ('_(57)', 1), (107, '>'): ('_(57)', 1),
        (107, 'IDENTIFIER'): ('_(57)', 1), (107, 'LITERAL'): ('_(57)', 1),
        (107, 'VARQUANT'): ('_(57)', 1), (107, 'VARTYPE'): ('_(57)', 1),
        (107, 'WHITESPACE'): ('_(57)', 1), (107, '['): ('_(57)', 1),
        (107, ']'): ('_(57)', 1), (107, '|'): ('_(57)', 1),
        (107, '~'): ('_(57)', 1), (108, '!'): ('_(57)', 1),
        (108, '"'): ('_(57)', 1), (108, '$'): ('_(57)', 1),
        (108, '&'): ('_(57)', 1), (108, "'"): ('_(57)', 1),
        (108, '+'): ('_(57)', 1), (108, ','): ('_(57)', 1),
        (108, '-'): ('_(57)', 1), (108, ':'): ('_(57)', 1),
        (108, ';'): ('_(57)', 1), (108, '<'): ('_(57)', 1),
        (108, '='): ('_(57)', 1), (108, '>'): ('_(57)', 1),
        (108, 'IDENTIFIER'): ('_(57)', 1), (108, 'LITERAL'): ('_(57)', 1),
        (108, 'VARQUANT'): ('_(57)', 1), (108, 'VARTYPE'): ('_(57)', 1),
        (108, 'WHITESPACE'): ('_(57)', 1), (108, '['): ('_(57)', 1),
        (108, ']'): ('_(57)', 1), (108, '|'): ('_(57)', 1),
        (108, '~'): ('_(57)', 1), (109, '!'): ('_(57)', 1),
        (109, '"'): ('_(57)', 1), (109, '$'): ('_(57)', 1),
        (109, '&'): ('_(57)', 1), (109, "'"): ('_(57)', 1),
        (109, '+'): ('_(57)', 1), (109, ','): ('_(57)', 1),
        (109, '-'): ('_(57)', 1), (109, ':'): ('_(57)', 1),
        (109, ';'): ('_(57)', 1), (109, '<'): ('_(57)', 1),
        (109, '='): ('_(57)', 1), (109, '>'): ('_(57)', 1),
        (109, 'IDENTIFIER'): ('_(57)', 1), (109, 'LITERAL'): ('_(57)', 1),
        (109, 'VARQUANT'): ('_(57)', 1), (109, 'VARTYPE'): ('_(57)', 1),
        (109, 'WHITESPACE'): ('_(57)', 1), (109, '['): ('_(57)', 1),
        (109, ']'): ('_(57)', 1), (109, '|'): ('_(57)', 1),
        (109, '~'): ('_(57)', 1), (110, '!'): ('_(57)', 1),
        (110, '"'): ('_(57)', 1), (110, '$'): ('_(57)', 1),
        (110, '&'): ('_(57)', 1), (110, "'"): ('_(57)', 1),
        (110, '+'): ('_(57)', 1), (110, ','): ('_(57)', 1),
        (110, '-'): ('_(57)', 1), (110, ':'): ('_(57)', 1),
        (110, ';'): ('_(57)', 1), (110, '<'): ('_(57)', 1),
        (110, '='): ('_(57)', 1), (110, '>'): ('_(57)', 1),
        (110, 'IDENTIFIER'): ('_(57)', 1), (110, 'LITERAL'): ('_(57)', 1),
        (110, 'VARQUANT'): ('_(57)', 1), (110, 'VARTYPE'): ('_(57)', 1),
        (110, 'WHITESPACE'): ('_(57)', 1), (110, '['): ('_(57)', 1),
        (110, ']'): ('_(57)', 1), (110, '|'): ('_(57)', 1),
        (110, '~'): ('_(57)', 1), (111, '!'): ('_(57)', 1),
        (111, '"'): ('_(57)', 1), (111, '$'): ('_(57)', 1),
        (111, '&'): ('_(57)', 1), (111, "'"): ('_(57)', 1),
        (111, '+'): ('_(57)', 1), (111, ','): ('_(57)', 1),
        (111, '-'): ('_(57)', 1), (111, ':'): ('_(57)', 1),
        (111, ';'): ('_(57)', 1), (111, '<'): ('_(57)', 1),
        (111, '='): ('_(57)', 1), (111, '>'): ('_(57)', 1),
        (111, 'IDENTIFIER'): ('_(57)', 1), (111, 'LITERAL'): ('_(57)', 1),
        (111, 'VARQUANT'): ('_(57)', 1), (111, 'VARTYPE'): ('_(57)', 1),
        (111, 'WHITESPACE'): ('_(57)', 1), (111, '['): ('_(57)', 1),
        (111, ']'): ('_(57)', 1), (111, '|'): ('_(57)', 1),
        (111, '~'): ('_(57)', 1), (112, '!'): ('_58*', 2),
        (112, '"'): ('_58*', 2), (112, '$'): ('_58*', 2),
        (112, '&'): ('_58*', 2), (112, "'"): ('_58*', 2),
        (112, '+'): ('_58*', 2), (112, ','): ('_58*', 2),
        (112, '-'): ('_58*', 2), (112, ':'): ('_58*', 2),
        (112, ';'): ('_58*', 2), (112, '<'): ('_58*', 2),
        (112, '='): ('_58*', 2), (112, '>'): ('_58*', 2),
        (112, 'IDENTIFIER'): ('_58*', 2), (112, 'LITERAL'): ('_58*', 2),
        (112, 'VARQUANT'): ('_58*', 2), (112, 'VARTYPE'): ('_58*', 2),
        (112, 'WHITESPACE'): ('_58*', 2), (112, '['): ('_58*', 2),
        (112, ']'): ('_58*', 2), (112, '|'): ('_58*', 2),
        (112, '~'): ('_58*', 2), (113, '!'): ('_60*', 0),
        (113, '"'): ('_60*', 0), (113, '$'): ('_60*', 0),
        (113, '&'): ('_60*', 0), (113, "'"): ('_60*', 0),
        (113, '('): ('_60*', 0), (113, ')'): ('_60*', 0),
        (113, '+'): ('_60*', 0), (113, ','): ('_60*', 0),
        (113, '-'): ('_60*', 0), (113, ':'): ('_60*', 0),
        (113, ';'): ('_60*', 0), (113, '<'): ('_60*', 0),
        (113, '='): ('_60*', 0), (113, '>'): ('_60*', 0),
        (113, 'IDENTIFIER'): ('_60*', 0), (113, 'LITERAL'): ('_60*', 0),
        (113, 'VARQUANT'): ('_60*', 0), (113, 'VARTYPE'): ('_60*', 0),
        (113, 'WHITESPACE'): ('_60*', 0), (113, '['): ('_60*', 0),
        (113, ']'): ('_60*', 0), (113, '{'): ('_60*', 0),
        (113, '|'): ('_60*', 0), (113, '}'): ('_60*', 0),
        (113, '~'): ('_60*', 0), (115, '"'): ('singlequoted', 3),
        (115, '$'): ('singlequoted', 3), (115, '&'): ('singlequoted', 3),
        (115, "'"): ('singlequoted', 3), (115, ')'): ('singlequoted', 3),
        (115, ','): ('singlequoted', 3), (115, ';'): ('singlequoted', 3),
        (115, EOF): ('singlequoted', 3),
        (115, 'IDENTIFIER'): ('singlequoted', 3),
        (115, 'LITERAL'): ('singlequoted', 3),
        (115, 'VARQUANT'): ('singlequoted', 3),
        (115, 'VARTYPE'): ('singlequoted', 3),
        (115, 'WHITESPACE'): ('singlequoted', 3),
        (115, ']'): ('singlequoted', 3), (115, '|'): ('singlequoted', 3),
        (115, '}'): ('singlequoted', 3), (116, '!'): ('_(59)', 1),
        (116, '"'): ('_(59)', 1), (116, '$'): ('_(59)', 1),
        (116, '&'): ('_(59)', 1), (116, "'"): ('_(59)', 1),
        (116, '('): ('_(59)', 1), (116, ')'): ('_(59)', 1),
        (116, '+'): ('_(59)', 1), (116, ','): ('_(59)', 1),
        (116, '-'): ('_(59)', 1), (116, ':'): ('_(59)', 1),
        (116, ';'): ('_(59)', 1), (116, '<'): ('_(59)', 1),
        (116, '='): ('_(59)', 1), (116, '>'): ('_(59)', 1),
        (116, 'IDENTIFIER'): ('_(59)', 1), (116, 'LITERAL'): ('_(59)', 1),
        (116, 'VARQUANT'): ('_(59)', 1), (116, 'VARTYPE'): ('_(59)', 1),
        (116, 'WHITESPACE'): ('_(59)', 1), (116, '['): ('_(59)', 1),
        (116, ']'): ('_(59)', 1), (116, '{'): ('_(59)', 1),
        (116, '|'): ('_(59)', 1), (116, '}'): ('_(59)', 1),
        (116, '~'): ('_(59)', 1), (117, '!'): ('_(59)', 1),
        (117, '"'): ('_(59)', 1), (117, '$'): ('_(59)', 1),
        (117, '&'): ('_(59)', 1), (117, "'"): ('_(59)', 1),
        (117, '('): ('_(59)', 1), (117, ')'): ('_(59)', 1),
        (117, '+'): ('_(59)', 1), (117, ','): ('_(59)', 1),
        (117, '-'): ('_(59)', 1), (117, ':'): ('_(59)', 1),
        (117, ';'): ('_(59)', 1), (117, '<'): ('_(59)', 1),
        (117, '='): ('_(59)', 1), (117, '>'): ('_(59)', 1),
        (117, 'IDENTIFIER'): ('_(59)', 1), (117, 'LITERAL'): ('_(59)', 1),
        (117, 'VARQUANT'): ('_(59)', 1), (117, 'VARTYPE'): ('_(59)', 1),
        (117, 'WHITESPACE'): ('_(59)', 1), (117, '['): ('_(59)', 1),
        (117, ']'): ('_(59)', 1), (117, '{'): ('_(59)', 1),
        (117, '|'): ('_(59)', 1), (117, '}'): ('_(59)', 1),
        (117, '~'): ('_(59)', 1), (118, '!'): ('_(59)', 1),
        (118, '"'): ('_(59)', 1), (118, '$'): ('_(59)', 1),
        (118, '&'): ('_(59)', 1), (118, "'"): ('_(59)', 1),
        (118, '('): ('_(59)', 1), (118, ')'): ('_(59)', 1),
        (118, '+'): ('_(59)', 1), (118, ','): ('_(59)', 1),
        (118, '-'): ('_(59)', 1), (118, ':'): ('_(59)', 1),
        (118, ';'): ('_(59)', 1), (118, '<'): ('_(59)', 1),
        (118, '='): ('_(59)', 1), (118, '>'): ('_(59)', 1),
        (118, 'IDENTIFIER'): ('_(59)', 1), (118, 'LITERAL'): ('_(59)', 1),
        (118, 'VARQUANT'): ('_(59)', 1), (118, 'VARTYPE'): ('_(59)', 1),
        (118, 'WHITESPACE'): ('_(59)', 1), (118, '['): ('_(59)', 1),
        (118, ']'): ('_(59)', 1), (118, '{'): ('_(59)', 1),
        (118, '|'): ('_(59)', 1), (118, '}'): ('_(59)', 1),
        (118, '~'): ('_(59)', 1), (119, '!'): ('_60*', 2),
        (119, '"'): ('_60*', 2), (119, '$'): ('_60*', 2),
        (119, '&'): ('_60*', 2), (119, "'"): ('_60*', 2),
        (119, '('): ('_60*', 2), (119, ')'): ('_60*', 2),
        (119, '+'): ('_60*', 2), (119, ','): ('_60*', 2),
        (119, '-'): ('_60*', 2), (119, ':'): ('_60*', 2),
        (119, ';'): ('_60*', 2), (119, '<'): ('_60*', 2),
        (119, '='): ('_60*', 2), (119, '>'): ('_60*', 2),
        (119, 'IDENTIFIER'): ('_60*', 2), (119, 'LITERAL'): ('_60*', 2),
        (119, 'VARQUANT'): ('_60*', 2), (119, 'VARTYPE'): ('_60*', 2),
        (119, 'WHITESPACE'): ('_60*', 2), (119, '['): ('_60*', 2),
        (119, ']'): ('_60*', 2), (119, '{'): ('_60*', 2),
        (119, '|'): ('_60*', 2), (119, '}'): ('_60*', 2),
        (119, '~'): ('_60*', 2), (120, '!'): ('literal', 1),
        (120, '"'): ('literal', 1), (120, '$'): ('literal', 1),
        (120, '&'): ('literal', 1), (120, "'"): ('literal', 1),
        (120, '('): ('literal', 1), (120, ')'): ('literal', 1),
        (120, '+'): ('literal', 1), (120, ','): ('literal', 1),
        (120, '-'): ('literal', 1), (120, ':'): ('literal', 1),
        (120, ';'): ('literal', 1), (120, '<'): ('literal', 1),
        (120, '='): ('literal', 1), (120, '>'): ('literal', 1),
        (120, EOF): ('literal', 1), (120, 'IDENTIFIER'): ('literal', 1),
        (120, 'LITERAL'): ('literal', 1), (120, 'VARQUANT'): ('literal', 1),
        (120, 'VARTYPE'): ('literal', 1), (120, 'WHITESPACE'): ('literal', 1),
        (120, '['): ('literal', 1), (120, ']'): ('literal', 1),
        (120, '{'): ('literal', 1), (120, '|'): ('literal', 1),
        (120, '}'): ('literal', 1), (120, '~'): ('literal', 1),
        (121, '!'): ('literal', 1), (121, '"'): ('literal', 1),
        (121, '$'): ('literal', 1), (121, '&'): ('literal', 1),
        (121, "'"): ('literal', 1), (121, '('): ('literal', 1),
        (121, ')'): ('literal', 1), (121, '+'): ('literal', 1),
        (121, ','): ('literal', 1), (121, '-'): ('literal', 1),
        (121, ':'): ('literal', 1), (121, ';'): ('literal', 1),
        (121, '<'): ('literal', 1), (121, '='): ('literal', 1),
        (121, '>'): ('literal', 1), (121, EOF): ('literal', 1),
        (121, 'IDENTIFIER'): ('literal', 1), (121, 'LITERAL'): ('literal', 1),
        (121, 'VARQUANT'): ('literal', 1), (121, 'VARTYPE'): ('literal', 1),
        (121, 'WHITESPACE'): ('literal', 1), (121, '['): ('literal', 1),
        (121, ']'): ('literal', 1), (121, '{'): ('literal', 1),
        (121, '|'): ('literal', 1), (121, '}'): ('literal', 1),
        (121, '~'): ('literal', 1), (122, '!'): ('literal', 1),
        (122, '"'): ('literal', 1), (122, '$'): ('literal', 1),
        (122, '&'): ('literal', 1), (122, "'"): ('literal', 1),
        (122, '('): ('literal', 1), (122, ')'): ('literal', 1),
        (122, '+'): ('literal', 1), (122, ','): ('literal', 1),
        (122, '-'): ('literal', 1), (122, ':'): ('literal', 1),
        (122, ';'): ('literal', 1), (122, '<'): ('literal', 1),
        (122, '='): ('literal', 1), (122, '>'): ('literal', 1),
        (122, EOF): ('literal', 1), (122, 'IDENTIFIER'): ('literal', 1),
        (122, 'LITERAL'): ('literal', 1), (122, 'VARQUANT'): ('literal', 1),
        (122, 'VARTYPE'): ('literal', 1), (122, 'WHITESPACE'): ('literal', 1),
        (122, '['): ('literal', 1), (122, ']'): ('literal', 1),
        (122, '{'): ('literal', 1), (122, '|'): ('literal', 1),
        (122, '}'): ('literal', 1), (122, '~'): ('literal', 1),
        (123, '!'): ('literal', 1), (123, '"'): ('literal', 1),
        (123, '$'): ('literal', 1), (123, '&'): ('literal', 1),
        (123, "'"): ('literal', 1), (123, '('): ('literal', 1),
        (123, ')'): ('literal', 1), (123, '+'): ('literal', 1),
        (123, ','): ('literal', 1), (123, '-'): ('literal', 1),
        (123, ':'): ('literal', 1), (123, ';'): ('literal', 1),
        (123, '<'): ('literal', 1), (123, '='): ('literal', 1),
        (123, '>'): ('literal', 1), (123, EOF): ('literal', 1),
        (123, 'IDENTIFIER'): ('literal', 1), (123, 'LITERAL'): ('literal', 1),
        (123, 'VARQUANT'): ('literal', 1), (123, 'VARTYPE'): ('literal', 1),
        (123, 'WHITESPACE'): ('literal', 1), (123, '['): ('literal', 1),
        (123, ']'): ('literal', 1), (123, '{'): ('literal', 1),
        (123, '|'): ('literal', 1), (123, '}'): ('literal', 1),
        (123, '~'): ('literal', 1), (125, '"'): ('_33?', 0),
        (125, '$'): ('_33?', 0), (125, "'"): ('_33?', 0),
        (125, 'IDENTIFIER'): ('_33?', 0), (125, 'LITERAL'): ('_33?', 0),
        (125, 'VARQUANT'): ('_33?', 0), (125, 'VARTYPE'): ('_33?', 0),
        (127, ')'): ('_53*', 0), (127, 'WHITESPACE'): ('_53*', 0),
        (129, '!'): ('funcall', 7), (129, '"'): ('funcall', 7),
        (129, '$'): ('funcall', 7), (129, '&'): ('funcall', 7),
        (129, "'"): ('funcall', 7), (129, ')'): ('funcall', 7),
        (129, '+'): ('funcall', 7), (129, ','): ('funcall', 7),
        (129, '-'): ('funcall', 7), (129, ':'): ('funcall', 7),
        (129, ';'): ('funcall', 7), (129, '<'): ('funcall', 7),
        (129, '='): ('funcall', 7), (129, '>'): ('funcall', 7),
        (129, EOF): ('funcall', 7), (129, 'IDENTIFIER'): ('funcall', 7),
        (129, 'LITERAL'): ('funcall', 7), (129, 'VARQUANT'): ('funcall', 7),
        (129, 'VARTYPE'): ('funcall', 7), (129, 'WHITESPACE'): ('funcall', 7),
        (129, '['): ('funcall', 7), (129, ']'): ('funcall', 7),
        (129, '|'): ('funcall', 7), (129, '}'): ('funcall', 7),
        (129, '~'): ('funcall', 7), (130, '!'): ('varcall', 2),
        (130, '"'): ('varcall', 2), (130, '$'): ('varcall', 2),
        (130, '&'): ('varcall', 2), (130, "'"): ('varcall', 2),
        (130, ')'): ('varcall', 2), (130, '+'): ('varcall', 2),
        (130, ','): ('varcall', 2), (130, '-'): ('varcall', 2),
        (130, ':'): ('varcall', 2), (130, ';'): ('varcall', 2),
        (130, '<'): ('varcall', 2), (130, '='): ('varcall', 2),
        (130, '>'): ('varcall', 2), (130, EOF): ('varcall', 2),
        (130, 'IDENTIFIER'): ('varcall', 2), (130, 'LITERAL'): ('varcall', 2),
        (130, 'VARQUANT'): ('varcall', 2), (130, 'VARTYPE'): ('varcall', 2),
        (130, 'WHITESPACE'): ('varcall', 2), (130, '['): ('varcall', 2),
        (130, ']'): ('varcall', 2), (130, '|'): ('varcall', 2),
        (130, '}'): ('varcall', 2), (130, '~'): ('varcall', 2),
        (133, '!'): ('varcall', 4), (133, '"'): ('varcall', 4),
        (133, '$'): ('varcall', 4), (133, '&'): ('varcall', 4),
        (133, "'"): ('varcall', 4), (133, ')'): ('varcall', 4),
        (133, '+'): ('varcall', 4), (133, ','): ('varcall', 4),
        (133, '-'): ('varcall', 4), (133, ':'): ('varcall', 4),
        (133, ';'): ('varcall', 4), (133, '<'): ('varcall', 4),
        (133, '='): ('varcall', 4), (133, '>'): ('varcall', 4),
        (133, EOF): ('varcall', 4), (133, 'IDENTIFIER'): ('varcall', 4),
        (133, 'LITERAL'): ('varcall', 4), (133, 'VARQUANT'): ('varcall', 4),
        (133, 'VARTYPE'): ('varcall', 4), (133, 'WHITESPACE'): ('varcall', 4),
        (133, '['): ('varcall', 4), (133, ']'): ('varcall', 4),
        (133, '|'): ('varcall', 4), (133, '}'): ('varcall', 4),
        (133, '~'): ('varcall', 4), (134, '!'): ('doublequoted_escaped', 1),
        (134, '"'): ('doublequoted_escaped', 1),
        (134, '$'): ('doublequoted_escaped', 1),
        (134, '&'): ('doublequoted_escaped', 1),
        (134, "'"): ('doublequoted_escaped', 1),
        (134, '+'): ('doublequoted_escaped', 1),
        (134, ','): ('doublequoted_escaped', 1),
        (134, '-'): ('doublequoted_escaped', 1),
        (134, ':'): ('doublequoted_escaped', 1),
        (134, ';'): ('doublequoted_escaped', 1),
        (134, '<'): ('doublequoted_escaped', 1),
        (134, '='): ('doublequoted_escaped', 1),
        (134, '>'): ('doublequoted_escaped', 1),
        (134, 'IDENTIFIER'): ('doublequoted_escaped', 1),
        (134, 'LITERAL'): ('doublequoted_escaped', 1),
        (134, 'VARQUANT'): ('doublequoted_escaped', 1),
        (134, 'VARTYPE'): ('doublequoted_escaped', 1),
        (134, 'WHITESPACE'): ('doublequoted_escaped', 1),
        (134, '['): ('doublequoted_escaped', 1),
        (134, ']'): ('doublequoted_escaped', 1),
        (134, '|'): ('doublequoted_escaped', 1),
        (134, '~'): ('doublequoted_escaped', 1),
        (135, '!'): ('doublequoted_escaped', 1),
        (135, '"'): ('doublequoted_escaped', 1),
        (135, '$'): ('doublequoted_escaped', 1),
        (135, '&'): ('doublequoted_escaped', 1),
        (135, "'"): ('doublequoted_escaped', 1),
        (135, '+'): ('doublequoted_escaped', 1),
        (135, ','): ('doublequoted_escaped', 1),
        (135, '-'): ('doublequoted_escaped', 1),
        (135, ':'): ('doublequoted_escaped', 1),
        (135, ';'): ('doublequoted_escaped', 1),
        (135, '<'): ('doublequoted_escaped', 1),
        (135, '='): ('doublequoted_escaped', 1),
        (135, '>'): ('doublequoted_escaped', 1),
        (135, 'IDENTIFIER'): ('doublequoted_escaped', 1),
        (135, 'LITERAL'): ('doublequoted_escaped', 1),
        (135, 'VARQUANT'): ('doublequoted_escaped', 1),
        (135, 'VARTYPE'): ('doublequoted_escaped', 1),
        (135, 'WHITESPACE'): ('doublequoted_escaped', 1),
        (135, '['): ('doublequoted_escaped', 1),
        (135, ']'): ('doublequoted_escaped', 1),
        (135, '|'): ('doublequoted_escaped', 1),
        (135, '~'): ('doublequoted_escaped', 1),
        (136, '!'): ('doublequoted_escaped', 1),
        (136, '"'): ('doublequoted_escaped', 1),
        (136, '$'): ('doublequoted_escaped', 1),
        (136, '&'): ('doublequoted_escaped', 1),
        (136, "'"): ('doublequoted_escaped', 1),
        (136, '+'): ('doublequoted_escaped', 1),
        (136, ','): ('doublequoted_escaped', 1),
        (136, '-'): ('doublequoted_escaped', 1),
        (136, ':'): ('doublequoted_escaped', 1),
        (136, ';'): ('doublequoted_escaped', 1),
        (136, '<'): ('doublequoted_escaped', 1),
        (136, '='): ('doublequoted_escaped', 1),
        (136, '>'): ('doublequoted_escaped', 1),
        (136, 'IDENTIFIER'): ('doublequoted_escaped', 1),
        (136, 'LITERAL'): ('doublequoted_escaped', 1),
        (136, 'VARQUANT'): ('doublequoted_escaped', 1),
        (136, 'VARTYPE'): ('doublequoted_escaped', 1),
        (136, 'WHITESPACE'): ('doublequoted_escaped', 1),
        (136, '['): ('doublequoted_escaped', 1),
        (136, ']'): ('doublequoted_escaped', 1),
        (136, '|'): ('doublequoted_escaped', 1),
        (136, '~'): ('doublequoted_escaped', 1),
        (137, '!'): ('doublequoted_escaped', 1),
        (137, '"'): ('doublequoted_escaped', 1),
        (137, '$'): ('doublequoted_escaped', 1),
        (137, '&'): ('doublequoted_escaped', 1),
        (137, "'"): ('doublequoted_escaped', 1),
        (137, '+'): ('doublequoted_escaped', 1),
        (137, ','): ('doublequoted_escaped', 1),
        (137, '-'): ('doublequoted_escaped', 1),
        (137, ':'): ('doublequoted_escaped', 1),
        (137, ';'): ('doublequoted_escaped', 1),
        (137, '<'): ('doublequoted_escaped', 1),
        (137, '='): ('doublequoted_escaped', 1),
        (137, '>'): ('doublequoted_escaped', 1),
        (137, 'IDENTIFIER'): ('doublequoted_escaped', 1),
        (137, 'LITERAL'): ('doublequoted_escaped', 1),
        (137, 'VARQUANT'): ('doublequoted_escaped', 1),
        (137, 'VARTYPE'): ('doublequoted_escaped', 1),
        (137, 'WHITESPACE'): ('doublequoted_escaped', 1),
        (137, '['): ('doublequoted_escaped', 1),
        (137, ']'): ('doublequoted_escaped', 1),
        (137, '|'): ('doublequoted_escaped', 1),
        (137, '~'): ('doublequoted_escaped', 1),
        (138, '!'): ('doublequoted_escaped', 1),
        (138, '"'): ('doublequoted_escaped', 1),
        (138, '$'): ('doublequoted_escaped', 1),
        (138, '&'): ('doublequoted_escaped', 1),
        (138, "'"): ('doublequoted_escaped', 1),
        (138, '+'): ('doublequoted_escaped', 1),
        (138, ','): ('doublequoted_escaped', 1),
        (138, '-'): ('doublequoted_escaped', 1),
        (138, ':'): ('doublequoted_escaped', 1),
        (138, ';'): ('doublequoted_escaped', 1),
        (138, '<'): ('doublequoted_escaped', 1),
        (138, '='): ('doublequoted_escaped', 1),
        (138, '>'): ('doublequoted_escaped', 1),
        (138, 'IDENTIFIER'): ('doublequoted_escaped', 1),
        (138, 'LITERAL'): ('doublequoted_escaped', 1),
        (138, 'VARQUANT'): ('doublequoted_escaped', 1),
        (138, 'VARTYPE'): ('doublequoted_escaped', 1),
        (138, 'WHITESPACE'): ('doublequoted_escaped', 1),
        (138, '['): ('doublequoted_escaped', 1),
        (138, ']'): ('doublequoted_escaped', 1),
        (138, '|'): ('doublequoted_escaped', 1),
        (138, '~'): ('doublequoted_escaped', 1),
        (139, '!'): ('doublequoted_escaped', 1),
        (139, '"'): ('doublequoted_escaped', 1),
        (139, '$'): ('doublequoted_escaped', 1),
        (139, '&'): ('doublequoted_escaped', 1),
        (139, "'"): ('doublequoted_escaped', 1),
        (139, '+'): ('doublequoted_escaped', 1),
        (139, ','): ('doublequoted_escaped', 1),
        (139, '-'): ('doublequoted_escaped', 1),
        (139, ':'): ('doublequoted_escaped', 1),
        (139, ';'): ('doublequoted_escaped', 1),
        (139, '<'): ('doublequoted_escaped', 1),
        (139, '='): ('doublequoted_escaped', 1),
        (139, '>'): ('doublequoted_escaped', 1),
        (139, 'IDENTIFIER'): ('doublequoted_escaped', 1),
        (139, 'LITERAL'): ('doublequoted_escaped', 1),
        (139, 'VARQUANT'): ('doublequoted_escaped', 1),
        (139, 'VARTYPE'): ('doublequoted_escaped', 1),
        (139, 'WHITESPACE'): ('doublequoted_escaped', 1),
        (139, '['): ('doublequoted_escaped', 1),
        (139, ']'): ('doublequoted_escaped', 1),
        (139, '|'): ('doublequoted_escaped', 1),
        (139, '~'): ('doublequoted_escaped', 1),
        (140, '!'): ('doublequoted_escaped', 1),
        (140, '"'): ('doublequoted_escaped', 1),
        (140, '$'): ('doublequoted_escaped', 1),
        (140, '&'): ('doublequoted_escaped', 1),
        (140, "'"): ('doublequoted_escaped', 1),
        (140, '+'): ('doublequoted_escaped', 1),
        (140, ','): ('doublequoted_escaped', 1),
        (140, '-'): ('doublequoted_escaped', 1),
        (140, ':'): ('doublequoted_escaped', 1),
        (140, ';'): ('doublequoted_escaped', 1),
        (140, '<'): ('doublequoted_escaped', 1),
        (140, '='): ('doublequoted_escaped', 1),
        (140, '>'): ('doublequoted_escaped', 1),
        (140, 'IDENTIFIER'): ('doublequoted_escaped', 1),
        (140, 'LITERAL'): ('doublequoted_escaped', 1),
        (140, 'VARQUANT'): ('doublequoted_escaped', 1),
        (140, 'VARTYPE'): ('doublequoted_escaped', 1),
        (140, 'WHITESPACE'): ('doublequoted_escaped', 1),
        (140, '['): ('doublequoted_escaped', 1),
        (140, ']'): ('doublequoted_escaped', 1),
        (140, '|'): ('doublequoted_escaped', 1),
        (140, '~'): ('doublequoted_escaped', 1),
        (141, '!'): ('doublequoted_escaped', 1),
        (141, '"'): ('doublequoted_escaped', 1),
        (141, '$'): ('doublequoted_escaped', 1),
        (141, '&'): ('doublequoted_escaped', 1),
        (141, "'"): ('doublequoted_escaped', 1),
        (141, '+'): ('doublequoted_escaped', 1),
        (141, ','): ('doublequoted_escaped', 1),
        (141, '-'): ('doublequoted_escaped', 1),
        (141, ':'): ('doublequoted_escaped', 1),
        (141, ';'): ('doublequoted_escaped', 1),
        (141, '<'): ('doublequoted_escaped', 1),
        (141, '='): ('doublequoted_escaped', 1),
        (141, '>'): ('doublequoted_escaped', 1),
        (141, 'IDENTIFIER'): ('doublequoted_escaped', 1),
        (141, 'LITERAL'): ('doublequoted_escaped', 1),
        (141, 'VARQUANT'): ('doublequoted_escaped', 1),
        (141, 'VARTYPE'): ('doublequoted_escaped', 1),
        (141, 'WHITESPACE'): ('doublequoted_escaped', 1),
        (141, '['): ('doublequoted_escaped', 1),
        (141, ']'): ('doublequoted_escaped', 1),
        (141, '|'): ('doublequoted_escaped', 1),
        (141, '~'): ('doublequoted_escaped', 1),
        (142, '!'): ('doublequoted_escaped', 1),
        (142, '"'): ('doublequoted_escaped', 1),
        (142, '$'): ('doublequoted_escaped', 1),
        (142, '&'): ('doublequoted_escaped', 1),
        (142, "'"): ('doublequoted_escaped', 1),
        (142, '+'): ('doublequoted_escaped', 1),
        (142, ','): ('doublequoted_escaped', 1),
        (142, '-'): ('doublequoted_escaped', 1),
        (142, ':'): ('doublequoted_escaped', 1),
        (142, ';'): ('doublequoted_escaped', 1),
        (142, '<'): ('doublequoted_escaped', 1),
        (142, '='): ('doublequoted_escaped', 1),
        (142, '>'): ('doublequoted_escaped', 1),
        (142, 'IDENTIFIER'): ('doublequoted_escaped', 1),
        (142, 'LITERAL'): ('doublequoted_escaped', 1),
        (142, 'VARQUANT'): ('doublequoted_escaped', 1),
        (142, 'VARTYPE'): ('doublequoted_escaped', 1),
        (142, 'WHITESPACE'): ('doublequoted_escaped', 1),
        (142, '['): ('doublequoted_escaped', 1),
        (142, ']'): ('doublequoted_escaped', 1),
        (142, '|'): ('doublequoted_escaped', 1),
        (142, '~'): ('doublequoted_escaped', 1),
        (143, '!'): ('doublequoted_escaped', 1),
        (143, '"'): ('doublequoted_escaped', 1),
        (143, '$'): ('doublequoted_escaped', 1),
        (143, '&'): ('doublequoted_escaped', 1),
        (143, "'"): ('doublequoted_escaped', 1),
        (143, '+'): ('doublequoted_escaped', 1),
        (143, ','): ('doublequoted_escaped', 1),
        (143, '-'): ('doublequoted_escaped', 1),
        (143, ':'): ('doublequoted_escaped', 1),
        (143, ';'): ('doublequoted_escaped', 1),
        (143, '<'): ('doublequoted_escaped', 1),
        (143, '='): ('doublequoted_escaped', 1),
        (143, '>'): ('doublequoted_escaped', 1),
        (143, 'IDENTIFIER'): ('doublequoted_escaped', 1),
        (143, 'LITERAL'): ('doublequoted_escaped', 1),
        (143, 'VARQUANT'): ('doublequoted_escaped', 1),
        (143, 'VARTYPE'): ('doublequoted_escaped', 1),
        (143, 'WHITESPACE'): ('doublequoted_escaped', 1),
        (143, '['): ('doublequoted_escaped', 1),
        (143, ']'): ('doublequoted_escaped', 1),
        (143, '|'): ('doublequoted_escaped', 1),
        (143, '~'): ('doublequoted_escaped', 1),
        (144, '!'): ('doublequoted_escaped', 1),
        (144, '"'): ('doublequoted_escaped', 1),
        (144, '$'): ('doublequoted_escaped', 1),
        (144, '&'): ('doublequoted_escaped', 1),
        (144, "'"): ('doublequoted_escaped', 1),
        (144, '+'): ('doublequoted_escaped', 1),
        (144, ','): ('doublequoted_escaped', 1),
        (144, '-'): ('doublequoted_escaped', 1),
        (144, ':'): ('doublequoted_escaped', 1),
        (144, ';'): ('doublequoted_escaped', 1),
        (144, '<'): ('doublequoted_escaped', 1),
        (144, '='): ('doublequoted_escaped', 1),
        (144, '>'): ('doublequoted_escaped', 1),
        (144, 'IDENTIFIER'): ('doublequoted_escaped', 1),
        (144, 'LITERAL'): ('doublequoted_escaped', 1),
        (144, 'VARQUANT'): ('doublequoted_escaped', 1),
        (144, 'VARTYPE'): ('doublequoted_escaped', 1),
        (144, 'WHITESPACE'): ('doublequoted_escaped', 1),
        (144, '['): ('doublequoted_escaped', 1),
        (144, ']'): ('doublequoted_escaped', 1),
        (144, '|'): ('doublequoted_escaped', 1),
        (144, '~'): ('doublequoted_escaped', 1),
        (145, '!'): ('doublequoted_escaped', 1),
        (145, '"'): ('doublequoted_escaped', 1),
        (145, '$'): ('doublequoted_escaped', 1),
        (145, '&'): ('doublequoted_escaped', 1),
        (145, "'"): ('doublequoted_escaped', 1),
        (145, '+'): ('doublequoted_escaped', 1),
        (145, ','): ('doublequoted_escaped', 1),
        (145, '-'): ('doublequoted_escaped', 1),
        (145, ':'): ('doublequoted_escaped', 1),
        (145, ';'): ('doublequoted_escaped', 1),
        (145, '<'): ('doublequoted_escaped', 1),
        (145, '='): ('doublequoted_escaped', 1),
        (145, '>'): ('doublequoted_escaped', 1),
        (145, 'IDENTIFIER'): ('doublequoted_escaped', 1),
        (145, 'LITERAL'): ('doublequoted_escaped', 1),
        (145, 'VARQUANT'): ('doublequoted_escaped', 1),
        (145, 'VARTYPE'): ('doublequoted_escaped', 1),
        (145, 'WHITESPACE'): ('doublequoted_escaped', 1),
        (145, '['): ('doublequoted_escaped', 1),
        (145, ']'): ('doublequoted_escaped', 1),
        (145, '|'): ('doublequoted_escaped', 1),
        (145, '~'): ('doublequoted_escaped', 1),
        (146, '!'): ('doublequoted_escaped', 1),
        (146, '"'): ('doublequoted_escaped', 1),
        (146, '$'): ('doublequoted_escaped', 1),
        (146, '&'): ('doublequoted_escaped', 1),
        (146, "'"): ('doublequoted_escaped', 1),
        (146, '+'): ('doublequoted_escaped', 1),
        (146, ','): ('doublequoted_escaped', 1),
        (146, '-'): ('doublequoted_escaped', 1),
        (146, ':'): ('doublequoted_escaped', 1),
        (146, ';'): ('doublequoted_escaped', 1),
        (146, '<'): ('doublequoted_escaped', 1),
        (146, '='): ('doublequoted_escaped', 1),
        (146, '>'): ('doublequoted_escaped', 1),
        (146, 'IDENTIFIER'): ('doublequoted_escaped', 1),
        (146, 'LITERAL'): ('doublequoted_escaped', 1),
        (146, 'VARQUANT'): ('doublequoted_escaped', 1),
        (146, 'VARTYPE'): ('doublequoted_escaped', 1),
        (146, 'WHITESPACE'): ('doublequoted_escaped', 1),
        (146, '['): ('doublequoted_escaped', 1),
        (146, ']'): ('doublequoted_escaped', 1),
        (146, '|'): ('doublequoted_escaped', 1),
        (146, '~'): ('doublequoted_escaped', 1),
        (147, '!'): ('doublequoted_escaped', 1),
        (147, '"'): ('doublequoted_escaped', 1),
        (147, '$'): ('doublequoted_escaped', 1),
        (147, '&'): ('doublequoted_escaped', 1),
        (147, "'"): ('doublequoted_escaped', 1),
        (147, '+'): ('doublequoted_escaped', 1),
        (147, ','): ('doublequoted_escaped', 1),
        (147, '-'): ('doublequoted_escaped', 1),
        (147, ':'): ('doublequoted_escaped', 1),
        (147, ';'): ('doublequoted_escaped', 1),
        (147, '<'): ('doublequoted_escaped', 1),
        (147, '='): ('doublequoted_escaped', 1),
        (147, '>'): ('doublequoted_escaped', 1),
        (147, 'IDENTIFIER'): ('doublequoted_escaped', 1),
        (147, 'LITERAL'): ('doublequoted_escaped', 1),
        (147, 'VARQUANT'): ('doublequoted_escaped', 1),
        (147, 'VARTYPE'): ('doublequoted_escaped', 1),
        (147, 'WHITESPACE'): ('doublequoted_escaped', 1),
        (147, '['): ('doublequoted_escaped', 1),
        (147, ']'): ('doublequoted_escaped', 1),
        (147, '|'): ('doublequoted_escaped', 1),
        (147, '~'): ('doublequoted_escaped', 1),
        (148, '!'): ('doublequoted_escaped', 1),
        (148, '"'): ('doublequoted_escaped', 1),
        (148, '$'): ('doublequoted_escaped', 1),
        (148, '&'): ('doublequoted_escaped', 1),
        (148, "'"): ('doublequoted_escaped', 1),
        (148, '+'): ('doublequoted_escaped', 1),
        (148, ','): ('doublequoted_escaped', 1),
        (148, '-'): ('doublequoted_escaped', 1),
        (148, ':'): ('doublequoted_escaped', 1),
        (148, ';'): ('doublequoted_escaped', 1),
        (148, '<'): ('doublequoted_escaped', 1),
        (148, '='): ('doublequoted_escaped', 1),
        (148, '>'): ('doublequoted_escaped', 1),
        (148, 'IDENTIFIER'): ('doublequoted_escaped', 1),
        (148, 'LITERAL'): ('doublequoted_escaped', 1),
        (148, 'VARQUANT'): ('doublequoted_escaped', 1),
        (148, 'VARTYPE'): ('doublequoted_escaped', 1),
        (148, 'WHITESPACE'): ('doublequoted_escaped', 1),
        (148, '['): ('doublequoted_escaped', 1),
        (148, ']'): ('doublequoted_escaped', 1),
        (148, '|'): ('doublequoted_escaped', 1),
        (148, '~'): ('doublequoted_escaped', 1),
        (149, '!'): ('singlequoted_escaped', 1),
        (149, '"'): ('singlequoted_escaped', 1),
        (149, '$'): ('singlequoted_escaped', 1),
        (149, '&'): ('singlequoted_escaped', 1),
        (149, "'"): ('singlequoted_escaped', 1),
        (149, '('): ('singlequoted_escaped', 1),
        (149, ')'): ('singlequoted_escaped', 1),
        (149, '+'): ('singlequoted_escaped', 1),
        (149, ','): ('singlequoted_escaped', 1),
        (149, '-'): ('singlequoted_escaped', 1),
        (149, ':'): ('singlequoted_escaped', 1),
        (149, ';'): ('singlequoted_escaped', 1),
        (149, '<'): ('singlequoted_escaped', 1),
        (149, '='): ('singlequoted_escaped', 1),
        (149, '>'): ('singlequoted_escaped', 1),
        (149, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (149, 'LITERAL'): ('singlequoted_escaped', 1),
        (149, 'VARQUANT'): ('singlequoted_escaped', 1),
        (149, 'VARTYPE'): ('singlequoted_escaped', 1),
        (149, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (149, '['): ('singlequoted_escaped', 1),
        (149, ']'): ('singlequoted_escaped', 1),
        (149, '{'): ('singlequoted_escaped', 1),
        (149, '|'): ('singlequoted_escaped', 1),
        (149, '}'): ('singlequoted_escaped', 1),
        (149, '~'): ('singlequoted_escaped', 1),
        (150, '!'): ('singlequoted_escaped', 1),
        (150, '"'): ('singlequoted_escaped', 1),
        (150, '$'): ('singlequoted_escaped', 1),
        (150, '&'): ('singlequoted_escaped', 1),
        (150, "'"): ('singlequoted_escaped', 1),
        (150, '('): ('singlequoted_escaped', 1),
        (150, ')'): ('singlequoted_escaped', 1),
        (150, '+'): ('singlequoted_escaped', 1),
        (150, ','): ('singlequoted_escaped', 1),
        (150, '-'): ('singlequoted_escaped', 1),
        (150, ':'): ('singlequoted_escaped', 1),
        (150, ';'): ('singlequoted_escaped', 1),
        (150, '<'): ('singlequoted_escaped', 1),
        (150, '='): ('singlequoted_escaped', 1),
        (150, '>'): ('singlequoted_escaped', 1),
        (150, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (150, 'LITERAL'): ('singlequoted_escaped', 1),
        (150, 'VARQUANT'): ('singlequoted_escaped', 1),
        (150, 'VARTYPE'): ('singlequoted_escaped', 1),
        (150, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (150, '['): ('singlequoted_escaped', 1),
        (150, ']'): ('singlequoted_escaped', 1),
        (150, '{'): ('singlequoted_escaped', 1),
        (150, '|'): ('singlequoted_escaped', 1),
        (150, '}'): ('singlequoted_escaped', 1),
        (150, '~'): ('singlequoted_escaped', 1),
        (151, '!'): ('singlequoted_escaped', 1),
        (151, '"'): ('singlequoted_escaped', 1),
        (151, '$'): ('singlequoted_escaped', 1),
        (151, '&'): ('singlequoted_escaped', 1),
        (151, "'"): ('singlequoted_escaped', 1),
        (151, '('): ('singlequoted_escaped', 1),
        (151, ')'): ('singlequoted_escaped', 1),
        (151, '+'): ('singlequoted_escaped', 1),
        (151, ','): ('singlequoted_escaped', 1),
        (151, '-'): ('singlequoted_escaped', 1),
        (151, ':'): ('singlequoted_escaped', 1),
        (151, ';'): ('singlequoted_escaped', 1),
        (151, '<'): ('singlequoted_escaped', 1),
        (151, '='): ('singlequoted_escaped', 1),
        (151, '>'): ('singlequoted_escaped', 1),
        (151, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (151, 'LITERAL'): ('singlequoted_escaped', 1),
        (151, 'VARQUANT'): ('singlequoted_escaped', 1),
        (151, 'VARTYPE'): ('singlequoted_escaped', 1),
        (151, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (151, '['): ('singlequoted_escaped', 1),
        (151, ']'): ('singlequoted_escaped', 1),
        (151, '{'): ('singlequoted_escaped', 1),
        (151, '|'): ('singlequoted_escaped', 1),
        (151, '}'): ('singlequoted_escaped', 1),
        (151, '~'): ('singlequoted_escaped', 1),
        (152, '!'): ('singlequoted_escaped', 1),
        (152, '"'): ('singlequoted_escaped', 1),
        (152, '$'): ('singlequoted_escaped', 1),
        (152, '&'): ('singlequoted_escaped', 1),
        (152, "'"): ('singlequoted_escaped', 1),
        (152, '('): ('singlequoted_escaped', 1),
        (152, ')'): ('singlequoted_escaped', 1),
        (152, '+'): ('singlequoted_escaped', 1),
        (152, ','): ('singlequoted_escaped', 1),
        (152, '-'): ('singlequoted_escaped', 1),
        (152, ':'): ('singlequoted_escaped', 1),
        (152, ';'): ('singlequoted_escaped', 1),
        (152, '<'): ('singlequoted_escaped', 1),
        (152, '='): ('singlequoted_escaped', 1),
        (152, '>'): ('singlequoted_escaped', 1),
        (152, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (152, 'LITERAL'): ('singlequoted_escaped', 1),
        (152, 'VARQUANT'): ('singlequoted_escaped', 1),
        (152, 'VARTYPE'): ('singlequoted_escaped', 1),
        (152, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (152, '['): ('singlequoted_escaped', 1),
        (152, ']'): ('singlequoted_escaped', 1),
        (152, '{'): ('singlequoted_escaped', 1),
        (152, '|'): ('singlequoted_escaped', 1),
        (152, '}'): ('singlequoted_escaped', 1),
        (152, '~'): ('singlequoted_escaped', 1),
        (153, '!'): ('singlequoted_escaped', 1),
        (153, '"'): ('singlequoted_escaped', 1),
        (153, '$'): ('singlequoted_escaped', 1),
        (153, '&'): ('singlequoted_escaped', 1),
        (153, "'"): ('singlequoted_escaped', 1),
        (153, '('): ('singlequoted_escaped', 1),
        (153, ')'): ('singlequoted_escaped', 1),
        (153, '+'): ('singlequoted_escaped', 1),
        (153, ','): ('singlequoted_escaped', 1),
        (153, '-'): ('singlequoted_escaped', 1),
        (153, ':'): ('singlequoted_escaped', 1),
        (153, ';'): ('singlequoted_escaped', 1),
        (153, '<'): ('singlequoted_escaped', 1),
        (153, '='): ('singlequoted_escaped', 1),
        (153, '>'): ('singlequoted_escaped', 1),
        (153, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (153, 'LITERAL'): ('singlequoted_escaped', 1),
        (153, 'VARQUANT'): ('singlequoted_escaped', 1),
        (153, 'VARTYPE'): ('singlequoted_escaped', 1),
        (153, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (153, '['): ('singlequoted_escaped', 1),
        (153, ']'): ('singlequoted_escaped', 1),
        (153, '{'): ('singlequoted_escaped', 1),
        (153, '|'): ('singlequoted_escaped', 1),
        (153, '}'): ('singlequoted_escaped', 1),
        (153, '~'): ('singlequoted_escaped', 1),
        (154, '!'): ('singlequoted_escaped', 1),
        (154, '"'): ('singlequoted_escaped', 1),
        (154, '$'): ('singlequoted_escaped', 1),
        (154, '&'): ('singlequoted_escaped', 1),
        (154, "'"): ('singlequoted_escaped', 1),
        (154, '('): ('singlequoted_escaped', 1),
        (154, ')'): ('singlequoted_escaped', 1),
        (154, '+'): ('singlequoted_escaped', 1),
        (154, ','): ('singlequoted_escaped', 1),
        (154, '-'): ('singlequoted_escaped', 1),
        (154, ':'): ('singlequoted_escaped', 1),
        (154, ';'): ('singlequoted_escaped', 1),
        (154, '<'): ('singlequoted_escaped', 1),
        (154, '='): ('singlequoted_escaped', 1),
        (154, '>'): ('singlequoted_escaped', 1),
        (154, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (154, 'LITERAL'): ('singlequoted_escaped', 1),
        (154, 'VARQUANT'): ('singlequoted_escaped', 1),
        (154, 'VARTYPE'): ('singlequoted_escaped', 1),
        (154, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (154, '['): ('singlequoted_escaped', 1),
        (154, ']'): ('singlequoted_escaped', 1),
        (154, '{'): ('singlequoted_escaped', 1),
        (154, '|'): ('singlequoted_escaped', 1),
        (154, '}'): ('singlequoted_escaped', 1),
        (154, '~'): ('singlequoted_escaped', 1),
        (155, '!'): ('singlequoted_escaped', 1),
        (155, '"'): ('singlequoted_escaped', 1),
        (155, '$'): ('singlequoted_escaped', 1),
        (155, '&'): ('singlequoted_escaped', 1),
        (155, "'"): ('singlequoted_escaped', 1),
        (155, '('): ('singlequoted_escaped', 1),
        (155, ')'): ('singlequoted_escaped', 1),
        (155, '+'): ('singlequoted_escaped', 1),
        (155, ','): ('singlequoted_escaped', 1),
        (155, '-'): ('singlequoted_escaped', 1),
        (155, ':'): ('singlequoted_escaped', 1),
        (155, ';'): ('singlequoted_escaped', 1),
        (155, '<'): ('singlequoted_escaped', 1),
        (155, '='): ('singlequoted_escaped', 1),
        (155, '>'): ('singlequoted_escaped', 1),
        (155, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (155, 'LITERAL'): ('singlequoted_escaped', 1),
        (155, 'VARQUANT'): ('singlequoted_escaped', 1),
        (155, 'VARTYPE'): ('singlequoted_escaped', 1),
        (155, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (155, '['): ('singlequoted_escaped', 1),
        (155, ']'): ('singlequoted_escaped', 1),
        (155, '{'): ('singlequoted_escaped', 1),
        (155, '|'): ('singlequoted_escaped', 1),
        (155, '}'): ('singlequoted_escaped', 1),
        (155, '~'): ('singlequoted_escaped', 1),
        (156, '!'): ('singlequoted_escaped', 1),
        (156, '"'): ('singlequoted_escaped', 1),
        (156, '$'): ('singlequoted_escaped', 1),
        (156, '&'): ('singlequoted_escaped', 1),
        (156, "'"): ('singlequoted_escaped', 1),
        (156, '('): ('singlequoted_escaped', 1),
        (156, ')'): ('singlequoted_escaped', 1),
        (156, '+'): ('singlequoted_escaped', 1),
        (156, ','): ('singlequoted_escaped', 1),
        (156, '-'): ('singlequoted_escaped', 1),
        (156, ':'): ('singlequoted_escaped', 1),
        (156, ';'): ('singlequoted_escaped', 1),
        (156, '<'): ('singlequoted_escaped', 1),
        (156, '='): ('singlequoted_escaped', 1),
        (156, '>'): ('singlequoted_escaped', 1),
        (156, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (156, 'LITERAL'): ('singlequoted_escaped', 1),
        (156, 'VARQUANT'): ('singlequoted_escaped', 1),
        (156, 'VARTYPE'): ('singlequoted_escaped', 1),
        (156, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (156, '['): ('singlequoted_escaped', 1),
        (156, ']'): ('singlequoted_escaped', 1),
        (156, '{'): ('singlequoted_escaped', 1),
        (156, '|'): ('singlequoted_escaped', 1),
        (156, '}'): ('singlequoted_escaped', 1),
        (156, '~'): ('singlequoted_escaped', 1),
        (157, '!'): ('singlequoted_escaped', 1),
        (157, '"'): ('singlequoted_escaped', 1),
        (157, '$'): ('singlequoted_escaped', 1),
        (157, '&'): ('singlequoted_escaped', 1),
        (157, "'"): ('singlequoted_escaped', 1),
        (157, '('): ('singlequoted_escaped', 1),
        (157, ')'): ('singlequoted_escaped', 1),
        (157, '+'): ('singlequoted_escaped', 1),
        (157, ','): ('singlequoted_escaped', 1),
        (157, '-'): ('singlequoted_escaped', 1),
        (157, ':'): ('singlequoted_escaped', 1),
        (157, ';'): ('singlequoted_escaped', 1),
        (157, '<'): ('singlequoted_escaped', 1),
        (157, '='): ('singlequoted_escaped', 1),
        (157, '>'): ('singlequoted_escaped', 1),
        (157, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (157, 'LITERAL'): ('singlequoted_escaped', 1),
        (157, 'VARQUANT'): ('singlequoted_escaped', 1),
        (157, 'VARTYPE'): ('singlequoted_escaped', 1),
        (157, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (157, '['): ('singlequoted_escaped', 1),
        (157, ']'): ('singlequoted_escaped', 1),
        (157, '{'): ('singlequoted_escaped', 1),
        (157, '|'): ('singlequoted_escaped', 1),
        (157, '}'): ('singlequoted_escaped', 1),
        (157, '~'): ('singlequoted_escaped', 1),
        (158, '!'): ('singlequoted_escaped', 1),
        (158, '"'): ('singlequoted_escaped', 1),
        (158, '$'): ('singlequoted_escaped', 1),
        (158, '&'): ('singlequoted_escaped', 1),
        (158, "'"): ('singlequoted_escaped', 1),
        (158, '('): ('singlequoted_escaped', 1),
        (158, ')'): ('singlequoted_escaped', 1),
        (158, '+'): ('singlequoted_escaped', 1),
        (158, ','): ('singlequoted_escaped', 1),
        (158, '-'): ('singlequoted_escaped', 1),
        (158, ':'): ('singlequoted_escaped', 1),
        (158, ';'): ('singlequoted_escaped', 1),
        (158, '<'): ('singlequoted_escaped', 1),
        (158, '='): ('singlequoted_escaped', 1),
        (158, '>'): ('singlequoted_escaped', 1),
        (158, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (158, 'LITERAL'): ('singlequoted_escaped', 1),
        (158, 'VARQUANT'): ('singlequoted_escaped', 1),
        (158, 'VARTYPE'): ('singlequoted_escaped', 1),
        (158, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (158, '['): ('singlequoted_escaped', 1),
        (158, ']'): ('singlequoted_escaped', 1),
        (158, '{'): ('singlequoted_escaped', 1),
        (158, '|'): ('singlequoted_escaped', 1),
        (158, '}'): ('singlequoted_escaped', 1),
        (158, '~'): ('singlequoted_escaped', 1),
        (159, '!'): ('singlequoted_escaped', 1),
        (159, '"'): ('singlequoted_escaped', 1),
        (159, '$'): ('singlequoted_escaped', 1),
        (159, '&'): ('singlequoted_escaped', 1),
        (159, "'"): ('singlequoted_escaped', 1),
        (159, '('): ('singlequoted_escaped', 1),
        (159, ')'): ('singlequoted_escaped', 1),
        (159, '+'): ('singlequoted_escaped', 1),
        (159, ','): ('singlequoted_escaped', 1),
        (159, '-'): ('singlequoted_escaped', 1),
        (159, ':'): ('singlequoted_escaped', 1),
        (159, ';'): ('singlequoted_escaped', 1),
        (159, '<'): ('singlequoted_escaped', 1),
        (159, '='): ('singlequoted_escaped', 1),
        (159, '>'): ('singlequoted_escaped', 1),
        (159, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (159, 'LITERAL'): ('singlequoted_escaped', 1),
        (159, 'VARQUANT'): ('singlequoted_escaped', 1),
        (159, 'VARTYPE'): ('singlequoted_escaped', 1),
        (159, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (159, '['): ('singlequoted_escaped', 1),
        (159, ']'): ('singlequoted_escaped', 1),
        (159, '{'): ('singlequoted_escaped', 1),
        (159, '|'): ('singlequoted_escaped', 1),
        (159, '}'): ('singlequoted_escaped', 1),
        (159, '~'): ('singlequoted_escaped', 1),
        (160, '!'): ('singlequoted_escaped', 1),
        (160, '"'): ('singlequoted_escaped', 1),
        (160, '$'): ('singlequoted_escaped', 1),
        (160, '&'): ('singlequoted_escaped', 1),
        (160, "'"): ('singlequoted_escaped', 1),
        (160, '('): ('singlequoted_escaped', 1),
        (160, ')'): ('singlequoted_escaped', 1),
        (160, '+'): ('singlequoted_escaped', 1),
        (160, ','): ('singlequoted_escaped', 1),
        (160, '-'): ('singlequoted_escaped', 1),
        (160, ':'): ('singlequoted_escaped', 1),
        (160, ';'): ('singlequoted_escaped', 1),
        (160, '<'): ('singlequoted_escaped', 1),
        (160, '='): ('singlequoted_escaped', 1),
        (160, '>'): ('singlequoted_escaped', 1),
        (160, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (160, 'LITERAL'): ('singlequoted_escaped', 1),
        (160, 'VARQUANT'): ('singlequoted_escaped', 1),
        (160, 'VARTYPE'): ('singlequoted_escaped', 1),
        (160, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (160, '['): ('singlequoted_escaped', 1),
        (160, ']'): ('singlequoted_escaped', 1),
        (160, '{'): ('singlequoted_escaped', 1),
        (160, '|'): ('singlequoted_escaped', 1),
        (160, '}'): ('singlequoted_escaped', 1),
        (160, '~'): ('singlequoted_escaped', 1),
        (161, '!'): ('singlequoted_escaped', 1),
        (161, '"'): ('singlequoted_escaped', 1),
        (161, '$'): ('singlequoted_escaped', 1),
        (161, '&'): ('singlequoted_escaped', 1),
        (161, "'"): ('singlequoted_escaped', 1),
        (161, '('): ('singlequoted_escaped', 1),
        (161, ')'): ('singlequoted_escaped', 1),
        (161, '+'): ('singlequoted_escaped', 1),
        (161, ','): ('singlequoted_escaped', 1),
        (161, '-'): ('singlequoted_escaped', 1),
        (161, ':'): ('singlequoted_escaped', 1),
        (161, ';'): ('singlequoted_escaped', 1),
        (161, '<'): ('singlequoted_escaped', 1),
        (161, '='): ('singlequoted_escaped', 1),
        (161, '>'): ('singlequoted_escaped', 1),
        (161, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (161, 'LITERAL'): ('singlequoted_escaped', 1),
        (161, 'VARQUANT'): ('singlequoted_escaped', 1),
        (161, 'VARTYPE'): ('singlequoted_escaped', 1),
        (161, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (161, '['): ('singlequoted_escaped', 1),
        (161, ']'): ('singlequoted_escaped', 1),
        (161, '{'): ('singlequoted_escaped', 1),
        (161, '|'): ('singlequoted_escaped', 1),
        (161, '}'): ('singlequoted_escaped', 1),
        (161, '~'): ('singlequoted_escaped', 1),
        (162, '!'): ('singlequoted_escaped', 1),
        (162, '"'): ('singlequoted_escaped', 1),
        (162, '$'): ('singlequoted_escaped', 1),
        (162, '&'): ('singlequoted_escaped', 1),
        (162, "'"): ('singlequoted_escaped', 1),
        (162, '('): ('singlequoted_escaped', 1),
        (162, ')'): ('singlequoted_escaped', 1),
        (162, '+'): ('singlequoted_escaped', 1),
        (162, ','): ('singlequoted_escaped', 1),
        (162, '-'): ('singlequoted_escaped', 1),
        (162, ':'): ('singlequoted_escaped', 1),
        (162, ';'): ('singlequoted_escaped', 1),
        (162, '<'): ('singlequoted_escaped', 1),
        (162, '='): ('singlequoted_escaped', 1),
        (162, '>'): ('singlequoted_escaped', 1),
        (162, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (162, 'LITERAL'): ('singlequoted_escaped', 1),
        (162, 'VARQUANT'): ('singlequoted_escaped', 1),
        (162, 'VARTYPE'): ('singlequoted_escaped', 1),
        (162, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (162, '['): ('singlequoted_escaped', 1),
        (162, ']'): ('singlequoted_escaped', 1),
        (162, '{'): ('singlequoted_escaped', 1),
        (162, '|'): ('singlequoted_escaped', 1),
        (162, '}'): ('singlequoted_escaped', 1),
        (162, '~'): ('singlequoted_escaped', 1),
        (163, '!'): ('singlequoted_escaped', 1),
        (163, '"'): ('singlequoted_escaped', 1),
        (163, '$'): ('singlequoted_escaped', 1),
        (163, '&'): ('singlequoted_escaped', 1),
        (163, "'"): ('singlequoted_escaped', 1),
        (163, '('): ('singlequoted_escaped', 1),
        (163, ')'): ('singlequoted_escaped', 1),
        (163, '+'): ('singlequoted_escaped', 1),
        (163, ','): ('singlequoted_escaped', 1),
        (163, '-'): ('singlequoted_escaped', 1),
        (163, ':'): ('singlequoted_escaped', 1),
        (163, ';'): ('singlequoted_escaped', 1),
        (163, '<'): ('singlequoted_escaped', 1),
        (163, '='): ('singlequoted_escaped', 1),
        (163, '>'): ('singlequoted_escaped', 1),
        (163, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (163, 'LITERAL'): ('singlequoted_escaped', 1),
        (163, 'VARQUANT'): ('singlequoted_escaped', 1),
        (163, 'VARTYPE'): ('singlequoted_escaped', 1),
        (163, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (163, '['): ('singlequoted_escaped', 1),
        (163, ']'): ('singlequoted_escaped', 1),
        (163, '{'): ('singlequoted_escaped', 1),
        (163, '|'): ('singlequoted_escaped', 1),
        (163, '}'): ('singlequoted_escaped', 1),
        (163, '~'): ('singlequoted_escaped', 1),
        (164, '!'): ('singlequoted_escaped', 1),
        (164, '"'): ('singlequoted_escaped', 1),
        (164, '$'): ('singlequoted_escaped', 1),
        (164, '&'): ('singlequoted_escaped', 1),
        (164, "'"): ('singlequoted_escaped', 1),
        (164, '('): ('singlequoted_escaped', 1),
        (164, ')'): ('singlequoted_escaped', 1),
        (164, '+'): ('singlequoted_escaped', 1),
        (164, ','): ('singlequoted_escaped', 1),
        (164, '-'): ('singlequoted_escaped', 1),
        (164, ':'): ('singlequoted_escaped', 1),
        (164, ';'): ('singlequoted_escaped', 1),
        (164, '<'): ('singlequoted_escaped', 1),
        (164, '='): ('singlequoted_escaped', 1),
        (164, '>'): ('singlequoted_escaped', 1),
        (164, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (164, 'LITERAL'): ('singlequoted_escaped', 1),
        (164, 'VARQUANT'): ('singlequoted_escaped', 1),
        (164, 'VARTYPE'): ('singlequoted_escaped', 1),
        (164, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (164, '['): ('singlequoted_escaped', 1),
        (164, ']'): ('singlequoted_escaped', 1),
        (164, '{'): ('singlequoted_escaped', 1),
        (164, '|'): ('singlequoted_escaped', 1),
        (164, '}'): ('singlequoted_escaped', 1),
        (164, '~'): ('singlequoted_escaped', 1),
        (165, '!'): ('singlequoted_escaped', 1),
        (165, '"'): ('singlequoted_escaped', 1),
        (165, '$'): ('singlequoted_escaped', 1),
        (165, '&'): ('singlequoted_escaped', 1),
        (165, "'"): ('singlequoted_escaped', 1),
        (165, '('): ('singlequoted_escaped', 1),
        (165, ')'): ('singlequoted_escaped', 1),
        (165, '+'): ('singlequoted_escaped', 1),
        (165, ','): ('singlequoted_escaped', 1),
        (165, '-'): ('singlequoted_escaped', 1),
        (165, ':'): ('singlequoted_escaped', 1),
        (165, ';'): ('singlequoted_escaped', 1),
        (165, '<'): ('singlequoted_escaped', 1),
        (165, '='): ('singlequoted_escaped', 1),
        (165, '>'): ('singlequoted_escaped', 1),
        (165, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (165, 'LITERAL'): ('singlequoted_escaped', 1),
        (165, 'VARQUANT'): ('singlequoted_escaped', 1),
        (165, 'VARTYPE'): ('singlequoted_escaped', 1),
        (165, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (165, '['): ('singlequoted_escaped', 1),
        (165, ']'): ('singlequoted_escaped', 1),
        (165, '{'): ('singlequoted_escaped', 1),
        (165, '|'): ('singlequoted_escaped', 1),
        (165, '}'): ('singlequoted_escaped', 1),
        (165, '~'): ('singlequoted_escaped', 1),
        (166, '!'): ('singlequoted_escaped', 1),
        (166, '"'): ('singlequoted_escaped', 1),
        (166, '$'): ('singlequoted_escaped', 1),
        (166, '&'): ('singlequoted_escaped', 1),
        (166, "'"): ('singlequoted_escaped', 1),
        (166, '('): ('singlequoted_escaped', 1),
        (166, ')'): ('singlequoted_escaped', 1),
        (166, '+'): ('singlequoted_escaped', 1),
        (166, ','): ('singlequoted_escaped', 1),
        (166, '-'): ('singlequoted_escaped', 1),
        (166, ':'): ('singlequoted_escaped', 1),
        (166, ';'): ('singlequoted_escaped', 1),
        (166, '<'): ('singlequoted_escaped', 1),
        (166, '='): ('singlequoted_escaped', 1),
        (166, '>'): ('singlequoted_escaped', 1),
        (166, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (166, 'LITERAL'): ('singlequoted_escaped', 1),
        (166, 'VARQUANT'): ('singlequoted_escaped', 1),
        (166, 'VARTYPE'): ('singlequoted_escaped', 1),
        (166, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (166, '['): ('singlequoted_escaped', 1),
        (166, ']'): ('singlequoted_escaped', 1),
        (166, '{'): ('singlequoted_escaped', 1),
        (166, '|'): ('singlequoted_escaped', 1),
        (166, '}'): ('singlequoted_escaped', 1),
        (166, '~'): ('singlequoted_escaped', 1),
        (167, '!'): ('singlequoted_escaped', 1),
        (167, '"'): ('singlequoted_escaped', 1),
        (167, '$'): ('singlequoted_escaped', 1),
        (167, '&'): ('singlequoted_escaped', 1),
        (167, "'"): ('singlequoted_escaped', 1),
        (167, '('): ('singlequoted_escaped', 1),
        (167, ')'): ('singlequoted_escaped', 1),
        (167, '+'): ('singlequoted_escaped', 1),
        (167, ','): ('singlequoted_escaped', 1),
        (167, '-'): ('singlequoted_escaped', 1),
        (167, ':'): ('singlequoted_escaped', 1),
        (167, ';'): ('singlequoted_escaped', 1),
        (167, '<'): ('singlequoted_escaped', 1),
        (167, '='): ('singlequoted_escaped', 1),
        (167, '>'): ('singlequoted_escaped', 1),
        (167, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (167, 'LITERAL'): ('singlequoted_escaped', 1),
        (167, 'VARQUANT'): ('singlequoted_escaped', 1),
        (167, 'VARTYPE'): ('singlequoted_escaped', 1),
        (167, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (167, '['): ('singlequoted_escaped', 1),
        (167, ']'): ('singlequoted_escaped', 1),
        (167, '{'): ('singlequoted_escaped', 1),
        (167, '|'): ('singlequoted_escaped', 1),
        (167, '}'): ('singlequoted_escaped', 1),
        (167, '~'): ('singlequoted_escaped', 1),
        (168, '!'): ('singlequoted_escaped', 1),
        (168, '"'): ('singlequoted_escaped', 1),
        (168, '$'): ('singlequoted_escaped', 1),
        (168, '&'): ('singlequoted_escaped', 1),
        (168, "'"): ('singlequoted_escaped', 1),
        (168, '('): ('singlequoted_escaped', 1),
        (168, ')'): ('singlequoted_escaped', 1),
        (168, '+'): ('singlequoted_escaped', 1),
        (168, ','): ('singlequoted_escaped', 1),
        (168, '-'): ('singlequoted_escaped', 1),
        (168, ':'): ('singlequoted_escaped', 1),
        (168, ';'): ('singlequoted_escaped', 1),
        (168, '<'): ('singlequoted_escaped', 1),
        (168, '='): ('singlequoted_escaped', 1),
        (168, '>'): ('singlequoted_escaped', 1),
        (168, 'IDENTIFIER'): ('singlequoted_escaped', 1),
        (168, 'LITERAL'): ('singlequoted_escaped', 1),
        (168, 'VARQUANT'): ('singlequoted_escaped', 1),
        (168, 'VARTYPE'): ('singlequoted_escaped', 1),
        (168, 'WHITESPACE'): ('singlequoted_escaped', 1),
        (168, '['): ('singlequoted_escaped', 1),
        (168, ']'): ('singlequoted_escaped', 1),
        (168, '{'): ('singlequoted_escaped', 1),
        (168, '|'): ('singlequoted_escaped', 1),
        (168, '}'): ('singlequoted_escaped', 1),
        (168, '~'): ('singlequoted_escaped', 1)
    }
    _goto = {
        (0, '_33?'): 2, (0, 'statement'): 1, (2, '_10*'): 22, (2, '_3?'): 5,
        (2, 'assignment'): 4, (2, 'declaration'): 3, (2, 'scope'): 13,
        (5, 'quantifier'): 6, (7, 'type'): 8, (9, 'identifier'): 10,
        (10, '_33?'): 11, (11, '_6*'): 12, (15, '_33?'): 16,
        (16, 'identifier'): 17, (17, '_33?'): 18,
        (22, 'assignmentvarwithop'): 23, (22, 'assignmentvarwithoutop'): 26,
        (22, 'identifier'): 28, (23, '_(55)'): 102, (23, '_56+'): 96,
        (23, 'doublequoted'): 100, (23, 'funcall'): 98, (23, 'literal'): 97,
        (23, 'singlequoted'): 101, (23, 'value'): 91, (23, 'valuelist'): 24,
        (23, 'varcall'): 99, (28, '_33?'): 29, (29, '_14?'): 30,
        (29, 'condition'): 32, (30, 'assignmentop'): 31, (34, '_33?'): 35,
        (35, 'conjunction'): 48, (35, 'disjunction'): 36,
        (35, 'identifier'): 58, (35, 'logicunop'): 70, (35, 'test'): 53,
        (36, '_33?'): 37, (38, '_33?'): 39, (46, '_33?'): 47, (48, '_33?'): 49,
        (49, 'disjunctionop'): 50, (50, '_33?'): 51, (51, 'conjunction'): 52,
        (51, 'identifier'): 58, (51, 'logicunop'): 70, (51, 'test'): 53,
        (53, '_33?'): 54, (54, 'conjunctionop'): 55, (55, '_33?'): 56,
        (56, 'identifier'): 58, (56, 'logicunop'): 70, (56, 'test'): 57,
        (58, '_33?'): 59, (59, 'testop'): 60, (60, '_33?'): 61,
        (61, '_(55)'): 102, (61, '_56+'): 96, (61, 'doublequoted'): 100,
        (61, 'funcall'): 98, (61, 'literal'): 97, (61, 'singlequoted'): 101,
        (61, 'value'): 62, (61, 'varcall'): 99, (63, '_33?'): 64,
        (64, 'conjunction'): 48, (64, 'disjunction'): 65,
        (64, 'identifier'): 58, (64, 'logicunop'): 70, (64, 'test'): 53,
        (65, '_33?'): 66, (69, '_(55)'): 102, (69, '_56+'): 96,
        (69, 'doublequoted'): 100, (69, 'funcall'): 98, (69, 'literal'): 97,
        (69, 'singlequoted'): 101, (69, 'value'): 95, (69, 'varcall'): 99,
        (70, '_33?'): 71, (71, 'conjunction'): 48, (71, 'disjunction'): 72,
        (71, 'identifier'): 58, (71, 'logicunop'): 70, (71, 'test'): 53,
        (91, '_53*'): 92, (92, '_33?'): 93, (94, '_33?'): 128,
        (96, '_(55)'): 103, (96, 'doublequoted'): 100, (96, 'funcall'): 98,
        (96, 'literal'): 97, (96, 'singlequoted'): 101, (96, 'varcall'): 99,
        (104, '_58*'): 105, (105, '_(57)'): 112,
        (105, 'doublequoted_escaped'): 109, (105, 'funcall'): 110,
        (105, 'literal'): 107, (105, 'varcall'): 111, (113, '_60*'): 114,
        (114, '_(59)'): 119, (114, 'literal'): 116,
        (114, 'singlequoted_escaped'): 118, (124, 'identifier'): 130,
        (125, '_33?'): 126, (126, '_(55)'): 102, (126, '_56+'): 96,
        (126, 'doublequoted'): 100, (126, 'funcall'): 98, (126, 'literal'): 97,
        (126, 'singlequoted'): 101, (126, 'value'): 127, (126, 'varcall'): 99,
        (127, '_53*'): 94, (131, '_(55)'): 102, (131, '_56+'): 96,
        (131, 'doublequoted'): 100, (131, 'funcall'): 98, (131, 'literal'): 97,
        (131, 'singlequoted'): 101, (131, 'value'): 132, (131, 'varcall'): 99
    }
    _shift = {
        (0, 'WHITESPACE'): 68, (1, EOF): 169, (2, 'VARSCOPE'): 19,
        (5, 'VARQUANT'): 20, (6, 'WHITESPACE'): 7, (7, 'VARTYPE'): 21,
        (8, 'WHITESPACE'): 9, (9, 'IDENTIFIER'): 33, (10, 'WHITESPACE'): 68,
        (12, ','): 15, (13, 'WHITESPACE'): 14, (15, 'WHITESPACE'): 68,
        (16, 'IDENTIFIER'): 33, (17, 'WHITESPACE'): 68, (22, 'IDENTIFIER'): 33,
        (23, '"'): 104, (23, '$'): 124, (23, "'"): 113, (23, ','): 25,
        (23, 'IDENTIFIER'): 120, (23, 'LITERAL'): 121, (23, 'VARQUANT'): 123,
        (23, 'VARTYPE'): 122, (26, ','): 27, (28, 'WHITESPACE'): 68,
        (29, '['): 34, (30, '+'): 42, (30, '-'): 45, (30, ':'): 40,
        (30, '='): 44, (34, 'WHITESPACE'): 68, (35, '!'): 73, (35, '('): 63,
        (35, 'IDENTIFIER'): 33, (36, 'WHITESPACE'): 68, (37, ']'): 38,
        (38, 'WHITESPACE'): 68, (40, '='): 41, (42, '='): 43, (45, '='): 46,
        (46, 'WHITESPACE'): 68, (48, 'WHITESPACE'): 68, (49, ';'): 74,
        (49, '|'): 75, (50, 'WHITESPACE'): 68, (51, '!'): 73, (51, '('): 63,
        (51, 'IDENTIFIER'): 33, (53, 'WHITESPACE'): 68, (54, '&'): 78,
        (54, ','): 77, (55, 'WHITESPACE'): 68, (56, '!'): 73, (56, '('): 63,
        (56, 'IDENTIFIER'): 33, (58, 'WHITESPACE'): 68, (59, '!'): 82,
        (59, '<'): 84, (59, '='): 80, (59, '>'): 85, (59, '~'): 88,
        (60, 'WHITESPACE'): 68, (61, '"'): 104, (61, '$'): 124, (61, "'"): 113,
        (61, 'IDENTIFIER'): 120, (61, 'LITERAL'): 121, (61, 'VARQUANT'): 123,
        (61, 'VARTYPE'): 122, (63, 'WHITESPACE'): 68, (64, '!'): 73,
        (64, '('): 63, (64, 'IDENTIFIER'): 33, (65, 'WHITESPACE'): 68,
        (66, ')'): 67, (69, '"'): 104, (69, '$'): 124, (69, "'"): 113,
        (69, 'IDENTIFIER'): 120, (69, 'LITERAL'): 121, (69, 'VARQUANT'): 123,
        (69, 'VARTYPE'): 122, (70, 'WHITESPACE'): 68, (71, '!'): 73,
        (71, '('): 63, (71, 'IDENTIFIER'): 33, (75, '|'): 76, (78, '&'): 79,
        (80, '='): 81, (80, '~'): 90, (82, '='): 83, (84, '='): 86,
        (85, '='): 87, (88, '='): 89, (92, 'WHITESPACE'): 69,
        (94, 'WHITESPACE'): 69, (96, '"'): 104, (96, '$'): 124, (96, "'"): 113,
        (96, 'IDENTIFIER'): 120, (96, 'LITERAL'): 121, (96, 'VARQUANT'): 123,
        (96, 'VARTYPE'): 122, (105, '!'): 134, (105, '"'): 106,
        (105, '$'): 124, (105, '&'): 141, (105, "'"): 148, (105, '+'): 146,
        (105, ','): 142, (105, '-'): 147, (105, ':'): 144, (105, ';'): 143,
        (105, '<'): 136, (105, '='): 135, (105, '>'): 137,
        (105, 'IDENTIFIER'): 120, (105, 'LITERAL'): 121,
        (105, 'VARQUANT'): 123, (105, 'VARTYPE'): 122,
        (105, 'WHITESPACE'): 108, (105, '['): 138, (105, ']'): 139,
        (105, '|'): 140, (105, '~'): 145, (114, '!'): 149, (114, '"'): 163,
        (114, '$'): 164, (114, '&'): 156, (114, "'"): 115, (114, '('): 165,
        (114, ')'): 166, (114, '+'): 161, (114, ','): 157, (114, '-'): 162,
        (114, ':'): 159, (114, ';'): 158, (114, '<'): 151, (114, '='): 150,
        (114, '>'): 152, (114, 'IDENTIFIER'): 120, (114, 'LITERAL'): 121,
        (114, 'VARQUANT'): 123, (114, 'VARTYPE'): 122,
        (114, 'WHITESPACE'): 117, (114, '['): 153, (114, ']'): 154,
        (114, '{'): 167, (114, '|'): 155, (114, '}'): 168, (114, '~'): 160,
        (124, '('): 125, (124, 'IDENTIFIER'): 33, (124, '{'): 131,
        (125, 'WHITESPACE'): 68, (126, '"'): 104, (126, '$'): 124,
        (126, "'"): 113, (126, 'IDENTIFIER'): 120, (126, 'LITERAL'): 121,
        (126, 'VARQUANT'): 123, (126, 'VARTYPE'): 122, (128, ')'): 129,
        (131, '"'): 104, (131, '$'): 124, (131, "'"): 113,
        (131, 'IDENTIFIER'): 120, (131, 'LITERAL'): 121,
        (131, 'VARQUANT'): 123, (131, 'VARTYPE'): 122, (132, '}'): 133
    }

    def __init__(self, max_err=None, errcorr_pre=4, errcorr_post=4):
        """Create a new parser instance.

        The constructor arguments are all optional, they control the
        handling of parse errors: `max_err` can be given to bound the
        number of errors reported during one run of the parser.
        `errcorr_pre` controls how many tokens before an invalid token
        the parser considers when trying to repair the input.
        `errcorr_post` controls how far beyond an invalid token the
        parser reads when evaluating the quality of an attempted
        repair.
        """
        self.max_err = max_err
        self.m = errcorr_pre
        self.n = errcorr_post

    @staticmethod
    def leaves(tree):
        """Iterate over the leaves of a parse tree.

        This function can be used to reconstruct the input from a
        parse tree.
        """
        if tree[0] in Parser.terminals:
            yield tree
        else:
            for x in tree[1:]:
                for t in Parser.leaves(x):
                    yield t

    def _parse(self, input, stack, state):
        """Internal function to construct a parse tree.

        'Input' is the input token stream, 'stack' is the inital stack
        and 'state' is the inital state of the automaton.

        Returns a 4-tuple (done, count, state, error).  'done' is a
        boolean indicationg whether parsing is completed, 'count' is
        number of successfully shifted tokens, and 'error' is None on
        success or else the first token which could not be parsed.
        """
        read_next = True
        count = 0
        while state != self._halting_state:
            if read_next:
                try:
                    lookahead = next(input)
                except StopIteration:
                    return (False,count,state,None)
                read_next = False
            token = lookahead[0]

            if (state,token) in self._shift:
                stack.append((state,lookahead))
                state = self._shift[(state,token)]
                read_next = True
                count += 1
            elif (state,token) in self._reduce:
                X,n = self._reduce[(state,token)]
                if n > 0:
                    state = stack[-n][0]
                    tree = [ X ]
                    for s in stack[-n:]:
                        if s[1][0] in self._transparent:
                            tree.extend(s[1][1:])
                        else:
                            tree.append(s[1])
                    tree = tuple(tree)
                    del stack[-n:]
                else:
                    tree = (X,)
                stack.append((state,tree))
                state = self._goto[(state,X)]
            else:
                return (False,count,state,lookahead)
        return (True,count,state,None)

    def _try_parse(self, input, stack, state):
        count = 0
        while state != self._halting_state and count < len(input):
            token = input[count][0]

            if (state,token) in self._shift:
                stack.append(state)
                state = self._shift[(state,token)]
                count += 1
            elif (state,token) in self._reduce:
                X,n = self._reduce[(state,token)]
                if n > 0:
                    state = stack[-n]
                    del stack[-n:]
                stack.append(state)
                state = self._goto[(state,X)]
            else:
                break
        return count

    def parse(self, input):
        """Parse the tokens from `input` and construct a parse tree.

        `input` must be an interable over tuples.  The first element
        of each tuple must be a terminal symbol of the grammar which
        is used for parsing.  All other element of the tuple are just
        copied into the constructed parse tree.

        If `input` is invalid, a ParseErrors exception is raised.
        Otherwise the function returns the parse tree.
        """
        errors = []
        input = chain(input, [(self.EOF,)])
        stack = []
        state = 0
        while True:
            done,_,state,lookahead = self._parse(input, stack, state)
            if done:
                break

            expect = [ t for s,t in list(self._reduce.keys())+list(self._shift.keys())
                       if s == state ]
            errors.append((lookahead, expect))
            if self.max_err is not None and len(errors) >= self.max_err:
                raise self.ParseErrors(errors, None)

            queue = []
            def split_input(m, stack, lookahead, input, queue):
                for s in stack:
                    for t in self.leaves(s[1]):
                        queue.append(t)
                        if len(queue) > m:
                            yield queue.pop(0)
                queue.append(lookahead)
            in2 = split_input(self.m, stack, lookahead, input, queue)
            stack = []
            done,_,state,lookahead = self._parse(in2, stack, 0)
            m = len(queue)
            for i in range(0, self.n):
                try:
                    queue.append(next(input))
                except StopIteration:
                    break

            def vary_queue(queue, m):
                for i in range(m-1, -1, -1):
                    for t in self.terminals:
                        yield queue[:i]+[(t,)]+queue[i:]
                    if queue[i][0] == self.EOF:
                        continue
                    for t in self.terminals:
                        if t == queue[i]:
                            continue
                        yield queue[:i]+[(t,)]+queue[i+1:]
                    yield queue[:i]+queue[i+1:]
            best_val = len(queue)-m+1
            best_queue = queue
            for q2 in vary_queue(queue, m):
                pos = self._try_parse(q2, [ s[0] for s in stack ], state)
                val = len(q2) - pos
                if val < best_val:
                    best_val = val
                    best_queue = q2
                    if val == len(q2):
                        break
            if best_val >= len(queue)-m+1:
                raise self.ParseErrors(errors, None)
            input = chain(best_queue, input)

        tree = stack[0][1]
        if errors:
            raise self.ParseErrors(errors, tree)
        return tree
