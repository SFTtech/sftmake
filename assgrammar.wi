assignment: WHITESPACE? (assignmentvarwithop ',' | assignmentvarwithoutop ',')* assignmentvarwithop valuelist EOF;
assignmentvarwithop: identifier WHITESPACE? condition? assignmentop;
assignmentvarwithoutop: identifier WHITESPACE? condition?;

identifier: ALPHAALPHANUM;

condition: '[' WHITESPACE? disjunction WHITESPACE? ']' WHITESPACE?;

assignmentop: (':' '=') | ('+' '=') | ('=') | ('-' '=') WHITESPACE?;

disjunction: conjunction (WHITESPACE? disjunctionop WHITESPACE? conjunction);
conjunction: test (WHITESPACE? conjunctionop WHITESPACE? test);
test: (identifier WHITESPACE? testop WHITESPACE? value) | ('(' WHITESPACE? disjunction WHITESPACE? ')') | (logicunop WHITESPACE? disjunction);

logicunop: '!';
disjunctionop: (';') | ('|') | ('|' '|');
conjunctionop: (',') | ('&') | ('&' '&');
testop: ('=') | ('=' '=') | ('!' '=') | ('<') | ('>') | ('<' '=') | ('>' '=') | ('~' '=') | ('=' '~');

valuelist: value (WHITESPACE value)* WHITESPACE? |  ;
#value: (ALPHABETIC | DIGIT | OTHER)+;

value: (literal | funcall | varcall | dblquoted)+;

literal: ALPHAALPHANUM | LITERAL;
funcall: '$' '(' WHITESPACE? value (WHITESPACE value)* WHITESPACE? ')';
varcall: ('$' identifier) | ('$' '{' value '}');
dblquoted: '"' (literal | funcall | varcall | WHITESPACE | '\'')* '"';
quoted: '\'' literal? '\''
